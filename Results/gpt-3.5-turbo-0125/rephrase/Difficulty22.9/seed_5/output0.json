{
    "adjacency_matrix": [
        [
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0
        ]
    ],
    "prompt_init": [
        "You will receive a text. Your task is to rephrase this text without modifying its meaning. Just output your new text, nothing else. Here is the text:"
    ],
    "prompt_update": [
        "You will receive a text. Your task is to rephrase this text without modifying its meaning. Just output your new text, nothing else. Here is the text:"
    ],
    "personality_list": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "format_prompt": [
        ""
    ],
    "initial_story": "musculoskeletal diseases and cognitive impairments in patients lead todifficulties in movement as well as negative effects on their psychologicalhealth. clinical gait analysis, a vital tool for early diagnosis and treatment,traditionally relies on expensive optical motion capture systems. recentadvances in computer vision and deep learning have opened the door to moreaccessible and cost-effective alternatives. this paper introduces a novelspatio-temporal transformer network to estimate critical gait parameters fromrgb videos captured by a single-view camera. empirical evaluations on a publicdataset of cerebral palsy patients indicate that the proposed frameworksurpasses current state-of-the-art approaches and show significant improvementsin predicting general gait parameters (including walking speed, gait deviationindex - gdi, and knee flexion angle at maximum extension), while utilizingfewer parameters and alleviating the need for manual feature extraction. ",
    "stories": [
        [
            "Patients with musculoskeletal diseases and cognitive impairments often face challenges in movement and experience negative effects on their psychological well-being. Clinical gait analysis, an important tool for early diagnosis and treatment, traditionally depends on costly optical motion capture systems. However, recent advancements in computer vision and deep learning have made more accessible and cost-effective options available. This study introduces a new spatial-temporal transformer network for estimating critical gait parameters from RGB videos captured by a single-view camera. Results from evaluations on a public dataset of cerebral palsy patients demonstrate that the proposed framework outperforms current state-of-the-art methods and offers significant enhancements in predicting key gait parameters, such as walking speed, gait deviation index (GDI), and knee flexion angle at maximum extension. Additionally, this approach utilizes fewer parameters and reduces the need for manual feature extraction."
        ],
        [
            "Patients with musculoskeletal disorders and cognitive impairments often struggle with movement difficulties and suffer negative impacts on their mental well-being. Clinical gait analysis is crucial for early diagnosis and treatment, but has traditionally relied on expensive optical motion capture systems. However, recent advances in computer vision and deep learning have made more affordable and accessible options available. This study introduces a novel spatial-temporal transformer network for estimating important gait parameters from RGB videos taken with a single camera. Results from tests on a public dataset of cerebral palsy patients show that the new framework surpasses current best methods and provides significant improvements in predicting key gait parameters, such as walking speed, gait deviation index (GDI), and knee flexion angle at full extension. Moreover, this approach uses fewer parameters and decreases the need for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments often face challenges with movement and experience negative effects on their mental health. Early diagnosis and treatment of these issues require clinical gait analysis, which has traditionally relied on costly optical motion capture systems. However, advancements in computer vision and deep learning have made more affordable options available. This research introduces a unique spatial-temporal transformer network for estimating important gait metrics from RGB videos captured with a single camera. Testing on a public dataset of cerebral palsy patients demonstrates that this new framework outperforms current methods and improves predictions of key gait parameters, such as walking speed, GDI, and knee flexion angle. Additionally, this approach simplifies the process by using fewer parameters and reducing the need for manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with movement and suffer negative effects on their mental health. Early detection and treatment of these issues require clinical gait analysis, typically done with expensive optical motion capture systems. However, advancements in computer vision and deep learning have made more affordable options available. This study presents a novel spatial-temporal transformer network for calculating important gait measurements from RGB videos taken with a single camera. Testing on a public dataset of cerebral palsy patients shows that this new framework performs better than current methods and enhances predictions of key gait parameters like walking speed, GDI, and knee flexion angle. Moreover, this method simplifies the process by using fewer parameters and minimizing the need for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments often face challenges with movement and experience negative effects on their mental well-being. Detecting and treating these issues early on typically involves clinical gait analysis, which has traditionally been conducted with costly optical motion capture systems. However, recent developments in computer vision and deep learning have led to more cost-effective alternatives. This research introduces a novel spatial-temporal transformer network designed to assess crucial gait metrics using RGB videos captured with a single camera. Evaluation on a publicly available dataset of patients with cerebral palsy demonstrates that this innovative framework outperforms existing techniques and improves the accuracy of predicting key gait parameters such as walking speed, GDI, and knee flexion angle. Furthermore, this approach streamlines the process by utilizing fewer parameters and reducing the need for manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with movement and suffer from negative impacts on their mental well-being. The early detection and treatment of these issues usually require clinical gait analysis, traditionally done with expensive optical motion capture systems. However, recent advancements in computer vision and deep learning have resulted in more affordable options. This study presents a new spatial-temporal transformer network that can analyze important gait metrics using RGB videos from a single camera. Testing on a dataset of cerebral palsy patients shows that this innovative framework performs better than current methods and enhances the accuracy of predicting key gait parameters like walking speed, GDI, and knee flexion angle. Additionally, this approach simplifies the process by using fewer parameters and decreasing the need for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments often face challenges with movement and experience negative effects on their mental well-being. Identifying and treating these issues early typically involves clinical gait analysis, traditionally carried out with costly optical motion capture systems. However, recent progress in computer vision and deep learning has led to more affordable alternatives. This research introduces a novel spatial-temporal transformer network capable of analyzing essential gait measurements using RGB videos from a single camera. Evaluation on a dataset of cerebral palsy patients demonstrates that this innovative framework outperforms current approaches and improves the precision of predicting crucial gait parameters such as walking speed, GDI, and knee flexion angle. Furthermore, this method streamlines the process by using fewer parameters and reducing the necessity for manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with movement and suffer negative effects on their mental well-being. Early identification and treatment of these issues usually involve clinical gait analysis, traditionally done with expensive optical motion capture systems. However, advancements in computer vision and deep learning have resulted in more cost-effective options. This study presents a new spatial-temporal transformer network that can analyze important gait measurements using RGB videos from a single camera. Testing on a dataset of cerebral palsy patients shows that this innovative framework performs better than current methods and enhances the accuracy of predicting key gait parameters like walking speed, GDI, and knee flexion angle. Additionally, this approach simplifies the process by using fewer parameters and reducing the need for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments often face challenges with movement and experience negative impacts on their mental health. Identifying and treating these issues early typically involves clinical gait analysis, traditionally conducted with costly optical motion capture systems. However, advancements in computer vision and deep learning have led to more affordable alternatives. This research introduces a novel spatial-temporal transformer network capable of analyzing crucial gait measurements using RGB videos from a single camera. Evaluation on a dataset of cerebral palsy patients demonstrates that this innovative framework outperforms current techniques and improves the accuracy of predicting essential gait parameters such as walking speed, GDI, and knee flexion angle. Furthermore, this approach streamlines the process by utilizing fewer parameters and reducing the necessity for manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with movement and suffer from negative effects on their mental well-being. Early identification and treatment of these issues usually involve clinical gait analysis, traditionally done with costly optical motion capture systems. However, advancements in computer vision and deep learning have resulted in more affordable options. This study presents a unique spatial-temporal transformer network that can analyze important gait measurements using RGB videos from a single camera. Testing on a group of cerebral palsy patients shows that this innovative framework performs better than current methods and enhances the accuracy of predicting key gait parameters like walking speed, GDI, and knee flexion angle. Additionally, this approach simplifies the process by using fewer parameters and reducing the need for manual feature extraction."
        ],
        [
            "Individuals who have musculoskeletal disorders and cognitive impairments often face challenges with movement and experience negative impacts on their mental well-being. The early detection and treatment of these issues typically involve clinical gait analysis, which has traditionally been conducted with expensive optical motion capture systems. However, advancements in computer vision and deep learning have led to more cost-effective alternatives. This research introduces a novel spatial-temporal transformer network that can analyze important gait metrics using RGB videos from a single camera. Testing on a cohort of cerebral palsy patients demonstrates that this innovative framework outperforms current methods and improves the accuracy of predicting key gait parameters such as walking speed, GDI, and knee flexion angle. Moreover, this approach streamlines the process by using fewer parameters and minimizing the need for manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with movement and suffer negative effects on their mental well-being. The identification and treatment of these issues typically require clinical gait analysis, traditionally done with expensive optical motion capture systems. However, advancements in computer vision and deep learning have resulted in more affordable options. This study presents a new spatial-temporal transformer network that can analyze important gait metrics using RGB videos from a single camera. Testing on a group of cerebral palsy patients shows that this innovative framework performs better than current methods and enhances the accuracy of predicting essential gait parameters like walking speed, GDI, and knee flexion angle. Additionally, this approach simplifies the process by using fewer parameters and reducing the need for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments often face difficulties with movement and experience negative impacts on their mental health. Diagnosing and addressing these challenges typically involves clinical gait analysis, traditionally carried out with costly optical motion capture systems. However, advances in computer vision and deep learning have led to more cost-effective alternatives. This research introduces a novel spatial-temporal transformer network capable of analyzing crucial gait metrics using RGB videos from a single camera. Evaluation on a cohort of cerebral palsy patients demonstrates that this innovative framework outperforms current techniques and improves the accuracy of predicting key gait parameters such as walking speed, GDI, and knee flexion angle. Furthermore, this approach streamlines the process by utilizing fewer parameters and decreasing the reliance on manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with movement and suffer from negative effects on their mental health. Identifying and addressing these issues typically involves clinical analysis of walking patterns, traditionally done with expensive optical motion capture systems. However, advancements in computer vision and deep learning have resulted in more affordable options. This study presents a new spatial-temporal transformer network that can analyze important walking metrics using RGB videos from just one camera. Testing on a group of cerebral palsy patients shows that this innovative method performs better than current techniques and enhances the accuracy of predicting crucial walking parameters like speed, GDI, and knee flexion angle. Additionally, this approach simplifies the process by using fewer parameters and reducing the need for manual feature extraction."
        ],
        [
            "Individuals suffering from musculoskeletal disorders and cognitive impairments often face difficulties with movement, leading to negative impacts on their mental well-being. The conventional method of analyzing walking patterns involves costly optical motion capture systems, but recent advancements in computer vision and deep learning have made more affordable options available. A new spatial-temporal transformer network has been developed in this study, which can assess important walking metrics using RGB videos from a single camera. Testing on a group of cerebral palsy patients has demonstrated that this novel approach outperforms current techniques, improving the accuracy of predicting key walking parameters such as speed, GDI, and knee flexion angle. Furthermore, this method streamlines the process by utilizing fewer parameters and decreasing the reliance on manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with movement, impacting their mental well-being. Traditional analysis of walking patterns involves expensive optical motion capture systems, but advancements in computer vision and deep learning have created more affordable options. A spatial-temporal transformer network has been developed to evaluate walking metrics using RGB videos from a single camera. Testing on cerebral palsy patients showed that this new approach is more effective than current techniques, improving the accuracy of predicting speed, GDI, and knee flexion angle. Additionally, this method simplifies the process by using fewer parameters and reducing the need for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently encounter difficulties with movement, which can have a negative impact on their mental health. Although traditional analysis of walking patterns typically involves costly optical motion capture systems, recent advancements in computer vision and deep learning have led to more cost-effective alternatives. A spatial-temporal transformer network has been created to assess walking metrics using RGB videos from just one camera. Trials conducted on patients with cerebral palsy have demonstrated that this innovative approach is superior to current methods, enhancing the accuracy of predicting speed, GDI, and knee flexion angle. Furthermore, this technique streamlines the process by using fewer parameters and reducing the reliance on manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often face challenges with movement, impacting their mental health. While traditional analysis of walking patterns typically requires expensive optical motion capture systems, recent advancements in computer vision and deep learning have resulted in more affordable options. A spatial-temporal transformer network has been developed to evaluate walking metrics using RGB videos from a single camera. Trials on individuals with cerebral palsy have shown that this new approach is better than current methods, improving the accuracy of predicting speed, GDI, and knee flexion angle. Additionally, this technique simplifies the process by using fewer parameters and reducing the need for manual feature extraction."
        ],
        [
            "Individuals who have musculoskeletal disorders and cognitive impairments often struggle with movement, which can have an impact on their mental well-being. Traditional analysis of walking patterns typically involves costly optical motion capture systems, but recent advances in computer vision and deep learning have led to more affordable options. A spatial-temporal transformer network has been created to assess walking metrics using RGB videos from a single camera. Testing on people with cerebral palsy has demonstrated that this new approach outperforms current methods, enhancing the accuracy of predicting speed, GDI, and knee flexion angle. Furthermore, this technique streamlines the process by utilizing fewer parameters and reducing the necessity for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments often struggle with movement, impacting their mental well-being. Traditional analysis of walking patterns involves expensive optical motion capture systems, but advancements in computer vision and deep learning have made more affordable options available. A spatial-temporal transformer network has been developed to evaluate walking metrics using RGB videos from a single camera. Testing on individuals with cerebral palsy has shown that this new approach surpasses current methods, improving the accuracy of predicting speed, GDI, and knee flexion angle. Additionally, this technique simplifies the process by using fewer parameters and minimizing the need for manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may face challenges with movement, which can affect their mental health. Traditional assessment of walking patterns typically involves costly optical motion capture systems, but advancements in computer vision and deep learning have made more affordable options accessible. A spatial-temporal transformer network has been created to analyze walking metrics using RGB videos from a single camera. Trials on individuals with cerebral palsy have demonstrated that this new approach outperforms current techniques, enhancing the accuracy of speed, GDI, and knee flexion angle predictions. Furthermore, this method streamlines the process by utilizing fewer parameters and reducing the necessity for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may struggle with movement, potentially impacting their mental well-being. While traditional evaluation of walking patterns usually requires expensive optical motion capture systems, advancements in computer vision and deep learning have made more affordable alternatives available. A spatial-temporal transformer network has been developed to assess walking metrics using RGB videos from a single camera. Tests on individuals with cerebral palsy have shown that this innovative approach surpasses current methods, improving the precision of speed, GDI, and knee flexion angle predictions. Additionally, this technique simplifies the process by using fewer parameters and reducing the need for manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may find it challenging to move, which can affect their mental well-being. Traditional assessment of walking patterns typically involves costly optical motion capture systems, but advances in computer vision and deep learning have made more cost-effective options available. A spatial-temporal transformer network has been created to analyze walking metrics using RGB videos from just one camera. Trials on individuals with cerebral palsy have demonstrated that this new approach outperforms current techniques, enhancing the accuracy of predictions for speed, GDI, and knee flexion angles. Moreover, this method streamlines the process by using fewer parameters and minimizing the need for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face difficulties in mobility, impacting their mental well-being. While traditional assessment methods for walking patterns are expensive, advancements in computer vision and deep learning have provided more affordable alternatives. A spatial-temporal transformer network has been developed to analyze walking metrics using RGB videos from a single camera. Tests on individuals with cerebral palsy have shown that this new method surpasses current techniques, improving the precision of predictions for speed, GDI, and knee flexion angles. Additionally, this approach simplifies the process by requiring fewer parameters and reducing the necessity for manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may experience challenges with mobility, affecting their mental health. Although traditional assessments for walking patterns can be costly, advancements in computer vision and deep learning have introduced more cost-effective options. A spatial-temporal transformer network has been created to assess walking metrics using RGB videos from just one camera. Trials on individuals with cerebral palsy have demonstrated that this innovative approach outperforms current methods, enhancing the accuracy of predictions for speed, GDI, and knee flexion angles. Moreover, this technique streamlines the process by using fewer parameters and decreasing the need for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face difficulties in moving around, which can impact their mental well-being. While traditional assessments for walking patterns can be expensive, advancements in computer vision and deep learning have introduced more affordable alternatives. A spatial-temporal transformer network has been developed to evaluate walking metrics using RGB videos from a single camera. Trials on people with cerebral palsy have shown that this innovative approach performs better than current methods, improving the accuracy of predictions for speed, GDI, and knee flexion angles. Additionally, this technique simplifies the process by using fewer parameters and reducing the need for manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may struggle with mobility, affecting their mental health. While traditional assessments for walking are costly, new technologies like computer vision and deep learning offer more affordable options. A spatial-temporal transformer network has been created to analyze walking patterns using RGB videos from one camera. Tests on individuals with cerebral palsy demonstrate that this new method outperforms current techniques, enhancing predictions for speed, GDI, and knee flexion angles. Moreover, this approach streamlines the process by requiring fewer parameters and decreasing the reliance on manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face challenges with mobility, impacting their mental well-being. Although traditional evaluations for walking can be expensive, advancements in technology such as computer vision and deep learning present more cost-effective alternatives. A spatial-temporal transformer network has been developed to examine walking behaviors utilizing RGB videos from a single camera. Trials conducted on individuals with cerebral palsy show that this innovative approach surpasses existing methods, improving forecasts for speed, GDI, and knee flexion angles. Additionally, this methodology simplifies the procedure by necessitating fewer parameters and reducing the need for manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may experience difficulties with moving around, which can affect their mental health. While traditional assessments for walking can be costly, new technologies like computer vision and deep learning offer more affordable options. A spatial-temporal transformer network has been created to analyze walking patterns using RGB videos from just one camera. Tests on individuals with cerebral palsy reveal that this new method outperforms current techniques, enhancing predictions for speed, GDI, and knee flexion angles. Furthermore, this approach streamlines the process by requiring fewer parameters and minimizing the need for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face challenges with mobility, impacting their mental well-being. While traditional assessments for walking can be expensive, advancements in technology like computer vision and deep learning provide more cost-effective solutions. A spatial-temporal transformer network has been developed to analyze walking patterns using RGB videos from a single camera. Trials on individuals with cerebral palsy show that this new approach surpasses existing techniques, improving predictions for speed, GDI, and knee flexion angles. Additionally, this method simplifies the process by reducing the number of parameters required and decreasing the need for manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may encounter difficulties with movement, affecting their psychological health. Although conventional evaluations for walking can be costly, advancements in technology such as computer vision and deep learning offer more affordable alternatives. A spatial-temporal transformer network has been created to examine walking behaviors using RGB videos from a sole camera. Experiments on individuals with cerebral palsy indicate that this innovative method outperforms current approaches, enhancing forecasts for velocity, GDI, and knee flexion angles. Moreover, this technique streamlines the procedure by cutting down the necessary parameters and minimizing the necessity for manual feature extraction."
        ],
        [
            "Individuals who have musculoskeletal disorders and cognitive impairments may face challenges with their movement, which can impact their mental well-being. While traditional assessments for walking can be expensive, technological advancements like computer vision and deep learning provide more cost-effective options. A spatial-temporal transformer network has been developed to analyze walking patterns using RGB videos from a single camera. Tests conducted on people with cerebral palsy show that this innovative approach surpasses current methods, improving predictions for speed, GDI, and knee flexion angles. Additionally, this method simplifies the process by reducing the required parameters and decreasing the need for manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may struggle with movement, affecting their mental health. Traditional assessments for walking can be costly, but computer vision and deep learning offer more affordable alternatives. A spatial-temporal transformer network has been created to analyze walking patterns using RGB videos from a single camera. Trials on individuals with cerebral palsy prove that this new approach outperforms current methods, enhancing predictions for speed, GDI, and knee flexion angles. Moreover, this technique streamlines the process by reducing parameters and minimizing manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face challenges in movement, impacting their mental well-being. Conventional assessments for walking can be expensive, but computer vision and deep learning provide more cost-effective options. A spatial-temporal transformer network has been developed to assess walking patterns using RGB videos from a sole camera. Experiments on individuals with cerebral palsy demonstrate that this innovative method surpasses existing techniques, improving forecasts for speed, GDI, and knee flexion angles. Furthermore, this approach simplifies the procedure by decreasing parameters and reducing manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may struggle with movement, affecting their mental health. Traditional walking assessments can be pricey, but computer vision and deep learning offer more affordable alternatives. A spatial-temporal transformer network has been created to analyze walking patterns using RGB videos from just one camera. Tests on people with cerebral palsy show that this new technique outperforms current methods, enhancing predictions for speed, GDI, and knee flexion angles. Additionally, this approach streamlines the process by cutting down on parameters and minimizing manual feature extraction."
        ],
        [
            "Individuals who have musculoskeletal disorders and cognitive impairments may encounter difficulties with their mobility, which can impact their mental well-being. Conventional evaluations for walking can be expensive, but computer vision and deep learning present more cost-effective options. A spatial-temporal transformer network has been developed to examine walking behaviors using RGB videos from a single camera. Research conducted on individuals with cerebral palsy demonstrates that this innovative method surpasses existing techniques, improving predictions for velocity, GDI, and knee flexion angles. Furthermore, this approach simplifies the process by reducing parameters and decreasing manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may face challenges in their movement, affecting their mental health. Traditional assessments for walking can be pricey, but computer vision and deep learning offer more affordable alternatives. A spatial-temporal transformer network has been created to analyze walking patterns using RGB videos from just one camera. Studies on individuals with cerebral palsy show that this new technique outperforms current methods, enhancing predictions for speed, GDI, and knee flexion angles. Additionally, this approach streamlines the process by cutting down on parameters and minimizing manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may encounter difficulties in their mobility, which can impact their psychological well-being. Conventional evaluations for walking can be expensive, but computer vision and deep learning provide more cost-effective options. A spatial-temporal transformer network has been developed to assess walking patterns using RGB videos from a single camera. Research on people with cerebral palsy demonstrates that this innovative method surpasses existing techniques, improving forecasts for velocity, GDI, and knee flexion angles. Furthermore, this approach simplifies the procedure by reducing parameters and decreasing manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may face challenges with mobility, affecting their mental health. Traditional walking assessments can be costly, but computer vision and deep learning offer more affordable alternatives. A spatial-temporal transformer network has been created to analyze walking behaviors using RGB videos from just one camera. Studies on individuals with cerebral palsy show that this new technique outperforms current methods, enhancing predictions for speed, GDI, and knee flexion angles. Additionally, this approach streamlines the process by cutting down on parameters and minimizing manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may encounter difficulties with movement, impacting their psychological well-being. Conventional walking evaluations can be expensive, but computer vision and deep learning provide cheaper options. A spatial-temporal transformer network has been developed to assess walking patterns using RGB videos from a single camera. Research on people with cerebral palsy demonstrates that this innovative method surpasses existing techniques, improving forecasts for velocity, GDI, and knee flexion angles. Moreover, this strategy simplifies the procedure by reducing parameters and decreasing manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may struggle with movement, affecting their mental health. Traditional walking assessments can be costly, but computer vision and deep learning offer more affordable alternatives. A spatial-temporal transformer network has been created to analyze walking behaviors using RGB videos captured by a single camera. Studies involving individuals with cerebral palsy show that this new approach outperforms current methods, enhancing predictions for speed, GDI, and knee flexion angles. Additionally, this approach streamlines the process by minimizing parameters and reducing the need for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may experience difficulties with movement, which can impact their mental well-being. Conventional assessments for walking can be expensive, but computer vision and deep learning provide more cost-effective options. A spatial-temporal transformer network has been developed to assess walking patterns using RGB videos from a single camera. Research on individuals with cerebral palsy demonstrates that this innovative approach surpasses existing techniques, improving forecasts for pace, GDI, and knee flexion angles. Furthermore, this method simplifies the procedure by decreasing parameters and eliminating the necessity for manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may have trouble moving, affecting their mental health. Traditional walking assessments can be costly, but computer vision and deep learning offer more affordable alternatives. A spatial-temporal transformer network has been created to evaluate walking patterns with RGB videos from a single camera. Studies on individuals with cerebral palsy show that this new method outperforms current techniques, enhancing predictions for pace, GDI, and knee flexion angles. Additionally, this approach streamlines the process by reducing parameters and removing the need for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face difficulty in movement, impacting their mental well-being. While conventional walking assessments can be expensive, computer vision and deep learning present more cost-effective options. A spatial-temporal transformer network has been developed to analyze walking patterns using RGB videos from a single camera. Research on individuals with cerebral palsy demonstrates that this innovative technique surpasses existing methods, improving predictions for pace, GDI, and knee flexion angles. Moreover, this approach simplifies the process by cutting down on parameters and eliminating the requirement for manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may struggle with movement, affecting their mental health. Traditional walking assessments can be pricey, but computer vision and deep learning offer more affordable alternatives. A spatial-temporal transformer network has been created to study walking patterns using RGB videos from a single camera. Studies on individuals with cerebral palsy show that this new technique outperforms current methods, enhancing predictions for pace, GDI, and knee flexion angles. Additionally, this method streamlines the process by reducing parameters and eliminating the need for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face challenges with movement, impacting their mental well-being. Conventional walking evaluations can be expensive, but computer vision and deep learning provide cost-effective options. A spatial-temporal transformer network has been developed to analyze walking patterns using RGB videos from a single camera. Research on people with cerebral palsy indicates that this innovative approach surpasses existing techniques, improving forecasts for pace, GDI, and knee flexion angles. Moreover, this method simplifies the process by decreasing parameters and eliminating the requirement for manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may struggle with movement, affecting their mental health. Traditional walking assessments can be costly, but computer vision and deep learning offer affordable alternatives. A spatial-temporal transformer network has been created to study walking behaviors using RGB videos from just one camera. Studies on individuals with cerebral palsy suggest that this new method outperforms current techniques, enhancing predictions for speed, GDI, and knee flexion angles. Additionally, this approach streamlines the process by reducing parameters and removing the need for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may experience difficulties with movement, which can impact their mental well-being. While conventional walking assessments can be expensive, computer vision and deep learning provide more economical options. A spatial-temporal transformer network has been developed to analyze walking patterns using RGB videos captured by a single camera. Research on people with cerebral palsy indicates that this innovative approach surpasses existing methods, improving estimations for speed, GDI, and knee flexion angles. Moreover, this technique simplifies the process by minimizing parameters and eliminating the necessity for manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may have trouble moving, affecting their mental health. Traditional walking evaluations can be costly, but computer vision and deep learning offer more affordable alternatives. A spatial-temporal transformer network has been created to examine walking patterns using RGB videos from a single camera. Studies on individuals with cerebral palsy show that this new method outperforms current techniques, enhancing speed, GDI, and knee flexion angle estimations. Additionally, this approach streamlines the process by reducing parameters and removing the need for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may experience difficulties in movement, which can impact their mental well-being. Conventional assessments for walking can be expensive, but computer vision and deep learning provide cost-effective options. A spatial-temporal transformer network has been developed to analyze walking patterns using RGB videos from a single camera. Research on individuals with cerebral palsy demonstrates that this innovative approach surpasses existing methods, improving speed, GDI, and knee flexion angle estimations. Furthermore, this method simplifies the process by reducing parameters and eliminating the necessity for manual feature extraction."
        ]
    ]
}