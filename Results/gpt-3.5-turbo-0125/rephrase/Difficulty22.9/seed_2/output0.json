{
    "adjacency_matrix": [
        [
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0
        ]
    ],
    "prompt_init": [
        "You will receive a text. Your task is to rephrase this text without modifying its meaning. Just output your new text, nothing else. Here is the text:"
    ],
    "prompt_update": [
        "You will receive a text. Your task is to rephrase this text without modifying its meaning. Just output your new text, nothing else. Here is the text:"
    ],
    "personality_list": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "format_prompt": [
        ""
    ],
    "initial_story": "musculoskeletal diseases and cognitive impairments in patients lead todifficulties in movement as well as negative effects on their psychologicalhealth. clinical gait analysis, a vital tool for early diagnosis and treatment,traditionally relies on expensive optical motion capture systems. recentadvances in computer vision and deep learning have opened the door to moreaccessible and cost-effective alternatives. this paper introduces a novelspatio-temporal transformer network to estimate critical gait parameters fromrgb videos captured by a single-view camera. empirical evaluations on a publicdataset of cerebral palsy patients indicate that the proposed frameworksurpasses current state-of-the-art approaches and show significant improvementsin predicting general gait parameters (including walking speed, gait deviationindex - gdi, and knee flexion angle at maximum extension), while utilizingfewer parameters and alleviating the need for manual feature extraction. ",
    "stories": [
        [
            "Patients with musculoskeletal diseases and cognitive impairments often face challenges in movement and experience negative impacts on their mental health. Clinical gait analysis, an essential tool for early diagnosis and treatment, has traditionally depended on costly optical motion capture systems. Recent advancements in computer vision and deep learning have paved the way for more accessible and affordable alternatives. This study presents a new spatial-temporal transformer network for estimating crucial gait parameters from RGB videos captured by a single-view camera. Empirical assessments on a public dataset of cerebral palsy patients demonstrate that the proposed framework outperforms current leading methods and delivers significant enhancements in predicting key gait parameters (such as walking speed, gait deviation index - GDI, and knee flexion angle at maximum extension) while using fewer parameters and eliminating the need for manual feature extraction."
        ],
        [
            "Patients with musculoskeletal diseases and cognitive impairments often struggle with movement difficulties and experience negative effects on their mental well-being. Traditional clinical gait analysis has relied on expensive optical motion capture systems, but recent advancements in computer vision and deep learning have made more affordable options possible. This study introduces a new spatial-temporal transformer network for estimating important gait parameters from RGB videos taken with a single-view camera. Testing on a public dataset of cerebral palsy patients shows that this new framework surpasses current methods and improves predictions of key gait parameters, such as walking speed, gait deviation index (GDI), and knee flexion angle, all while using fewer parameters and eliminating the need for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments often face challenges with mobility and suffer negative impacts on their mental health. Conventional clinical gait analysis has traditionally depended on costly optical motion capture systems. However, recent progress in computer vision and deep learning has enabled more cost-effective alternatives. This research presents a novel spatial-temporal transformer network for estimating crucial gait metrics from RGB videos captured with a single camera. Evaluation on a publicly available dataset of cerebral palsy patients demonstrates that this innovative framework outperforms existing approaches, enhancing the prediction of essential gait parameters like walking speed, GDI, and knee flexion angle, all while requiring fewer parameters and eliminating the need for manual feature extraction."
        ],
        [
            "Individuals who have musculoskeletal disorders and cognitive impairments often encounter difficulties with moving around and experience negative effects on their mental well-being. The usual method for analyzing walking patterns in a clinical setting has traditionally relied on expensive optical motion capture systems. However, recent advancements in computer vision and deep learning have made it possible to use more affordable alternatives. This study introduces a new spatial-temporal transformer network for calculating important walking metrics from RGB videos taken with just one camera. Testing on a publicly accessible database of patients with cerebral palsy shows that this innovative framework performs better than current methods, improving the estimation of key walking parameters such as speed, GDI, and knee flexion angle, all while needing fewer parameters and eliminating the need for manual extraction of features."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility issues, impacting their mental well-being. Traditionally, analyzing walking patterns in a clinical setting required expensive optical motion capture systems. However, recent advances in computer vision and deep learning have made more affordable options possible. A new spatial-temporal transformer network has been developed to calculate important walking metrics from RGB videos captured by a single camera. Testing on a database of patients with cerebral palsy demonstrates that this framework outperforms current methods in estimating key walking parameters like speed, GDI, and knee flexion angle, with fewer parameters and no need for manual feature extraction."
        ],
        [
            "Individuals who have musculoskeletal disorders and cognitive impairments often face challenges with mobility, which can impact their mental health. In the past, analyzing walking patterns in a clinical setting required costly optical motion capture systems. However, advancements in computer vision and deep learning have now made more affordable options available. A new spatial-temporal transformer network has been created to calculate important walking measurements from RGB videos taken with a single camera. Testing on a group of patients with cerebral palsy has shown that this framework surpasses current methods in estimating crucial walking factors such as speed, GDI, and knee flexion angle, using fewer parameters and eliminating the need for manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility, impacting their mental health. Traditionally, analyzing walking patterns in a clinical setting required expensive optical motion capture systems. However, recent advancements in computer vision and deep learning have led to more affordable options. A new spatial-temporal transformer network can now calculate important walking measurements from RGB videos captured with a single camera. Tests on patients with cerebral palsy have demonstrated that this framework outperforms current methods in estimating key walking factors like speed, GDI, and knee flexion angle, using fewer parameters and eliminating the need for manual feature extraction."
        ],
        [
            "Individuals who have musculoskeletal disorders and cognitive impairments frequently face challenges with mobility, which can have a negative impact on their mental well-being. In the past, analyzing walking patterns in a medical environment necessitated the use of costly optical motion capture systems. Nonetheless, recent progress in computer vision and deep learning has resulted in more economical alternatives. A new spatial-temporal transformer network can now compute important walking metrics from RGB videos taken with a single camera. Trials conducted on patients with cerebral palsy have shown that this model surpasses current techniques in predicting critical walking variables such as speed, GDI, and knee flexion angle, while using fewer parameters and eliminating the necessity for manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility, impacting their mental well-being. Traditional methods of analyzing walking patterns in healthcare settings required expensive optical motion capture systems. However, advances in computer vision and deep learning have led to more cost-effective options. A new spatial-temporal transformer network can now calculate key walking metrics from RGB videos captured with just one camera. Testing on cerebral palsy patients has demonstrated that this model outperforms existing methods in predicting important walking factors like speed, GDI, and knee flexion angle, with fewer parameters and no need for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face challenges with movement, affecting their mental health. Previous approaches to studying walking patterns in healthcare involved costly optical motion capture systems. Luckily, improvements in computer vision and deep learning have resulted in more affordable alternatives. A novel spatial-temporal transformer network can now assess essential walking parameters from RGB videos taken with a single camera. Trials on patients with cerebral palsy have shown that this model surpasses current techniques in forecasting critical walking variables such as speed, GDI, and knee flexion angle, with less complexity and no requirement for manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may encounter difficulties with movement, impacting their mental well-being. Traditional methods of analyzing walking patterns in healthcare utilized expensive optical motion capture systems. Fortunately, advancements in computer vision and deep learning have led to more cost-effective options. A new spatial-temporal transformer network can now analyze important walking metrics from RGB videos captured with just one camera. Studies on individuals with cerebral palsy demonstrate that this model outperforms current methods in predicting key walking factors like speed, GDI, and knee flexion angle, without the need for manual feature extraction and with reduced complexity."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face challenges in movement, which can affect their mental health. Previous approaches in healthcare for analyzing walking patterns involved costly optical motion capture systems. However, developments in computer vision and deep learning have introduced more affordable alternatives. A spatial-temporal transformer network can now extract essential walking metrics from RGB videos taken with a single camera. Research on people with cerebral palsy shows that this model surpasses existing methods in forecasting crucial walking parameters such as speed, GDI, and knee flexion angle, without requiring manual feature extraction and with decreased complexity."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may encounter difficulties in movement, impacting their mental well-being. Traditional healthcare methods used expensive optical motion capture systems to analyze walking patterns. But advancements in computer vision and deep learning have brought about more cost-effective options. A spatial-temporal transformer network is now able to gather important walking data from RGB videos captured with just one camera. Studies on individuals with cerebral palsy demonstrate that this approach outperforms current techniques in predicting key walking factors like speed, GDI, and knee flexion angle, eliminating the need for manual feature extraction and reducing complexity."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face challenges with movement, affecting their mental health. Previous healthcare techniques relied on costly optical motion capture systems to study walking patterns. However, improvements in computer vision and deep learning have introduced more affordable alternatives. A spatial-temporal transformer network can now collect crucial walking information from RGB videos taken with a single camera. Research on people with cerebral palsy indicates that this method surpasses existing strategies in forecasting important walking variables such as speed, GDI, and knee flexion angle. This eliminates the necessity for manual feature extraction and simplifies the process."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may experience difficulties with mobility, impacting their psychological well-being. In the past, expensive optical motion capture systems were used in healthcare to analyze gait patterns. But advancements in computer vision and deep learning have brought about more cost-effective options. A spatial-temporal transformer network now has the capability to gather essential gait data from RGB videos captured by a single camera. Studies on individuals with cerebral palsy have shown that this approach outperforms current methods in predicting key gait parameters like speed, GDI, and knee flexion angle. This eliminates the need for manual feature extraction and streamlines the process."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face challenges in mobility, which can have a negative impact on their mental well-being. Previously, healthcare used expensive optical motion capture systems to study walking patterns. However, advancements in computer vision and deep learning have led to more affordable alternatives. A spatial-temporal transformer network can now collect important walking data from RGB videos taken by a single camera. Research on people with cerebral palsy demonstrates that this new method is more effective than current techniques in predicting crucial walking parameters such as speed, GDI, and knee flexion angle. This eliminates the need for manual extraction of features and simplifies the process."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may encounter difficulties in moving around, affecting their mental health. In the past, healthcare relied on costly optical motion capture systems to analyze walking patterns. But with advancements in computer vision and deep learning, more cost-effective options are now available. A spatial-temporal transformer network can gather important walking data from RGB videos captured by a single camera. Studies on individuals with cerebral palsy show that this new approach is better at predicting essential walking parameters like speed, GDI, and knee flexion angle compared to current methods. This eliminates the need for manual feature extraction and streamlines the process."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face challenges with mobility, impacting their mental well-being. Previously, healthcare used expensive optical motion capture systems to study gait patterns. However, due to advancements in computer vision and deep learning, more affordable alternatives are now accessible. A spatial-temporal transformer network can extract vital walking data from RGB videos taken by a single camera. Research involving individuals with cerebral palsy demonstrates that this innovative approach is more effective in predicting key walking parameters such as speed, GDI, and knee flexion angle compared to existing techniques. This eliminates the need for manual feature extraction, making the process more efficient."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may encounter difficulties in moving around, which can impact their mental health. In the past, expensive optical motion capture systems were used in healthcare to analyze walking patterns. However, thanks to advancements in computer vision and deep learning, more affordable options are now available. A spatial-temporal transformer network can extract essential walking data from RGB videos captured by a single camera. Studies involving individuals with cerebral palsy show that this new approach is better at predicting important walking parameters like speed, GDI, and knee flexion angle compared to current methods. This eliminates the need for manual feature extraction, making the process more efficient."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face challenges with mobility, which can impact their mental well-being. In the past, expensive optical motion capture systems were utilized in the healthcare field to assess walking patterns. However, due to advancements in computer vision and deep learning, more cost-effective options are now accessible. A spatial-temporal transformer network can extract crucial walking data from RGB videos captured by a single camera. Research involving individuals with cerebral palsy demonstrates that this innovative approach is more effective in predicting key walking parameters such as speed, GDI, and knee flexion angle when compared to current techniques. This eliminates the need for manual feature extraction, streamlining the process."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may have difficulty with moving around, which can affect their mental health. In the past, expensive optical motion capture systems were used in healthcare to analyze walking patterns. However, with advancements in computer vision and deep learning, more affordable options are now available. A spatial-temporal transformer network can gather important walking data from RGB videos taken with a single camera. Studies on individuals with cerebral palsy show that this new approach is better at predicting key walking metrics like speed, GDI, and knee flexion angle compared to current methods. This eliminates the need for manual feature extraction, making the process more efficient."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may struggle with mobility, impacting their mental well-being. Traditionally, expensive optical motion capture systems were used in healthcare to study walking patterns. However, with advancements in computer vision and deep learning, more affordable alternatives are now accessible. A spatial-temporal transformer network can extract important walking information from RGB videos captured by a single camera. Research on individuals with cerebral palsy demonstrates that this innovative approach is more effective in predicting essential walking metrics such as speed, GDI, and knee flexion angle compared to current techniques. This advancement eliminates the need for manual feature extraction, streamlining the process."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may have difficulties with moving around, which can affect their mental health. In the past, expensive optical motion capture systems were used in healthcare to analyze walking patterns. However, with the progress in computer vision and deep learning, more affordable options are now available. A spatial-temporal transformer network can gather important walking data from RGB videos taken by a single camera. Studies on individuals with cerebral palsy have shown that this new method is better at predicting crucial walking measurements like speed, GDI, and knee flexion angle compared to current methods. This improvement eliminates the need for manual data extraction, making the process more efficient."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face challenges in mobility, impacting their mental well-being. Previously, costly optical motion capture systems were utilized in the healthcare sector to assess gait patterns. However, advancements in computer vision and deep learning have led to more cost-effective alternatives. A spatial-temporal transformer network can extract important gait data from RGB videos captured by a single camera. Research involving individuals with cerebral palsy has demonstrated that this novel approach is superior in predicting key gait parameters such as speed, GDI, and knee flexion angle compared to existing methods. This advancement eliminates the necessity for manual data extraction, streamlining the process."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may encounter difficulties in movement, which can impact their mental health. In the past, expensive optical motion capture systems were used in the healthcare field to evaluate walking patterns. However, improvements in computer vision and deep learning have resulted in more affordable options. A spatial-temporal transformer network can analyze important walking data from RGB videos taken with just one camera. Studies involving individuals with cerebral palsy have shown that this new approach is better at predicting crucial walking factors like speed, GDI, and knee flexion angle compared to current methods. This progress removes the need for manual data extraction, making the process more efficient."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face challenges in their mobility, which can impact their mental well-being. In the past, costly optical motion capture systems were utilized in the healthcare industry to assess gait patterns. However, advancements in computer vision and deep learning have led to more cost-effective alternatives. A spatial-temporal transformer network can analyze key gait data from RGB videos captured with a single camera. Research involving individuals with cerebral palsy has demonstrated that this innovative approach is more effective in predicting vital gait parameters such as speed, GDI, and knee flexion angle compared to current methods. This advancement eliminates the need for manual data extraction, streamlining the process."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may struggle with mobility, impacting their mental health. Previously, expensive optical motion capture systems were used in healthcare to evaluate gait patterns. However, advancements in computer vision and deep learning have resulted in more affordable options. A spatial-temporal transformer network can analyze important gait data from RGB videos taken with a single camera. Research on individuals with cerebral palsy has shown that this new approach is better at predicting key gait parameters like speed, GDI, and knee flexion angle compared to current methods. This progress eliminates the need for manual data extraction, making the process more efficient."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face challenges with mobility, which can have an impact on their mental well-being. In the past, costly optical motion capture systems were utilized in the healthcare field to assess gait patterns. However, improvements in computer vision and deep learning have led to more economical alternatives. A spatial-temporal transformer network has the ability to analyze crucial gait information from RGB videos captured with a single camera. Studies involving individuals with cerebral palsy have demonstrated that this novel approach is more effective in predicting important gait parameters such as speed, GDI, and knee flexion angle compared to current techniques. This advancement eliminates the necessity for manual data extraction, streamlining the overall process."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may encounter difficulties with movement, impacting their mental health. Previously, expensive optical motion capture systems were used in healthcare to evaluate walking patterns. However, advancements in computer vision and deep learning have brought about more affordable options. A spatial-temporal transformer network can analyze essential walking data from RGB videos taken with a single camera. Research with individuals with cerebral palsy has shown that this new method is better at predicting key walking parameters like speed, GDI, and knee flexion angle compared to existing techniques. This progress removes the need for manual data extraction, making the process more efficient."
        ],
        [
            "Individuals who have musculoskeletal disorders and cognitive impairments may face challenges with movement, which can have an impact on their mental well-being. In the past, expensive optical motion capture systems were utilized in the healthcare field to assess walking patterns. However, advancements in computer vision and deep learning have led to more cost-effective options. A spatial-temporal transformer network can examine important walking data from RGB videos captured with a single camera. Studies involving individuals with cerebral palsy have demonstrated that this new approach is more effective in predicting crucial walking parameters such as speed, GDI, and knee flexion angle compared to traditional methods. This development eliminates the need for manual data extraction, resulting in a more streamlined process."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may struggle with movement, affecting their mental well-being. Previously, expensive optical motion capture systems were used in healthcare to evaluate walking patterns. However, advancements in computer vision and deep learning have made more affordable options available. A spatial-temporal transformer network can analyze important walking data from RGB videos taken with a single camera. Research with individuals with cerebral palsy has shown that this new method is better at predicting key walking parameters like speed, GDI, and knee flexion angle compared to traditional techniques. This innovation eliminates the need for manual data extraction, making the process more efficient."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face challenges with mobility, impacting their mental health. In the past, costly optical motion capture systems were utilized in the medical field to assess walking patterns. However, advancements in computer vision and deep learning have resulted in more cost-effective alternatives. A spatial-temporal transformer network can analyze crucial walking data from RGB videos captured with a single camera. Studies involving individuals with cerebral palsy have demonstrated that this innovative approach is superior in predicting important walking parameters such as speed, GDI, and knee flexion angle compared to traditional methods. This breakthrough eliminates the need for manual data extraction, streamlining the process."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may struggle with mobility, which can affect their mental well-being. In the past, expensive optical motion capture systems were used in the healthcare industry to evaluate walking patterns. However, advancements in computer vision and deep learning have led to more affordable options. A spatial-temporal transformer network can analyze essential walking data from RGB videos taken with just one camera. Research on individuals with cerebral palsy has shown that this new approach is better at predicting important walking metrics like speed, GDI, and knee flexion angle compared to traditional methods. This advancement eliminates the need for manual data extraction, making the process more efficient."
        ],
        [
            "Individuals who have musculoskeletal disorders and cognitive impairments may face challenges with mobility, impacting their mental well-being. Previously, costly optical motion capture systems were utilized in the healthcare field to assess walking patterns. However, improvements in computer vision and deep learning have resulted in more cost-effective alternatives. A spatial-temporal transformer network can analyze crucial walking data from RGB videos captured with a single camera. Studies on individuals with cerebral palsy have demonstrated that this innovative approach is superior in predicting essential walking metrics such as speed, GDI, and knee flexion angle compared to traditional methods. This development eliminates the necessity for manual data extraction, streamlining the process."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may encounter difficulties in moving around, which can impact their mental health. In the past, expensive optical motion capture systems were used in the healthcare industry to evaluate walking patterns. However, recent advancements in computer vision and deep learning have led to more affordable options. A spatial-temporal transformer network can analyze important walking information from RGB videos taken with just one camera. Research on individuals with cerebral palsy has shown that this new approach is better at predicting key walking measurements like speed, GDI, and knee flexion angle compared to traditional techniques. This advancement removes the need for manual data extraction, making the process more efficient."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face challenges in mobility, which can impact their mental well-being. Previously, costly optical motion capture systems were utilized in healthcare to assess walking patterns. However, recent progress in computer vision and deep learning has resulted in more cost-effective alternatives. A spatial-temporal transformer network can extract important walking data from RGB videos captured with a single camera. Studies on individuals with cerebral palsy have demonstrated that this innovative approach is superior in predicting key walking metrics such as speed, GDI, and knee flexion angle compared to traditional methods. This advancement eliminates the need for manual data extraction, streamlining the process."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may experience difficulties in moving around, affecting their mental health. In the past, expensive optical motion capture systems were used in healthcare to analyze walking patterns. However, recent advancements in computer vision and deep learning have led to more affordable options. A spatial-temporal transformer network can gather important walking information from RGB videos taken with a single camera. Research on individuals with cerebral palsy has shown that this new approach is better at predicting key walking measurements like speed, GDI, and knee flexion angle compared to traditional techniques. This progress eliminates the need for manual data collection, making the process more efficient."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face challenges when it comes to mobility, which can impact their mental well-being. In the healthcare field, expensive optical motion capture systems were previously used to study walking patterns. However, advancements in computer vision and deep learning have made more affordable options available. A spatial-temporal transformer network can extract important walking data from RGB videos captured by a single camera. Studies on people with cerebral palsy have demonstrated that this new method is superior in predicting key walking metrics such as speed, GDI, and knee flexion angle compared to traditional approaches. This development eliminates the need for manual data gathering, streamlining the process."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may have difficulties with mobility, affecting their mental well-being. In the past, costly optical motion capture systems were utilized in healthcare to analyze walking patterns. Now, cheaper options are possible due to advancements in computer vision and deep learning. A spatial-temporal transformer network can gather important walking data from RGB videos taken by a single camera. Research on individuals with cerebral palsy has shown that this new technique is better at predicting crucial walking metrics like speed, GDI, and knee flexion angle compared to traditional methods. This progress eliminates the need for manual data collection, making the process more efficient."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face challenges with mobility, impacting their mental health. Previously, expensive optical motion capture systems were used in the healthcare field to assess walking patterns. However, advancements in computer vision and deep learning have made it possible to utilize more affordable alternatives. With the help of a spatial-temporal transformer network, valuable walking data can now be collected from RGB videos captured by a single camera. Studies involving individuals with cerebral palsy have demonstrated that this new approach is more effective in predicting key walking metrics such as speed, GDI, and knee flexion angle compared to traditional methods. This advancement eliminates the need for manual data collection, streamlining the process."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may encounter difficulties in moving around, affecting their mental well-being. In the past, costly optical motion capture systems were employed in healthcare to evaluate walking patterns. Yet, progress in computer vision and deep learning has enabled the use of more affordable options. Through a spatial-temporal transformer network, important walking data can now be gathered from RGB videos taken by a single camera. Research involving individuals with cerebral palsy has shown that this new approach is superior in predicting essential walking measurements like speed, GDI, and knee flexion angle compared to traditional techniques. This advancement removes the need for manual data collection, simplifying the process."
        ],
        [
            "Individuals who have musculoskeletal disorders and cognitive impairments may face challenges with mobility, impacting their mental health. Previously, expensive optical motion capture systems were utilized in the healthcare field to assess gait patterns. However, advancements in computer vision and deep learning have made more cost-effective options possible. By utilizing a spatial-temporal transformer network, crucial gait data can now be extracted from RGB videos captured by a single camera. Studies involving individuals with cerebral palsy have demonstrated that this innovative method is more accurate in predicting key gait measurements such as speed, GDI, and knee flexion angle compared to traditional methods. This development eliminates the need for manual data collection, streamlining the process."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may struggle with mobility, affecting their mental well-being. In the past, expensive optical motion capture systems were used in healthcare to analyze walking patterns. But with advancements in computer vision and deep learning, more affordable options are now possible. A spatial-temporal transformer network can extract important walking data from RGB videos captured by just one camera. Research on individuals with cerebral palsy has shown that this new method is better at predicting crucial walking measurements like speed, GDI, and knee flexion angle compared to traditional methods. This advancement removes the need for manual data collection, making the process more efficient."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face difficulties in mobility, impacting their mental health. Previously, costly optical motion capture systems were utilized in healthcare settings to assess walking patterns. However, due to advancements in computer vision and deep learning, more cost-effective alternatives are now available. A spatial-temporal transformer network can extract significant walking information from RGB videos captured by a single camera. Studies on individuals with cerebral palsy have indicated that this innovative approach is superior in predicting key walking parameters such as speed, GDI, and knee flexion angle compared to traditional techniques. This progress eliminates the necessity for manual data collection, streamlining the process."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may struggle with mobility, affecting their mental well-being. In the past, expensive optical motion capture systems were used in healthcare settings to evaluate walking patterns. However, thanks to advancements in computer vision and deep learning, more affordable alternatives are now accessible. A spatial-temporal transformer network can extract valuable walking data from RGB videos taken with just one camera. Research on individuals with cerebral palsy has shown that this innovative method outperforms traditional techniques in predicting important walking factors like speed, GDI, and knee flexion angle. This advancement eliminates the need for manual data collection, making the process more efficient."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face challenges in mobility, impacting their mental health. In the past, costly optical motion capture systems were utilized in healthcare settings to assess walking patterns. However, with the progress in computer vision and deep learning, more cost-effective alternatives are now available. A spatial-temporal transformer network can gather useful walking data from RGB videos captured with a single camera. Studies on individuals with cerebral palsy have demonstrated that this innovative approach surpasses traditional methods in predicting crucial walking metrics such as speed, GDI, and knee flexion angle. This development eliminates the necessity for manual data collection, streamlining the process."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may encounter difficulties with mobility, which can have an impact on their mental well-being. In the past, expensive optical motion capture systems were used in healthcare settings to evaluate walking patterns. However, advancements in computer vision and deep learning have led to more affordable options being available. A spatial-temporal transformer network can extract valuable walking data from RGB videos taken with just one camera. Research on individuals with cerebral palsy has shown that this new approach outperforms traditional methods in predicting important walking measurements like speed, GDI, and knee flexion angle. This advancement eliminates the need for manual data collection, making the process more efficient."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face challenges with mobility, impacting their mental well-being. Previously, costly optical motion capture systems were utilized in healthcare settings to assess walking patterns. However, advancements in computer vision and deep learning have made more affordable options accessible. A spatial-temporal transformer network can extract valuable walking data from RGB videos captured with a single camera. Studies on individuals with cerebral palsy have demonstrated that this new approach surpasses traditional methods in predicting key walking metrics such as speed, GDI, and knee flexion angle. This progress eliminates the need for manual data collection, streamlining the process."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments may experience difficulties in moving around, which can affect their mental health. In the past, expensive optical motion capture systems were used in healthcare settings to evaluate walking patterns. However, improvements in computer vision and deep learning have made more affordable alternatives available. A spatial-temporal transformer network can extract important walking data from RGB videos taken with a single camera. Research on individuals with cerebral palsy has shown that this new approach outperforms traditional methods in predicting key walking measurements like speed, GDI, and knee flexion angle. This advancement eliminates the necessity for manual data collection, streamlining the procedure."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments may face challenges in mobility, impacting their mental well-being. Previously, costly optical motion capture systems were utilized in healthcare settings to assess gait patterns. However, advancements in computer vision and deep learning have introduced more cost-effective options. A spatial-temporal transformer network can extract vital gait data from RGB videos captured with a single camera. Studies on individuals with cerebral palsy demonstrate that this innovative approach surpasses traditional methods in predicting important gait measurements such as speed, GDI, and knee flexion angle. This development eliminates the need for manual data collection, making the process more efficient."
        ]
    ]
}