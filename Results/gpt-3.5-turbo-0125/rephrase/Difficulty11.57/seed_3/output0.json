{
    "adjacency_matrix": [
        [
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0
        ]
    ],
    "prompt_init": [
        "You will receive a text. Your task is to rephrase this text without modifying its meaning. Just output your new text, nothing else. Here is the text:"
    ],
    "prompt_update": [
        "You will receive a text. Your task is to rephrase this text without modifying its meaning. Just output your new text, nothing else. Here is the text:"
    ],
    "personality_list": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "format_prompt": [
        ""
    ],
    "initial_story": "having the potential for high speed, high throughput, and low energy cost,optical neural networks (onns) have emerged as a promising candidate foraccelerating deep learning tasks. in conventional onns, light amplitudes aremodulated at the input and detected at the output. however, the light phasesare still ignored in conventional structures, although they can also carryinformation for computing. to address this issue, in this paper, we propose aframework called oplixnet to compress the areas of onns by modulating inputimage data into the amplitudes and phase parts of light signals. the input andoutput parts of the onns are redesigned to make full use of both amplitude andphase information. moreover, mutual learning across different onn structures isintroduced to maintain the accuracy. experimental results demonstrate that theproposed framework significantly reduces the areas of onns with the accuracywithin an acceptable range. for instance, 75.03% area is reduced with a 0.33%accuracy decrease on fully connected neural network (fcnn) and 74.88% area isreduced with a 2.38% accuracy decrease on resnet-32. ",
    "stories": [
        [
            "Optical neural networks (ONNs) have the potential to accelerate deep learning tasks due to their high speed, high throughput, and low energy cost. However, conventional ONNs only modulate light amplitudes at the input and output, neglecting the valuable information carried by light phases. In order to address this limitation, we introduce a framework called OplixNet in this paper. OplixNet compresses ONNs by utilizing both amplitude and phase information of light signals derived from input image data. Through redesigning the input and output parts of ONNs, we are able to fully exploit both amplitude and phase information. Additionally, we incorporate mutual learning across different ONN structures to maintain accuracy. Experimental results show that our proposed framework significantly reduces the areas of ONNs while keeping accuracy within an acceptable range. For example, we achieve a 75.03% reduction in area with only a 0.33% accuracy decrease for fully connected neural networks (FCNN), and a 74.88% reduction in area with a 2.38% accuracy decrease for ResNet-32."
        ],
        [
            "Optical neural networks (ONNs) can enhance deep learning tasks by providing high speed, high throughput, and low energy cost. However, traditional ONNs only focus on adjusting light amplitudes at the input and output, overlooking the important information carried by light phases. To overcome this limitation, we present a framework called OplixNet in this study. OplixNet compresses ONNs by utilizing both amplitude and phase information from input image data. By redesigning the input and output components of ONNs, we are able to fully utilize both amplitude and phase information. Additionally, we incorporate mutual learning across different ONN structures to maintain accuracy. Experimental results demonstrate that our proposed framework significantly reduces the size of ONNs while maintaining accuracy within an acceptable range. For instance, we achieve a 75.03% reduction in area with only a 0.33% accuracy decrease for fully connected neural networks (FCNN), and a 74.88% reduction in area with a 2.38% accuracy decrease for ResNet-32."
        ],
        [
            "The use of Optical neural networks (ONNs) can improve deep learning tasks through their high speed, high throughput, and low energy consumption. However, traditional ONNs typically focus solely on adjusting light amplitudes at the input and output, neglecting the valuable information carried by light phases. In order to address this issue, we introduce a new framework called OplixNet in this research. OplixNet compresses ONNs by leveraging both amplitude and phase data from input images. Through redesigning the input and output elements of ONNs, we are able to fully utilize both amplitude and phase data. Furthermore, we integrate mutual learning between different ONN structures to preserve accuracy. Experimental findings show that our suggested framework significantly reduces the size of ONNs while maintaining accuracy at an acceptable level. For example, we achieve a 75.03% reduction in area with just a 0.33% decrease in accuracy for fully connected neural networks (FCNN), as well as a 74.88% reduction in area with a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "Optical neural networks (ONNs) can enhance deep learning tasks with their high speed, high throughput, and low energy consumption. However, traditional ONNs often focus only on adjusting light amplitudes, neglecting valuable information conveyed by light phases. To address this limitation, we introduce a new framework called OplixNet in this study. OplixNet compresses ONNs by utilizing both amplitude and phase data from input images. By redesigning the input and output components of ONNs, we can effectively utilize both amplitude and phase data. Additionally, we incorporate mutual learning between different ONN structures to maintain accuracy. Experimental results demonstrate that our proposed framework significantly reduces the size of ONNs while maintaining accuracy at an acceptable level. For instance, we achieve a 75.03% reduction in area with only a 0.33% decrease in accuracy for fully connected neural networks (FCNN), and a 74.88% reduction in area with a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "In this study, a new framework called OplixNet is introduced to address the limitation of traditional Optical neural networks (ONNs) that focus only on adjusting light amplitudes, neglecting valuable information conveyed by light phases. OplixNet compresses ONNs by utilizing both amplitude and phase data from input images, redesigning the input and output components to effectively utilize both amplitude and phase data. Mutual learning between different ONN structures is also incorporated to maintain accuracy. Experimental results show that our proposed framework significantly reduces the size of ONNs while maintaining accuracy at an acceptable level, achieving a 75.03% reduction in area with only a 0.33% decrease in accuracy for fully connected neural networks (FCNN) and a 74.88% reduction in area with a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "This study introduces a new framework called OplixNet to overcome the limitations of traditional Optical neural networks (ONNs) that focus solely on adjusting light amplitudes, overlooking the valuable information conveyed by light phases. OplixNet compresses ONNs by using both amplitude and phase data from input images, reconfiguring the input and output components to effectively utilize both amplitude and phase data. The framework also incorporates mutual learning between different ONN structures to maintain accuracy. Experimental results demonstrate that our proposed framework significantly reduces the size of ONNs while maintaining accuracy at an acceptable level, achieving a 75.03% reduction in area with only a 0.33% decrease in accuracy for fully connected neural networks (FCNN) and a 74.88% reduction in area with a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "A new framework, OplixNet, is introduced in this study to address the limitations of traditional Optical neural networks (ONNs) which only focus on adjusting light amplitudes and overlook the important information conveyed by light phases. OplixNet compresses ONNs by utilizing both amplitude and phase data from input images, reconfiguring input and output components to effectively utilize both types of data. The framework also includes mutual learning between different ONN structures to maintain accuracy. Experimental results show that our proposed framework significantly reduces the size of ONNs while maintaining accuracy, achieving a 75.03% reduction in area with only a 0.33% decrease in accuracy for fully connected neural networks (FCNN) and a 74.88% reduction in area with a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "This study introduces a new framework called OplixNet to overcome the limitations of traditional Optical neural networks (ONNs) that focus solely on adjusting light amplitudes and neglect the valuable information conveyed by light phases. OplixNet combines amplitude and phase data from input images to compress ONNs, rearranging input and output components to effectively utilize both types of data. The framework also involves mutual learning between different ONN structures to preserve accuracy. Experimental results demonstrate that our proposed framework significantly reduces the size of ONNs while maintaining accuracy, achieving a 75.03% reduction in area with only a 0.33% decrease in accuracy for fully connected neural networks (FCNN) and a 74.88% reduction in area with a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "This research presents a new approach, OplixNet, which addresses the shortcomings of traditional Optical neural networks (ONNs) by incorporating both light amplitudes and phases in the input data. OplixNet effectively compresses ONNs by reorganizing input and output components to utilize both types of information, with mutual learning between different ONN structures to maintain accuracy. Experimental results show that our framework significantly reduces the size of ONNs while still achieving high accuracy, with a 75.03% reduction in area and only a 0.33% decrease in accuracy for FCNN, and a 74.88% reduction in area with a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The study introduces a novel method, OplixNet, that overcomes the limitations of traditional Optical neural networks (ONNs) by integrating light amplitudes and phases in the input data. OplixNet efficiently condenses ONNs by rearranging input and output elements to utilize both types of information, with cross-learning among various ONN structures to preserve precision. Experimental findings demonstrate that our framework significantly minimizes the size of ONNs while maintaining high accuracy, with a 75.03% decrease in area and only a 0.33% drop in accuracy for FCNN, and a 74.88% decrease in area with a 2.38% drop in accuracy for ResNet-32."
        ],
        [
            "The research presents a new technique, OplixNet, which addresses the limitations of traditional Optical neural networks (ONNs) by incorporating both light amplitudes and phases in the input data. OplixNet effectively reduces the size of ONNs by reorganizing input and output elements to utilize both types of information, with cross-learning among different ONN structures to maintain accuracy. Experimental results show that our approach significantly reduces the size of ONNs while retaining high precision, with a 75.03% decrease in area and only a 0.33% decrease in accuracy for FCNN, as well as a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The study introduces a novel method called OplixNet that overcomes the limitations of traditional Optical neural networks (ONNs) by integrating light amplitudes and phases in the input data. OplixNet efficiently shrinks the size of ONNs by reorganizing input and output elements to incorporate both types of information, with cross-learning between different ONN structures to maintain precision. Empirical results demonstrate that our approach substantially reduces the size of ONNs while preserving high accuracy, with a 75.03% decrease in area and only a 0.33% decrease in accuracy for FCNN, as well as a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The study presents a new method called OplixNet that addresses the limitations of traditional Optical neural networks (ONNs) by combining light amplitudes and phases in the input data. OplixNet effectively reduces the size of ONNs by rearranging input and output elements to include both types of information, with mutual learning between different ONN structures to maintain precision. Experimental results show that our approach significantly decreases the size of ONNs while maintaining high accuracy, with a 75.03% reduction in area and only a 0.33% decrease in accuracy for FCNN, along with a 74.88% reduction in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The study introduces a novel method known as OplixNet, which overcomes the limitations of traditional Optical neural networks (ONNs) by incorporating both light amplitudes and phases in the input data. OplixNet effectively shrinks the size of ONNs by reorganizing input and output elements to encompass both types of information, with cross-learning among different ONN structures to uphold accuracy. Experimental results demonstrate that our approach significantly reduces the size of ONNs while maintaining high precision, with a 75.03% decrease in area and only a 0.33% decline in accuracy for FCNN, as well as a 74.88% decrease in area and a 2.38% drop in accuracy for ResNet-32."
        ],
        [
            "The study presents a new technique called OplixNet, which addresses the limitations of traditional Optical neural networks (ONNs) by incorporating both light amplitudes and phases in the input data. OplixNet reduces the size of ONNs by reorganizing input and output elements to include both types of information, with cross-learning among different ONN structures to maintain accuracy. Experimental results show that our method significantly reduces the size of ONNs while preserving high precision, with a 75.03% decrease in area and only a 0.33% decrease in accuracy for FCNN, and a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The OplixNet technique presented in the study overcomes the limitations of traditional Optical neural networks (ONNs) by integrating light amplitudes and phases in the input data. By reorganizing input and output elements to incorporate both types of information and enabling cross-learning among different ONN structures, OplixNet effectively reduces the size of ONNs while maintaining high precision. Experimental results demonstrate a significant decrease in ONN size with only minimal decreases in accuracy, including a 75.03% reduction in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% reduction in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The study introduces the OplixNet technique as a solution to the limitations of traditional Optical neural networks (ONNs) by incorporating both light amplitudes and phases in the input data. Through reorganizing input and output elements to include both types of information and allowing cross-learning among various ONN structures, OplixNet effectively reduces the size of ONNs while maintaining high precision. Experimental results show a significant decrease in ONN size with minimal loss in accuracy, including a 75.03% reduction in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% reduction in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The study presents the OplixNet technique as a solution to the limitations of traditional Optical neural networks (ONNs) by incorporating both light amplitudes and phases in the input data. By reorganizing input and output elements to include both types of information and enabling cross-learning among various ONN structures, OplixNet effectively reduces the size of ONNs while maintaining high precision. Experimental results demonstrate a significant decrease in ONN size with minimal loss in accuracy, including a 75.03% reduction in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% reduction in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The OplixNet technique is introduced in the study as a solution to the limitations of traditional Optical neural networks (ONNs) by incorporating both light amplitudes and phases in the input data. This approach involves reorganizing input and output elements to encompass both types of information and facilitating cross-learning among different ONN structures. As a result, OplixNet effectively reduces the size of ONNs while maintaining high precision. Experimental findings show a significant decrease in ONN size with minimal loss in accuracy, such as a 75.03% reduction in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% reduction in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The study introduces the OplixNet technique as a solution to the limitations of traditional Optical neural networks (ONNs) by incorporating both light amplitudes and phases in the input data. This method involves rearranging input and output elements to include both types of information and enabling cross-learning among different ONN structures. Consequently, OplixNet effectively decreases the size of ONNs while maintaining high precision. Experimental results demonstrate a significant reduction in ONN size with minimal accuracy loss, such as a 75.03% decrease in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% reduction in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The OplixNet technique is presented in the study as a solution to the limitations of traditional Optical neural networks (ONNs) by incorporating both light amplitudes and phases in the input data. This approach involves reorganizing input and output elements to incorporate both types of information and facilitate cross-learning among different ONN structures. As a result, OplixNet effectively reduces the size of ONNs while maintaining high precision. Experimental findings show a significant decrease in ONN size with minimal loss of accuracy, including a 75.03% decrease in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% reduction in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The study introduces the OplixNet technique as a solution to the limitations of traditional Optical neural networks (ONNs) by incorporating both light amplitudes and phases in the input data. This method involves rearranging input and output elements to include both types of information and promote cross-learning among different ONN structures. Consequently, OplixNet efficiently shrinks the size of ONNs while maintaining high accuracy. Experimental results demonstrate a significant reduction in ONN size with minimal impact on accuracy, such as a 75.03% decrease in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The OplixNet technique is introduced in the study as a solution to the limitations of traditional Optical Neural Networks (ONNs) by incorporating both light amplitudes and phases in the input data. This approach involves reorganizing input and output elements to incorporate both types of information and facilitate cross-learning among different ONN structures. As a result, OplixNet effectively reduces the size of ONNs while maintaining high accuracy. Experimental findings show a substantial decrease in ONN size with minimal impact on accuracy; for instance, a 75.03% reduction in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The study introduces the OplixNet technique as a solution to the limitations of traditional Optical Neural Networks (ONNs) by incorporating both light amplitudes and phases in the input data. This method involves restructuring input and output elements to include both types of information and promote cross-learning among different ONN structures. OplixNet effectively shrinks the size of ONNs while still maintaining high accuracy. Experimental results demonstrate a significant reduction in ONN size with minimal impact on accuracy; for example, a 75.03% decrease in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The OplixNet technique is presented in the study as a way to overcome the limitations of traditional Optical Neural Networks (ONNs) by incorporating both light amplitudes and phases in the input data. This approach involves restructuring input and output elements to include both types of information and facilitate cross-learning among various ONN structures. OplixNet effectively reduces the size of ONNs while maintaining high accuracy. Experimental findings show a notable decrease in ONN size with minimal impact on accuracy; for instance, a 75.03% reduction in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The study introduces the OplixNet technique as a solution to the limitations of traditional Optical Neural Networks (ONNs) by including both light amplitudes and phases in the input data. This method involves restructuring input and output elements to incorporate both types of information and enable cross-learning among different ONN structures. OplixNet effectively shrinks the size of ONNs while still maintaining high accuracy. Experimental results demonstrate a significant reduction in ONN size with minimal impact on accuracy; for example, a 75.03% decrease in area and a 0.33% reduction in accuracy for FCNN, as well as a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The OplixNet technique, introduced in the study, addresses the limitations of traditional Optical Neural Networks (ONNs) by incorporating both light amplitudes and phases in the input data. This approach involves rearranging input and output elements to include both types of information, facilitating cross-learning across different ONN structures. OplixNet effectively reduces the size of ONNs while maintaining high accuracy. Experimental findings show a significant decrease in ONN size with minimal impact on accuracy; for instance, a 75.03% decrease in area and a 0.33% reduction in accuracy for FCNN, as well as a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The OplixNet technique, outlined in the research, overcomes the limitations of traditional Optical Neural Networks (ONNs) by incorporating both light amplitudes and phases in the input data. This method involves reorganizing input and output elements to include both types of information, enabling cross-learning between different ONN structures. OplixNet efficiently reduces the size of ONNs while preserving high accuracy. Experimental results demonstrate a significant reduction in ONN size with minimal impact on accuracy; for example, a 75.03% decrease in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The research introduces the OplixNet technique, which addresses the limitations of traditional Optical Neural Networks (ONNs) by integrating light amplitudes and phases in the input data. This approach involves rearranging input and output components to encompass both types of information, facilitating knowledge transfer among different ONN structures. OplixNet effectively shrinks the size of ONNs while maintaining high precision. Experimental findings show a notable reduction in ONN size with minimal impact on accuracy; for instance, a 75.03% decrease in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The OplixNet technique is introduced in the research to overcome the limitations of traditional Optical Neural Networks (ONNs) by incorporating both light amplitudes and phases in the input data. This method involves reorganizing input and output elements to include both types of information, allowing for knowledge transfer between different ONN structures. OplixNet effectively reduces the size of ONNs while maintaining high precision. Experimental results demonstrate a significant reduction in ONN size with minimal impact on accuracy; for example, a 75.03% decrease in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The research introduces the OplixNet technique to address the limitations of traditional Optical Neural Networks (ONNs) by incorporating both light amplitudes and phases in input data. This approach involves rearranging input and output elements to include both types of information, enabling knowledge transfer between different ONN structures. OplixNet effectively reduces the size of ONNs while maintaining high precision. Experimental results show a significant decrease in ONN size with minimal impact on accuracy, such as a 75.03% reduction in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% reduction in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The OplixNet technique is introduced in the research to overcome the limitations of traditional Optical Neural Networks (ONNs) by incorporating both light amplitudes and phases in input data. This method involves reorganizing input and output elements to include both types of information, facilitating knowledge transfer between different ONN structures. OplixNet effectively reduces the size of ONNs while maintaining high precision. Experimental results demonstrate a significant decrease in ONN size with minimal impact on accuracy, including a 75.03% reduction in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% reduction in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The research introduces the OplixNet technique to address the limitations of traditional Optical Neural Networks (ONNs) by incorporating both light amplitudes and phases in input data. This approach involves restructuring input and output elements to encompass both types of information, enabling knowledge transfer among different ONN structures. OplixNet effectively shrinks the size of ONNs while maintaining high precision. Experimental results show a significant decrease in ONN size with minimal impact on accuracy, including a 75.03% reduction in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% reduction in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The study presents the OplixNet method to overcome the limitations of traditional Optical Neural Networks (ONNs) by integrating both light amplitudes and phases in input data. This strategy involves reorganizing input and output components to include both types of information, allowing for knowledge sharing among various ONN structures. OplixNet effectively reduces the size of ONNs while maintaining high accuracy. Experimental findings demonstrate a notable decrease in ONN size with minimal impact on precision, including a 75.03% reduction in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% reduction in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The OplixNet method is introduced in the study to address the limitations of traditional Optical Neural Networks (ONNs) by incorporating both light amplitudes and phases in input data. This approach involves restructuring input and output elements to incorporate both types of information, facilitating knowledge sharing across different ONN structures. OplixNet effectively shrinks the size of ONNs while maintaining high levels of accuracy. Experimental results show a significant reduction in ONN size with minimal impact on precision, including a 75.03% decrease in area and a 0.33% drop in accuracy for FCNN, as well as a 74.88% decrease in area and a 2.38% drop in accuracy for ResNet-32."
        ],
        [
            "The study introduces the OplixNet method to overcome the limitations of traditional Optical Neural Networks (ONNs) by integrating light amplitudes and phases in input data. This method involves restructuring input and output elements to include both types of information, enabling knowledge sharing among various ONN structures. OplixNet effectively reduces the size of ONNs while maintaining high levels of accuracy. Experimental results demonstrate a significant decrease in ONN size with minimal impact on precision, with a 75.03% reduction in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% reduction in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The OplixNet method is introduced in the study to address the limitations of traditional Optical Neural Networks (ONNs) by incorporating both light amplitudes and phases in the input data. This approach involves restructuring input and output elements to include both types of information, allowing for knowledge sharing across different ONN structures. OplixNet effectively shrinks the size of ONNs while maintaining high levels of accuracy. Experimental results show a significant reduction in ONN size with minimal impact on precision, including a 75.03% decrease in area and a 0.33% drop in accuracy for FCNN, as well as a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The study introduces the OplixNet method to overcome the limitations of traditional Optical Neural Networks (ONNs) by integrating both light amplitudes and phases in the input data. This method involves reorganizing input and output elements to incorporate both types of information, enabling knowledge sharing across various ONN structures. OplixNet efficiently reduces the size of ONNs while maintaining high levels of precision. Experimental findings demonstrate a significant decrease in ONN size with minimal impact on accuracy, including a 75.03% reduction in area and a 0.33% decline in accuracy for FCNN, as well as a 74.88% reduction in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The OplixNet method is introduced in the study to address the limitations of traditional Optical Neural Networks (ONNs) by incorporating both light amplitudes and phases in the input data. This approach involves rearranging input and output elements to include both types of information, facilitating knowledge sharing across different ONN structures. OplixNet effectively shrinks the size of ONNs while maintaining high precision levels. Experimental results show a notable reduction in ONN size with minimal impact on accuracy, including a 75.03% decrease in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% reduction in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The study introduces the OplixNet method to overcome the limitations of traditional Optical Neural Networks (ONNs) by integrating both light amplitudes and phases in the input data. This method involves reorganizing input and output elements to incorporate both types of information, enabling knowledge sharing among different ONN structures. OplixNet efficiently reduces the size of ONNs while maintaining high levels of precision. Experimental findings demonstrate a significant decrease in ONN size with minimal impact on accuracy, including a 75.03% reduction in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The OplixNet method is introduced in the study to address the limitations of traditional Optical Neural Networks (ONNs) by incorporating both light amplitudes and phases in the input data. This approach involves rearranging input and output elements to include both types of information, facilitating the sharing of knowledge among different ONN structures. OplixNet effectively reduces the size of ONNs while maintaining high precision levels. Experimental results show a significant reduction in ONN size with minimal impact on accuracy, including a 75.03% decrease in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The study introduces the OplixNet method to overcome the limitations of traditional Optical Neural Networks (ONNs) by incorporating both light amplitudes and phases in the input data. This method involves rearranging input and output elements to include both types of information, enabling knowledge sharing among different ONN structures. OplixNet effectively reduces the size of ONNs while maintaining high precision levels. Experimental results demonstrate a significant decrease in ONN size with minimal impact on accuracy, including a 75.03% reduction in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The OplixNet method is introduced in the study to address the limitations of traditional Optical Neural Networks (ONNs) by integrating light amplitudes and phases in the input data. This approach involves reorganizing input and output elements to incorporate both types of information, facilitating knowledge sharing across different ONN structures. OplixNet effectively decreases the size of ONNs while maintaining high levels of precision. Experimental results reveal a significant reduction in ONN size with minimal impact on accuracy, including a 75.03% decrease in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The study introduces the OplixNet method to overcome the limitations of traditional Optical Neural Networks (ONNs) by integrating both light amplitudes and phases in the input data. This method involves restructuring input and output elements to include both types of information, promoting knowledge sharing across various ONN structures. OplixNet effectively reduces the size of ONNs while maintaining high levels of precision. Experimental results demonstrate a significant decrease in ONN size with minimal impact on accuracy, such as a 75.03% reduction in area and a 0.33% decrease in accuracy for FCNN, along with a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The OplixNet method is introduced in the study to address the limitations of traditional Optical Neural Networks (ONNs) by incorporating both light amplitudes and phases in the input data. This approach involves restructuring input and output elements to include both types of information, facilitating knowledge sharing across different ONN structures. OplixNet effectively reduces the size of ONNs while maintaining high levels of accuracy. Experimental findings indicate a significant decrease in ONN size with minimal impact on precision, such as a 75.03% reduction in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The study introduces the OplixNet method to overcome the limitations of traditional Optical Neural Networks (ONNs) by integrating light amplitudes and phases in the input data. This strategy involves restructuring input and output elements to include both types of information, enabling knowledge sharing among different ONN structures. OplixNet effectively shrinks the size of ONNs while maintaining high levels of accuracy. Experimental results demonstrate a significant reduction in ONN size with minimal impact on precision, including a 75.03% decrease in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The OplixNet method is introduced in the study to address the limitations of traditional Optical Neural Networks (ONNs) by incorporating both light amplitudes and phases into the input data. This approach involves restructuring input and output elements to include both types of information, facilitating knowledge sharing among different ONN structures. OplixNet effectively reduces the size of ONNs while maintaining high levels of accuracy. Experimental findings show a significant decrease in ONN size with minimal impact on precision, including a 75.03% reduction in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The study introduces the OplixNet method to overcome the limitations of traditional Optical Neural Networks (ONNs) by integrating light amplitudes and phases into the input data. This approach involves restructuring input and output elements to incorporate both types of information, enabling knowledge sharing among different ONN structures. OplixNet effectively shrinks the size of ONNs while maintaining high levels of accuracy. Experimental results demonstrate a significant reduction in ONN size with minimal impact on precision, including a 75.03% decrease in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The study presents the OplixNet method as a solution to the limitations of traditional Optical Neural Networks (ONNs) by incorporating both light amplitudes and phases into the input data. This method involves restructuring input and output elements to include both types of information, facilitating knowledge sharing among various ONN structures. OplixNet effectively reduces the size of ONNs while maintaining high levels of accuracy. Experimental results show a significant decrease in ONN size with minimal impact on precision, including a 75.03% decrease in area and a 0.33% decrease in accuracy for FCNN, as well as a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ],
        [
            "The OplixNet method addresses the constraints of traditional Optical Neural Networks (ONNs) by incorporating light amplitudes and phases in the input data. It involves restructuring input and output elements to include both types of information, enabling knowledge sharing among different ONN structures. OplixNet effectively reduces the size of ONNs while maintaining high accuracy levels. Experimental findings demonstrate a significant reduction in ONN size with minimal impact on precision, such as a 75.03% decrease in area and a 0.33% decrease in accuracy for FCNN, and a 74.88% decrease in area and a 2.38% decrease in accuracy for ResNet-32."
        ]
    ]
}