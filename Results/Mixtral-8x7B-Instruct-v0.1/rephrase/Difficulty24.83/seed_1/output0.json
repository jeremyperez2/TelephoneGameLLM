{
    "adjacency_matrix": [
        [
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0
        ]
    ],
    "prompt_init": [
        "You will receive a text. Your task is to rephrase this text without modifying its meaning. Just output your new text, nothing else. Here is the text:"
    ],
    "prompt_update": [
        "You will receive a text. Your task is to rephrase this text without modifying its meaning. Just output your new text, nothing else. Here is the text:"
    ],
    "personality_list": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "format_prompt": [
        ""
    ],
    "initial_story": "bias triangles represent features in stability diagrams of quantum dot (qd)devices, whose occurrence and property analysis are crucial indicators for spinphysics. nevertheless, challenges associated with quality and availability ofdata as well as the subtlety of physical phenomena of interest have hindered anautomatic and bespoke analysis framework, often still relying (in part) onhuman labelling and verification. we introduce a feature extraction frameworkfor bias triangles, built from unsupervised, segmentation-based computer visionmethods, which facilitates the direct identification and quantification ofphysical properties of the former. thereby, the need for human input or largetraining datasets to inform supervised learning approaches is circumvented,while additionally enabling the automation of pixelwise shape and featurelabeling. in particular, we demonstrate that pauli spin blockade (psb)detection can be conducted effectively, efficiently and without any trainingdata as a direct result of this approach. ",
    "stories": [
        [
            "In stability diagrams of quantum dot (qd) devices, bias triangles are important features that provide critical information about spin physics. However, the lack of high-quality data and the complexity of the physical phenomena have made it difficult to develop automatic and customized analysis frameworks, which often still rely on human intervention for labeling and verification. In this paper, we propose a feature extraction framework for bias triangles that utilizes unsupervised, segmentation-based computer vision techniques. This approach allows for the direct identification and quantification of the physical properties of bias triangles, eliminating the need for human input or large training datasets. Additionally, it enables automated pixel-wise shape and feature labeling. We show that this method can effectively and efficiently detect Pauli spin blockade (PSB) without the need for training data."
        ],
        [
            "Quantum dot (qd) device stability diagrams commonly show bias triangles, which offer significant insights into spin physics. However, creating automatic and personalized analysis frameworks is challenging due to the scarcity of high-quality data and the complexity of the underlying physics, often requiring human involvement for data categorization and validation. This paper introduces a bias triangle feature extraction framework using unsupervised computer vision methods based on segmentation. This strategy directly identifies and quantifies bias triangle properties, reducing the need for human input and large datasets. It also allows for automated pixel-wise shape and feature labeling. The proposed method successfully and efficiently detects Pauli spin blockade (PSB) without requiring training data."
        ],
        [
            "A stability diagram for quantum dot (QD) devices typically displays bias triangles, which provide valuable information about spin physics. However, creating customized and analytical frameworks can be difficult because of the limited availability of high-quality data and the complexity of the underlying physics. Human intervention is often necessary for data categorization and verification due to these challenges. This paper presents a bias triangle feature extraction framework that uses unsupervised computer vision techniques based on segmentation. This approach directly identifies and quantifies bias triangle properties, thereby reducing the need for human involvement and large datasets. It also enables automated pixel-wise labeling of shapes and features. The proposed method effectively and efficiently detects Pauli spin blockade (PSB) without the need for training data."
        ],
        [
            "A framework for extracting features of quantum dot (QD) devices' stability diagram bias triangles is presented in this paper. These triangles contain important data about spin physics, but creating specialized analytical models can be difficult due to the complexity of the physics and the scarcity of high-quality data. Human input is often required for data verification and categorization. The proposed method uses unsupervised computer vision techniques based on segmentation to directly identify and quantify bias triangle properties. This reduces the need for human intervention and large datasets, and allows for automated pixel-wise labeling of shapes and features. The framework effectively and efficiently detects Pauli spin blockade (PSB) without the need for training data."
        ],
        [
            "This paper introduces a method for extracting features from the stability diagrams of quantum dot (QD) devices, which contain crucial data about spin physics. The paper notes that creating specific analytical models can be challenging due to the intricacy of the physics and the limited availability of high-quality data, often requiring human input for data verification and categorization. To address this, the proposed method utilizes unsupervised computer vision techniques based on segmentation to directly identify and quantify properties of bias triangles. This reduces the need for human intervention, large datasets, and training data, and enables automated pixel-wise labeling of shapes and features. The framework is effective and efficient in detecting Pauli spin blockade (PSB)."
        ],
        [
            "This paper presents a technique for extracting features from quantum dot (QD) devices' stability diagrams, which hold significant information about spin physics. The paper acknowledges the difficulty in constructing specific analytical models due to the complexity of the physics and the scarcity of high-quality data, often necessitating human involvement for data validation and categorization. In response, the proposed method employs unsupervised computer vision techniques, particularly segmentation, to directly detect and measure properties of bias triangles. This approach decreases the need for human intervention, large datasets, and training data, and allows for automated pixel-wise labeling of shapes and features. The framework proves to be successful and efficient in identifying Pauli spin blockade (PSB)."
        ],
        [
            "This paper introduces a method for deriving features from the stability diagrams of quantum dot (QD) devices, which contain valuable data about spin physics. The paper recognizes the challenges in creating precise analytical models due to the intricacy of the physics and the limited availability of high-quality data, frequently requiring human input for data verification and classification. To address this, the proposed approach utilizes unsupervised computer vision techniques, in particular segmentation, to directly detect and quantify properties of bias triangles. This method reduces the requirement for human intervention, large datasets, and training data, and enables automated pixel-wise labeling of shapes and features. The proposed framework demonstrates success and efficiency in identifying Pauli spin blockade (PSB)."
        ],
        [
            "This paper presents a technique for extracting features from stability diagrams of quantum dot (QD) devices, which hold significant information about spin physics. The paper acknowledges the difficulties in developing accurate analytical models because of the complexity of the physics and the scarcity of high-quality data, often necessitating human involvement for data validation and categorization. In response to this, the proposed method employs unsupervised computer vision techniques, specifically segmentation, to directly detect and measure properties of bias triangles. This approach lessens the need for human intervention, large datasets, and training data, and allows for automatic pixel-wise labeling of shapes and features. The suggested framework successfully and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "This paper introduces a method for deriving features from stability diagrams of quantum dot (QD) devices, which contain valuable data about spin physics. The paper recognizes the challenges in creating precise analytical models due to the intricacy of the physics and the limited availability of high-quality data, frequently requiring human input for data verification and classification. To address this, the proposed approach utilizes unsupervised computer vision techniques, in particular segmentation, to directly identify and quantify properties of bias triangles. This method reduces the requirement for human intervention, large datasets, and training data, and enables automatic pixel-wise labeling of shapes and features. The suggested framework effectively and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "This paper presents a technique for extracting features from stability diagrams of quantum dot (QD) devices, which hold important information about spin physics. The paper acknowledges the difficulties in creating accurate analytical models due to the complexity of the physics and the scarcity of high-quality data, often needing human involvement for data validation and categorization. To tackle this, the proposed method employs unsupervised computer vision techniques, specifically segmentation, to directly detect and quantify bias triangle properties. This approach decreases the need for human intervention, large datasets, and training data, and allows for automatic pixel-wise labeling of shapes and features. The proposed framework successfully and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "This article introduces a method for deriving features from stability diagrams of quantum dot (QD) devices, which contain significant data about spin physics. The paper recognizes the challenges in building precise analytical models due to the intricacy of the physics and the lack of high-quality data, frequently requiring human input for data verification and classification. In response to this, the suggested technique uses unsupervised computer vision techniques, particularly segmentation, to directly identify and measure the properties of bias triangles. This method reduces the requirement for human intervention, large datasets, and training data, and enables automatic pixel-wise labeling of shapes and features. The proposed framework effectively and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article presents a new approach for extracting features from stability diagrams of quantum dot (QD) devices, which hold substantial information about spin physics. The paper acknowledges the difficulties in creating accurate analytical models due to the complexity of the physics and the scarcity of high-quality data, often needing human involvement for data validation and categorization. To address this, the proposed method utilizes unsupervised computer vision techniques, specifically segmentation, to directly locate and measure the properties of bias triangles. This approach reduces the need for human intervention, large datasets, and training data, and allows for automatic pixel-wise labeling of shapes and features. The suggested framework effectively and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The paper introduces a fresh method to extract features from stability diagrams of quantum dot (QD) devices, which are rich in spin physics information. The article recognizes the challenges in building precise analytical models, attributed to the intricacy of the physics and the limited availability of high-quality data, often requiring human input for data verification and classification. In response, the proposed technique employs unsupervised computer vision methods, in particular segmentation, to directly identify and assess the properties of bias triangles. This method decreases the need for human intervention, extensive datasets, and training data, and enables automatic pixel-wise labeling of shapes and features. The suggested framework successfully and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article presents a new approach to extract features from quantum dot (QD) devices' stability diagrams, which are full of spin physics information. The paper acknowledges the difficulties in creating accurate analytical models, due to the complexity of the physics and the scarcity of high-quality data, which often necessitates human involvement for data verification and categorization. To address this, the proposed method uses unsupervised computer vision techniques, specifically segmentation, to directly locate and evaluate bias triangles' properties. This approach reduces the need for human intervention, large datasets, and training data, and allows for automatic pixel-wise labeling of shapes and features. The suggested framework effectively and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article introduces a fresh method to extract features from quantum dot (QD) devices' stability diagrams, which are rich in spin physics information. The paper recognizes the challenges in building precise analytical models, attributed to the intricacy of the physics and the limited availability of high-quality data, frequently requiring human input for data validation and classification. In response to this, the proposed technique utilizes unsupervised computer vision techniques, in particular segmentation, to directly identify and assess the properties of bias triangles. This method decreases the requirement for human intervention, large datasets, and training data, and enables automatic pixel-wise labeling of shapes and features. The suggested framework successfully and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article presents a new approach for extracting features from stability diagrams of quantum dot (QD) devices, which are abundant in spin physics information. The paper acknowledges the difficulties in creating accurate analytical models due to the complexity of the physics and the scarcity of high-quality data, often needing human involvement for data verification and categorization. To address this, the proposed method uses unsupervised computer vision techniques, specifically segmentation, to directly locate and evaluate the properties of bias triangles. This approach reduces the need for human intervention, large datasets, and training data, and allows for automatic pixel-wise labeling of shapes and features. The proposed framework effectively and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article introduces a fresh method for extracting features from stability diagrams of quantum dot (QD) devices, which are rich in spin physics data. The paper recognizes the challenges in building precise analytical models because of the intricacy of the physics and the lack of high-quality data, typically requiring human intervention for data validation and classification. To tackle this, the suggested technique employs unsupervised computer vision methods, in particular segmentation, to directly identify and assess the properties of bias triangles. This method minimizes the requirement for human interference, large datasets, and training data, and enables automatic pixel-wise labeling of shapes and features. The proposed framework successfully and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article presents a new approach to extract features from quantum dot (QD) device stability diagrams, which are filled with spin physics information. The paper acknowledges the difficulties in creating accurate analytical models due to the complexity of the physics and the scarcity of high-quality data, often necessitating human involvement for data verification and categorization. In response, the proposed method utilizes unsupervised computer vision techniques, specifically segmentation, to directly locate and analyze the properties of bias triangles. This approach reduces the need for human intervention, large datasets, and training data, and allows for automatic pixel-wise labeling of shapes and features. The suggested framework effectively and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article introduces a fresh perspective on extracting features from quantum dot (QD) device stability diagrams, which are rich in spin physics information. The paper recognizes the challenges in developing precise analytical models because of the complex physics and limited availability of high-quality data, frequently requiring human intervention for data validation and classification. In order to address this, the proposed method employs unsupervised computer vision techniques, in particular segmentation, to directly identify and examine the properties of bias triangles. This method reduces the requirement for human intervention, large datasets, and training data, and enables automatic pixel-wise labeling of shapes and features. The suggested framework successfully and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article presents a new viewpoint on how to pull out features from stability diagrams of quantum dot (QD) devices, which contain a lot of information about spin physics. The paper acknowledges the difficulties in creating accurate analytical models due to the complex physics and limited access to high-quality data, often needing human involvement for data verification and categorization. To tackle this, the proposed method uses unsupervised computer vision techniques, in particular segmentation, to directly locate and analyze the properties of bias triangles. This method lessens the need for human intervention, large datasets, and training data, and allows for automatic pixel-wise labeling of shapes and features. The proposed framework effectively and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article puts forth a fresh perspective on extracting features from stability diagrams of quantum dot (QD) devices, which hold a wealth of information about spin physics. The paper recognizes the challenges in building precise analytical models, attributed to the complex physics and scarcity of high-quality data, often requiring human input for data validation and classification. In response, the proposed approach utilizes unsupervised computer vision techniques, specifically segmentation, to directly identify and analyze the properties of bias triangles. This method reduces the necessity for human intervention, large datasets, and training data, and enables automatic pixel-wise labeling of shapes and features. The suggested framework successfully and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article offers a new viewpoint on extracting features from stability diagrams of quantum dot (QD) devices, which contain a lot of information about spin physics. The paper acknowledges the difficulties in creating accurate analytical models, which are due to the complex physics and lack of high-quality data, frequently needing human involvement for data validation and classification. To address this, the proposed approach uses unsupervised computer vision techniques, in particular segmentation, to directly locate and analyze the properties of bias triangles. This method decreases the requirement for human intervention, large datasets, and training data, and allows for automatic pixel-wise labeling of shapes and features. The suggested framework effectively and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article puts forth a fresh perspective on extracting features from stability diagrams of quantum dot (QD) devices, which hold a wealth of information about spin physics. The paper recognizes the challenges in building precise analytical models, attributed to the complex physics and scarcity of high-quality data, often requiring human input for data verification and categorization. In response to this, the proposed approach employs unsupervised computer vision methods, specifically segmentation, to directly identify and examine the properties of bias triangles. This method reduces the need for human intervention, large datasets, and training data, and enables automatic pixel-wise labeling of shapes and features. The suggested framework successfully and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article offers a new viewpoint on how to pull out features from stability diagrams of quantum dot (QD) devices, which contain a lot of information about spin physics. The article acknowledges the difficulties in creating accurate analytical models, which are due to the complex physics and lack of high-quality data, usually needing human input for data validation and classification. As a solution, the suggested approach uses unsupervised computer vision techniques, particularly segmentation, to directly locate and analyze the properties of bias triangles. This method lowers the need for human involvement, large datasets, and training data, and allows for automatic pixel-wise labeling of shapes and features. The proposed framework effectively and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article presents a fresh perspective on extracting features from stability diagrams of quantum dot (QD) devices, which are rich in information about spin physics. The article recognizes the challenges in building precise analytical models, attributed to the complicated physics and scarcity of high-quality data, often requiring human intervention for data verification and categorization. To address this, the suggested approach utilizes unsupervised computer vision techniques, specifically segmentation, to directly identify and analyze the properties of bias triangles. This method reduces the requirement for human intervention, large datasets, and training data, and enables automatic pixel-wise labeling of shapes and features. The proposed framework successfully and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article offers a new viewpoint on extracting features from stability diagrams of quantum dot (QD) devices, which contain a lot of information about spin physics. The article acknowledges the difficulties in creating accurate analytical models, which are due to the complicated physics and lack of high-quality data, often needing human involvement for data verification and classification. To tackle this, the proposed method uses unsupervised computer vision techniques, particularly segmentation, to directly locate and analyze the properties of bias triangles. This approach lowers the need for human intervention, large datasets, and training data, and enables automatic pixel-wise labeling of shapes and features. The suggested framework effectively and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article presents a fresh perspective on extracting features from stability diagrams of quantum dot (QD) devices, which hold substantial information about spin physics. The article recognizes the challenges in developing precise analytical models, attributed to the complex physics and scarcity of high-quality data, typically requiring human input for data validation and categorization. To address this, the proposed method utilizes unsupervised computer vision techniques, specifically segmentation, to directly identify and analyze the properties of bias triangles. This approach decreases the requirement for human intervention, large datasets, and training data, and allows for automatic pixel-wise labeling of shapes and features. The suggested framework successfully and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article offers a new view on how to pull out features from stability diagrams of quantum dot (QD) devices, which contain significant data about spin physics. The article acknowledges the difficulties in creating accurate analytical models, which is due to the complicated physics and lack of high-quality data, usually needing human input for data verification and classification. To tackle this, the proposed method uses unsupervised computer vision techniques, in particular segmentation, to directly locate and analyze the properties of bias triangles. This method reduces the need for human involvement, large datasets, and training data, and enables automatic pixel-wise labeling of shapes and features. The suggested system effectively and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article presents a fresh perspective on extracting features from stability diagrams of quantum dot (QD) devices, which hold substantial information about spin physics. The article recognizes the challenges in building precise analytical models, attributed to the complex physics and scarcity of high-quality data, often requiring human intervention for data validation and categorization. To address this, the proposed approach utilizes unsupervised computer vision techniques, in particular segmentation, to directly identify and examine the properties of bias triangles. This method decreases the requirement for human intervention, large datasets, and training data, and facilitates automatic pixel-wise labeling of shapes and features. The proposed system successfully and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article offers a new viewpoint on how to pull out features from stability diagrams of quantum dot (QD) devices, which contain significant data about spin physics. The article acknowledges the difficulties in creating accurate analytical models, due to the complex physics and lack of high-quality data, which often necessitate human involvement for data verification and classification. To tackle this, the suggested method uses unsupervised computer vision techniques, in particular segmentation, to directly locate and analyze the properties of bias triangles. This approach reduces the need for human intervention, large datasets, and training data, and enables automatic pixel-wise labeling of shapes and features. The proposed system effectively and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article presents a fresh perspective on extracting features from stability diagrams of quantum dot (QD) devices, which hold substantial information about spin physics. The article recognizes the challenges in building precise analytical models, attributed to the complicated physics and insufficient high-quality data, often requiring human input for data validation and categorization. To address this, the proposed method employs unsupervised computer vision techniques, specifically segmentation, to directly identify and examine the properties of bias triangles. This method decreases the requirement for human intervention, large datasets, and training data, and allows for automatic pixel-wise labeling of shapes and features. The suggested system successfully and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article puts forth a new approach for extracting features from stability diagrams of quantum dot (QD) devices, which contain valuable information about spin physics. The article acknowledges the difficulties in creating accurate analytical models, which are due to the complex physics and sometimes lacking high-quality data, often needing human involvement for data verification and classification. In order to tackle this, the proposed method utilizes unsupervised computer vision techniques, in particular segmentation, to directly locate and analyze the properties of bias triangles. This method reduces the need for human intervention, large datasets, and training data, and enables automatic pixel-wise labeling of shapes and features. The proposed system effectively and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article introduces a fresh method for deriving features from stability diagrams of quantum dot (QD) devices, which hold significant data about spin physics. The article recognizes the challenges in building precise analytical models, attributed to the complicated physics and occasionally poor-quality data, frequently requiring human input for data validation and categorization. To address this, the suggested approach employs unsupervised computer vision techniques, specifically segmentation, to directly identify and examine the properties of bias triangles. This method decreases the requirement for human intervention, large datasets, and training data, and allows for automatic pixel-wise labeling of shapes and features. The proposed system successfully and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article presents a new technique to extract features from stability diagrams of quantum dot (QD) devices, which contain important information about spin physics. The article acknowledges the difficulties in constructing accurate analytical models due to the complex physics and occasionally low-quality data, often needing human involvement for data verification and classification. To tackle this, the proposed method uses unsupervised computer vision techniques, in particular segmentation, to directly locate and analyze the properties of bias triangles. This approach reduces the need for human intervention, large datasets, and training data, and enables automatic pixel-wise labeling of shapes and features. The suggested system effectively and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article introduces a fresh method to extract features from quantum dot (QD) device stability diagrams, which hold crucial data about spin physics. The article recognizes the challenges in creating precise analytical models due to the complicated physics and occasional poor-quality data, frequently requiring human input for data validation and categorization. To address this, the proposed solution utilizes unsupervised computer vision techniques, specifically segmentation, to directly identify and examine the properties of bias triangles. This approach decreases the requirement for human intervention, large datasets, and training data, and allows for automatic pixel-wise labeling of shapes and features. The proposed system successfully and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article presents a new approach to extract features from stability diagrams of quantum dot (QD) devices, which contain important information about spin physics. The article acknowledges the difficulties in developing accurate analytical models due to the complex physics and occasional low-quality data, often needing human involvement for data verification and classification. In response to this, the proposed solution uses unsupervised computer vision techniques, in particular segmentation, to directly locate and analyze the properties of bias triangles. This method reduces the need for human intervention, large datasets, and training data, and enables automatic pixel-wise labeling of shapes and features. The proposed system effectively and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article introduces a fresh perspective on extracting features from stability diagrams of quantum dot (QD) devices, which hold crucial data about spin physics. The article recognizes the challenges in creating precise analytical models due to the complicated physics and occasional poor-quality data, typically requiring human input for data validation and categorization. To address this, the suggested approach utilizes unsupervised computer vision techniques, specifically segmentation, to directly identify and analyze the properties of bias triangles. This method decreases the requirement for human intervention, large datasets, and training data, and allows for automatic pixel-wise labeling of shapes and features. The proposed system successfully and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article presents a new viewpoint on extracting features from stability diagrams of quantum dot (QD) devices, which contain vital information about spin physics. The article acknowledges the difficulties in developing exact analytical models because of the complex physics and occasional low-quality data, often needing human input for data verification and classification. To tackle this, the proposed method employs unsupervised computer vision techniques, particularly segmentation, to directly locate and analyze the properties of bias triangles. This approach reduces the need for human intervention, large datasets, and training data, and enables automatic pixel-wise labeling of shapes and features. The suggested system effectively and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article puts forth a fresh perspective on extracting features from stability diagrams of quantum dot (QD) devices, which hold crucial information about spin physics. The article recognizes the challenges in creating precise analytical models due to the complicated physics and occasional poor-quality data, frequently requiring human involvement for data validation and categorization. To address this, the proposed method utilizes unsupervised computer vision techniques, specifically segmentation, to directly identify and analyze the properties of bias triangles. This method reduces the requirement for human intervention, large datasets, and training data, and allows for automatic pixel-wise labeling of shapes and features. The proposed system successfully and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article presents a new viewpoint on extracting features from stability diagrams of quantum dot (QD) devices, which contain vital information about spin physics. The article acknowledges the difficulties in developing exact analytical models because of the complicated physics and occasional low-quality data, often needing human involvement for data verification and classification. To tackle this, the suggested approach uses unsupervised computer vision techniques, in particular segmentation, to directly locate and analyze the properties of bias triangles. This method decreases the need for human intervention, large datasets, and training data, and enables automatic pixel-wise labeling of shapes and features. The proposed system accurately and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article puts forth a fresh perspective on extracting features from stability diagrams of quantum dot (QD) devices, which hold crucial information about spin physics. The article recognizes the challenges in creating precise analytical models due to the complex physics and occasional poor-quality data, frequently requiring human involvement for data validation and categorization. To address this, the proposed method utilizes unsupervised computer vision techniques, specifically segmentation, to directly identify and analyze the properties of bias triangles. This approach reduces the requirement for human intervention, large datasets, and training data, and allows for automatic pixel-wise labeling of shapes and features. The suggested system accurately and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article presents a new viewpoint on extracting features from stability diagrams of quantum dot (QD) devices, which contain vital information about spin physics. The article acknowledges the difficulties in developing exact analytical models because of the complicated physics and occasional low-quality data, often needing human involvement for data verification and classification. To tackle this, the proposed method employs unsupervised computer vision techniques, in particular segmentation, to directly locate and analyze the properties of bias triangles. This method decreases the need for human intervention, large datasets, and training data, and enables automatic pixel-wise labeling of shapes and features. The proposed system accurately and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article puts forth a fresh perspective on extracting features from stability diagrams of quantum dot (QD) devices, which hold crucial information about spin physics. The article recognizes the challenges in creating precise analytical models due to the complex physics and occasional poor-quality data, frequently requiring human input for data validation and categorization. In order to address this, the suggested approach utilizes unsupervised computer vision techniques, specifically segmentation, to directly identify and analyze the properties of bias triangles. This method reduces the need for human intervention, large datasets, and training data, and allows for automatic pixel-wise labeling of shapes and features. The proposed system accurately and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article presents a new viewpoint on extracting features from stability diagrams of quantum dot (QD) devices, which contain vital information about spin physics. The article acknowledges the difficulties in developing accurate analytical models because of the complex physics and occasional low-quality data, often needing human involvement for data verification and categorization. To tackle this, the proposed method uses unsupervised computer vision techniques, in particular segmentation, to directly locate and analyze the properties of bias triangles. This approach decreases the need for human intervention, large datasets, and training data, and enables automatic pixel-wise labeling of shapes and features. The suggested system accurately and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article puts forth a fresh perspective on extracting features from stability diagrams of quantum dot (QD) devices, which hold crucial information about spin physics. The article recognizes the challenges in creating precise analytical models due to the complicated physics and occasional low-quality data, frequently requiring human input for data validation and classification. To address this, the proposed method utilizes unsupervised computer vision techniques, specifically segmentation, to directly identify and analyze the properties of bias triangles. This method reduces the need for human intervention, large datasets, and training data, and allows for automatic pixel-wise labeling of shapes and features. The proposed system accurately and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article presents a new viewpoint on how to derive features from stability diagrams of quantum dot (QD) devices, which contain vital data about spin physics. The article acknowledges the difficulties in creating accurate analytical models due to the complex physics and occasional poor-quality data, often needing human involvement for data verification and categorization. To tackle this, the suggested approach uses unsupervised computer vision techniques, in particular segmentation, to directly locate and analyze the properties of bias triangles. This method decreases the requirement for human intervention, large datasets, and training data, and enables automatic pixel-wise labeling of shapes and features. The proposed system accurately and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article introduces a fresh perspective on extracting features from stability diagrams of quantum dot (QD) devices, which hold essential information about spin physics. The article recognizes the challenges in building precise analytical models because of the complex physics and occasional low-quality data, typically requiring human intervention for data validation and classification. To address this, the proposed solution utilizes unsupervised computer vision techniques, specifically segmentation, to directly identify and examine the properties of bias triangles. This approach reduces the need for human intervention, large datasets, and training data, and allows for automatic pixel-wise labeling of shapes and features. The suggested system accurately and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article presents a new viewpoint on how to pull out features from stability diagrams of quantum dot (QD) devices, which contain crucial data about spin physics. The article acknowledges the difficulties in creating accurate analytical models due to the complicated physics and occasional poor-quality data, often needing human input for data verification and categorization. To tackle this, the proposed solution uses unsupervised computer vision methods, in particular segmentation, to instantly locate and analyze the properties of bias triangles. This method decreases the requirement for human intervention, large datasets, and training data, and enables automatic pixel-wise labeling of shapes and features. The proposed system accurately and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article introduces a fresh perspective on extracting features from stability diagrams of quantum dot (QD) devices, which hold significant information about spin physics. The article recognizes the challenges in building precise analytical models due to the intricate physics and occasional low-quality data, frequently requiring human involvement for data validation and classification. To address this, the suggested approach employs unsupervised computer vision techniques, specifically segmentation, to quickly identify and analyze the properties of bias triangles. This method reduces the need for human intervention, large datasets, and training data, and allows for automatic pixel-wise labeling of shapes and features. The proposed system accurately and efficiently detects Pauli spin blockade (PSB)."
        ],
        [
            "The article presents a new viewpoint on extracting features from stability diagrams of quantum dot (QD) devices, which contain valuable data about spin physics. The article acknowledges the difficulties in creating accurate analytical models because of the complex physics and occasional poor-quality data, often needing human involvement for data verification and categorization. To tackle this, the proposed method uses unsupervised computer vision techniques, in particular segmentation, to rapidly locate and analyze the properties of bias triangles. This approach decreases the requirement for human intervention, large datasets, and training data, and enables automatic pixel-wise labeling of shapes and features. The suggested system accurately and efficiently detects Pauli spin blockade (PSB)."
        ]
    ]
}