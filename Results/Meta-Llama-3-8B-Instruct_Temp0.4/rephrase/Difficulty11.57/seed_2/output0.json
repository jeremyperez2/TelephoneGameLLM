{
    "adjacency_matrix": [
        [
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0
        ]
    ],
    "prompt_init": [
        "You will receive a text. Your task is to rephrase this text without modifying its meaning. Just output your new text, nothing else. Here is the text:"
    ],
    "prompt_update": [
        "You will receive a text. Your task is to rephrase this text without modifying its meaning. Just output your new text, nothing else. Here is the text:"
    ],
    "personality_list": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "format_prompt": [
        ""
    ],
    "initial_story": "having the potential for high speed, high throughput, and low energy cost,optical neural networks (onns) have emerged as a promising candidate foraccelerating deep learning tasks. in conventional onns, light amplitudes aremodulated at the input and detected at the output. however, the light phasesare still ignored in conventional structures, although they can also carryinformation for computing. to address this issue, in this paper, we propose aframework called oplixnet to compress the areas of onns by modulating inputimage data into the amplitudes and phase parts of light signals. the input andoutput parts of the onns are redesigned to make full use of both amplitude andphase information. moreover, mutual learning across different onn structures isintroduced to maintain the accuracy. experimental results demonstrate that theproposed framework significantly reduces the areas of onns with the accuracywithin an acceptable range. for instance, 75.03% area is reduced with a 0.33%accuracy decrease on fully connected neural network (fcnn) and 74.88% area isreduced with a 2.38% accuracy decrease on resnet-32. ",
    "stories": [
        [
            "Optical neural networks (ONNs) have gained attention for their potential to accelerate deep learning tasks due to their ability to support high speed, high throughput, and low energy costs. In traditional ONNs, light amplitudes are modulated at the input and detected at the output, but the light phases are currently ignored, despite holding potential for carrying additional information. To address this limitation, we introduce OplixNet, a framework that compresses the area of ONNs by separating input image data into amplitude and phase components of light signals. By redesigning the input and output parts of ONNs to utilize both amplitude and phase information, our framework achieves improved performance. Additionally, mutual learning across different ONN structures is incorporated to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks (FCNN) and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Optical neural networks have gained popularity due to their potential to accelerate deep learning tasks by supporting high speeds, high throughput, and low energy costs. In traditional optical neural networks, light amplitudes are modulated at the input and detected at the output, but the light phases are currently overlooked, despite holding potential for carrying additional information. To address this limitation, we propose OplixNet, a framework that reduces the area of optical neural networks by separating input image data into amplitude and phase components of light signals. By redesigning the input and output parts of optical neural networks to utilize both amplitude and phase information, our framework achieves improved performance. Furthermore, mutual learning across different optical neural network structures is incorporated to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Optical neural networks have gained traction due to their ability to expedite deep learning tasks by supporting rapid processing, high efficiency, and low energy consumption. In traditional optical neural networks, light amplitudes are modulated at the input and detected at the output, but the light phases are currently overlooked, despite holding potential for carrying supplementary information. To address this limitation, we propose OplixNet, a framework that minimizes the area of optical neural networks by separating input image data into amplitude and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both amplitude and phase information, our framework achieves enhanced performance. Moreover, mutual learning across different optical neural network architectures is incorporated to maintain accuracy. Experimental results demonstrate substantial area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to accelerate deep learning tasks by supporting rapid processing, high efficiency, and low energy consumption. In traditional optical neural networks, light amplitudes are modulated at the input and detected at the output, but the light phases are currently overlooked, despite holding potential for carrying additional information. To address this limitation, we propose OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into amplitude and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both amplitude and phase information, our framework achieves improved performance. Additionally, mutual learning across different optical neural network architectures is incorporated to maintain accuracy. Experimental results show significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their capacity to accelerate deep learning tasks by supporting swift processing, high efficiency, and low energy consumption. In traditional optical neural networks, light amplitudes are modulated at the input and detected at the output, but the light phases are currently overlooked, despite holding potential for carrying additional information. To address this limitation, we propose OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into amplitude and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both amplitude and phase information, our framework achieves improved performance. Furthermore, mutual learning across different optical neural network architectures is incorporated to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to speed up deep learning tasks by processing information quickly, efficiently, and with low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and detected at the output, but the light's phase is currently overlooked, despite having potential to carry additional information. To address this limitation, we propose OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Additionally, mutual learning across different optical neural network architectures is incorporated to maintain accuracy. Experimental results show significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to accelerate deep learning tasks by processing information rapidly, efficiently, and with minimal energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and detected at the output, but the phase of light is currently overlooked, despite its potential to convey additional information. To address this limitation, we introduce OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Moreover, mutual learning across different optical neural network architectures is incorporated to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to speed up deep learning tasks by processing information quickly, efficiently, and with minimal energy usage. In traditional optical neural networks, light intensity is adjusted at the input and detected at the output, but the phase of light is currently overlooked, despite its potential to convey additional information. To address this limitation, we propose OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Furthermore, mutual learning across different optical neural network architectures is incorporated to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to accelerate deep learning tasks by processing information rapidly, efficiently, and with minimal energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and detected at the output, but the phase of light is currently overlooked, despite its potential to convey additional information. To address this limitation, we introduce OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Additionally, mutual learning across different optical neural network architectures is incorporated to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to accelerate deep learning tasks quickly, efficiently, and with low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and detected at the output, but the phase of light is currently overlooked, despite its potential to convey additional information. To address this limitation, we introduce OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Moreover, mutual learning across different optical neural network architectures is incorporated to maintain accuracy. Experimental results show significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to speed up deep learning tasks quickly, efficiently, and with low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and detected at the output, but the phase of light is currently overlooked, despite its potential to convey additional information. To address this limitation, we introduce OplixNet, a framework that reduces the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Moreover, mutual learning across different optical neural network architectures is incorporated to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to accelerate deep learning tasks rapidly, efficiently, and with minimal energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and detected at the output, but the phase of light is currently overlooked, despite its potential to convey additional information. To address this limitation, we propose OplixNet, a framework that reduces the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Furthermore, mutual learning across different optical neural network architectures is incorporated to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to rapidly, efficiently, and with low energy consumption accelerate deep learning tasks. In traditional optical neural networks, light intensity is adjusted at the input and detected at the output, but the phase of light is currently overlooked, despite its potential to convey additional information. To address this limitation, we propose OplixNet, a framework that reduces the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Additionally, mutual learning across different optical neural network architectures is incorporated to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to quickly, efficiently, and with low energy consumption accelerate deep learning tasks. In traditional optical neural networks, light intensity is adjusted at the input and detected at the output, but the phase of light is currently overlooked, despite its potential to convey additional information. To address this limitation, we propose OplixNet, a framework that reduces the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Furthermore, mutual learning across different optical neural network architectures is incorporated to maintain accuracy. Experimental results show significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to rapidly and efficiently process deep learning tasks with minimal energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and detected at the output, but the phase of light is currently overlooked, despite its potential to provide additional information. To address this limitation, we introduce OplixNet, a framework that reduces the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Additionally, mutual learning across different optical neural network architectures is incorporated to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to quickly and efficiently process deep learning tasks with minimal energy expenditure. In traditional optical neural networks, light intensity is adjusted at the input and detected at the output, but the phase of light is currently overlooked, despite its potential to provide additional information. To address this limitation, we present OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Furthermore, mutual learning across different optical neural network architectures is incorporated to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to rapidly process deep learning tasks with minimal energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and detected at the output, but the phase of light is currently overlooked, despite its potential to provide additional information. To address this limitation, we introduce OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Additionally, mutual learning across different optical neural network architectures is incorporated to maintain accuracy. Experimental results show significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to quickly process deep learning tasks with low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and detected at the output, but the phase of light is currently overlooked, despite its potential to provide additional information. To address this limitation, we introduce OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Furthermore, we incorporate mutual learning across different optical neural network architectures to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to rapidly process deep learning tasks with minimal energy expenditure. In traditional optical neural networks, light intensity is adjusted at the input and detected at the output, but the phase of light is currently overlooked, despite its potential to provide supplementary information. To address this limitation, we introduce OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Additionally, we incorporate mutual learning across different optical neural network architectures to maintain accuracy. Experimental results demonstrate substantial area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to quickly process deep learning tasks with low energy consumption. Traditional optical neural networks adjust light intensity at the input and detect it at the output, but neglect the phase of light, which could provide additional information. To address this limitation, we propose OplixNet, a framework that reduces the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Furthermore, we incorporate mutual learning across different optical neural network architectures to maintain accuracy. Experimental results show significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to rapidly process deep learning tasks with minimal energy expenditure. Conventional optical neural networks adjust light intensity at the input and detect it at the output, but overlook the phase of light, which could offer supplementary information. To address this limitation, we propose OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves enhanced performance. Furthermore, we incorporate mutual learning across different optical neural network architectures to maintain accuracy. Experimental results demonstrate substantial area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to quickly process deep learning tasks with low energy consumption. Traditional optical neural networks adjust light intensity at the input and detect it at the output, but neglect the phase of light, which could provide additional information. To overcome this limitation, we introduce OplixNet, a framework that reduces the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Additionally, we incorporate mutual learning across different optical neural network architectures to maintain accuracy. Experimental results show significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to rapidly process deep learning tasks with low energy expenditure. Traditional optical neural networks adjust light intensity at the input and detect it at the output, overlooking the phase of light, which could offer supplementary information. To address this limitation, we present OplixNet, a framework that minimizes the size of optical neural networks by segregating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to leverage both intensity and phase information, our framework achieves enhanced performance. Furthermore, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental findings demonstrate substantial area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to quickly process deep learning tasks with minimal energy consumption. Traditional optical neural networks adjust light intensity at the input and detect it at the output, neglecting the phase of light, which could provide additional information. To address this limitation, we propose OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Additionally, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results show significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained attention due to their ability to efficiently process deep learning tasks with low energy consumption. Traditional optical neural networks adjust light intensity at the input and detect it at the output, overlooking the phase of light, which could offer supplementary information. To address this limitation, we introduce OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Furthermore, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results demonstrate substantial area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to efficiently process deep learning tasks with low energy consumption. Traditional optical neural networks only adjust light intensity at the input and detect it at the output, neglecting the phase of light, which could provide additional information. To overcome this limitation, we propose OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Moreover, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results show significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to efficiently process deep learning tasks with low energy consumption. Traditional optical neural networks only adjust light intensity at the input and detect it at the output, neglecting the phase of light, which could provide additional information. To overcome this limitation, we propose OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Additionally, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to efficiently process deep learning tasks with minimal energy consumption. Traditional optical neural networks only adjust light intensity at the input and detect it at the output, overlooking the phase of light, which could provide valuable information. To address this limitation, we introduce OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves enhanced performance. Furthermore, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results show significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to efficiently process deep learning tasks with minimal energy consumption. Traditional optical neural networks only adjust light intensity at the input and detect it at the output, neglecting the phase of light, which could provide valuable information. To overcome this limitation, we propose OplixNet, a framework that reduces the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Additionally, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to efficiently process deep learning tasks with minimal energy consumption. Traditional optical neural networks only adjust light intensity at the input and detect it at the output, overlooking the phase of light, which could offer valuable insights. To address this limitation, we introduce OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves enhanced performance. Furthermore, we incorporate mutual learning across various optical neural network architectures to preserve accuracy. Experimental results show substantial area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to efficiently process deep learning tasks with low energy consumption. Traditional optical neural networks only adjust light intensity at the input and detect it at the output, neglecting the phase of light, which could provide valuable insights. To address this limitation, we present OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Moreover, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to efficiently process deep learning tasks with low energy consumption. Traditional optical neural networks only adjust light intensity at the input and detect it at the output, overlooking the phase of light, which could offer valuable insights. To address this limitation, we introduce OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Furthermore, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results show significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to efficiently process deep learning tasks with low energy consumption. Traditional optical neural networks only adjust light intensity at the input and detect it at the output, neglecting the phase of light, which could provide valuable insights. To overcome this limitation, we propose OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Additionally, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to efficiently process deep learning tasks with low energy consumption. Traditional optical neural networks only adjust light intensity at the input and detect it at the output, overlooking the phase of light, which could offer valuable insights. To address this limitation, we introduce OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Furthermore, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to efficiently process deep learning tasks with minimal energy consumption. Traditional optical neural networks only adjust light intensity at the input and detect it at the output, overlooking the phase of light, which could provide valuable insights. To address this limitation, we introduce OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Additionally, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to efficiently process deep learning tasks with minimal energy consumption. Traditional optical neural networks only adjust light intensity at the input and detect it at the output, neglecting the phase of light, which could provide valuable insights. To overcome this limitation, we introduce OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Moreover, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results show significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to efficiently process deep learning tasks with minimal energy consumption. Traditional optical neural networks only adjust light intensity at the input and detect it at the output, overlooking the phase of light, which could provide valuable insights. To overcome this limitation, we present OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Furthermore, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to efficiently process deep learning tasks with minimal energy consumption. Traditional optical neural networks only adjust light intensity at the input and detect it at the output, neglecting the phase of light, which could provide valuable insights. To overcome this limitation, we introduce OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Moreover, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results show significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to efficiently process deep learning tasks with minimal energy consumption. Traditional optical neural networks only adjust light intensity at the input and detect it at the output, overlooking the phase of light, which could provide valuable insights. To address this limitation, we propose OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Furthermore, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to efficiently process deep learning tasks with minimal energy consumption. Traditional optical neural networks only adjust light intensity at the input and detect it at the output, neglecting the phase of light, which could provide valuable insights. To address this limitation, we propose OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Additionally, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to efficiently process deep learning tasks with minimal energy consumption. Traditional optical neural networks only adjust light intensity at the input and detect it at the output, overlooking the phase of light, which could provide valuable insights. To address this limitation, we introduce OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Furthermore, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to efficiently process deep learning tasks with low energy consumption. Traditional optical neural networks only adjust light intensity at the input and detect it at the output, neglecting the phase of light, which could provide valuable insights. To overcome this limitation, we propose OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Additionally, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to efficiently process deep learning tasks with low energy consumption. Traditional optical neural networks only adjust light intensity at the input and detect it at the output, overlooking the phase of light, which could offer valuable insights. To address this limitation, we introduce OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Furthermore, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results show significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to efficiently process deep learning tasks with minimal energy consumption. Traditional optical neural networks typically only adjust light intensity at the input and detect it at the output, neglecting the phase of light, which could provide valuable insights. To overcome this limitation, we propose OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves enhanced performance. Moreover, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results demonstrate substantial area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to efficiently process deep learning tasks with minimal energy consumption. Traditional optical neural networks typically only adjust light intensity at the input and detect it at the output, overlooking the phase of light, which could provide valuable insights. To address this limitation, we introduce OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves enhanced performance. Furthermore, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to efficiently process deep learning tasks with minimal energy consumption. Traditional optical neural networks typically only adjust light intensity at the input and detect it at the output, overlooking the phase of light, which could provide valuable insights. To address this limitation, we present OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves enhanced performance. Additionally, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results show significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to efficiently process deep learning tasks with minimal energy consumption. Traditional optical neural networks typically only adjust light intensity at the input and detect it at the output, neglecting the phase of light, which could provide valuable insights. To address this limitation, we introduce OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Moreover, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to efficiently process deep learning tasks with minimal energy consumption. Traditional optical neural networks typically only adjust light intensity at the input and detect it at the output, overlooking the phase of light, which could provide valuable insights. To address this limitation, we introduce OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Furthermore, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results show significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to efficiently process deep learning tasks with minimal energy consumption. Traditional optical neural networks typically only adjust light intensity at the input and detect it at the output, neglecting the phase of light, which could offer valuable insights. To address this limitation, we propose OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Additionally, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to efficiently process deep learning tasks with minimal energy consumption. Traditional optical neural networks typically only adjust light intensity at the input and detect it at the output, overlooking the phase of light, which could provide valuable insights. To address this limitation, we introduce OplixNet, a framework that minimizes the size of optical neural networks by separating input image data into intensity and phase components of light signals. By redesigning the input and output components of optical neural networks to utilize both intensity and phase information, our framework achieves improved performance. Furthermore, we incorporate mutual learning across various optical neural network architectures to maintain accuracy. Experimental results demonstrate significant area reduction while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ]
    ]
}