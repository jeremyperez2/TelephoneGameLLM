{
    "adjacency_matrix": [
        [
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0
        ]
    ],
    "prompt_init": [
        "You will receive a text. Your task is to rephrase this text without modifying its meaning. Just output your new text, nothing else. Here is the text:"
    ],
    "prompt_update": [
        "You will receive a text. Your task is to rephrase this text without modifying its meaning. Just output your new text, nothing else. Here is the text:"
    ],
    "personality_list": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "format_prompt": [
        ""
    ],
    "initial_story": "having the potential for high speed, high throughput, and low energy cost,optical neural networks (onns) have emerged as a promising candidate foraccelerating deep learning tasks. in conventional onns, light amplitudes aremodulated at the input and detected at the output. however, the light phasesare still ignored in conventional structures, although they can also carryinformation for computing. to address this issue, in this paper, we propose aframework called oplixnet to compress the areas of onns by modulating inputimage data into the amplitudes and phase parts of light signals. the input andoutput parts of the onns are redesigned to make full use of both amplitude andphase information. moreover, mutual learning across different onn structures isintroduced to maintain the accuracy. experimental results demonstrate that theproposed framework significantly reduces the areas of onns with the accuracywithin an acceptable range. for instance, 75.03% area is reduced with a 0.33%accuracy decrease on fully connected neural network (fcnn) and 74.88% area isreduced with a 2.38% accuracy decrease on resnet-32. ",
    "stories": [
        [
            "Optical neural networks (ONNs) have gained attention for their potential to accelerate deep learning tasks due to their high speed, high throughput, and low energy cost. In traditional ONNs, light amplitudes are modulated at the input and detected at the output, but the light phases are currently ignored, despite carrying additional information for computation. To address this limitation, we introduce OplixNet, a framework that compresses ONNs by separating input image data into amplitude and phase parts of light signals. The input and output parts of the ONNs are redesigned to utilize both amplitude and phase information. Additionally, mutual learning across different ONN structures is employed to maintain accuracy. Experimental results show that OplixNet significantly reduces ONN areas while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks (FCNN) and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their potential to accelerate deep learning tasks, thanks to their high speed, high throughput, and low energy consumption. In traditional ONNs, light amplitudes are modulated at the input and detected at the output, but the light phases are currently overlooked, despite containing additional information for computation. To address this limitation, we present OplixNet, a framework that compresses ONNs by separating input image data into amplitude and phase components of light signals. The input and output parts of the ONNs are redesigned to utilize both amplitude and phase information. Furthermore, mutual learning across different ONN architectures is employed to maintain accuracy. Experimental results demonstrate that OplixNet significantly reduces ONN areas while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained attention due to their potential to speed up deep learning tasks, thanks to their fast processing, high capacity, and low energy usage. In traditional ONNs, light intensity is adjusted at the input and measured at the output, but the light wave phases are currently overlooked, despite holding additional information for computation. To address this limitation, we introduce OplixNet, a framework that compresses ONNs by separating input image data into intensity and phase components of light signals. The input and output components of the ONNs are redesigned to utilize both intensity and phase information. Moreover, mutual learning across different ONN architectures is employed to maintain accuracy. Experimental results show that OplixNet significantly reduces ONN areas while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to accelerate deep learning tasks, thanks to their rapid processing, high storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding additional information for computation. To address this limitation, we introduce OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Furthermore, mutual learning across different optical neural network architectures is employed to maintain accuracy. Experimental results demonstrate that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to accelerate deep learning tasks, thanks to their rapid processing, high storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding additional information for computation. To address this limitation, we introduce OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Additionally, mutual learning across different optical neural network architectures is employed to maintain accuracy. Experimental results show that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to speed up deep learning tasks, thanks to their rapid processing, high storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding additional information for computation. To address this limitation, we introduce OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Furthermore, mutual learning across different optical neural network architectures is employed to maintain accuracy. Experimental results demonstrate that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to accelerate deep learning tasks, thanks to their rapid processing, high storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding additional computation-relevant information. To address this limitation, we introduce OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Additionally, mutual learning across different optical neural network architectures is employed to maintain accuracy. Experimental results show that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to speed up deep learning tasks, thanks to their rapid processing, large storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding important computation-relevant information. To address this limitation, we present OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Furthermore, mutual learning across different optical neural network architectures is employed to maintain accuracy. Experimental results demonstrate that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to accelerate deep learning tasks, thanks to their rapid processing, large storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding crucial computation-relevant information. To address this limitation, we introduce OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Additionally, mutual learning across different optical neural network architectures is employed to maintain accuracy. Experimental results show that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to speed up deep learning tasks, thanks to their fast processing, large storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding important computation-relevant information. To address this limitation, we present OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Furthermore, mutual learning across different optical neural network architectures is employed to maintain accuracy. Experimental results demonstrate that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to accelerate deep learning tasks, thanks to their rapid processing, substantial storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding crucial computation-relevant information. To address this limitation, we introduce OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Moreover, mutual learning across different optical neural network architectures is employed to maintain accuracy. Experimental results show that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to speed up deep learning tasks, thanks to their rapid processing, substantial storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding vital computation-relevant information. To address this limitation, we present OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Furthermore, mutual learning across different optical neural network architectures is employed to maintain accuracy. Experimental results demonstrate that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to accelerate deep learning tasks, thanks to their rapid processing, substantial storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding crucial computation-relevant information. To address this limitation, we introduce OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Moreover, mutual learning across different optical neural network architectures is employed to maintain accuracy. Experimental results show that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained attention due to their ability to speed up deep learning tasks, thanks to their rapid processing, large storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding crucial computation-relevant information. To address this limitation, we propose OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Additionally, mutual learning across different optical neural network architectures is employed to maintain accuracy. Experimental results demonstrate that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to accelerate deep learning tasks, thanks to their rapid processing, large storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding crucial computation-relevant information. To address this limitation, we propose OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Furthermore, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results show that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to speed up deep learning tasks, thanks to their rapid processing, large storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding crucial computation-relevant information. To address this limitation, we propose OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Additionally, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results demonstrate that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to accelerate deep learning tasks, thanks to their rapid processing, large storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding crucial computation-relevant information. To address this limitation, we propose OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Furthermore, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results show that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained widespread adoption due to their capacity to accelerate deep learning tasks, facilitated by their rapid processing, substantial storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding critical computation-relevant information. To address this limitation, we propose OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Additionally, we utilize mutual learning across different optical neural network architectures to maintain accuracy. Experimental results demonstrate that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have become increasingly popular due to their ability to speed up deep learning tasks, thanks to their rapid processing, large storage capacity, and low energy consumption. In traditional optical neural networks, the light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding crucial information for computation. To address this limitation, we introduce OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Furthermore, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results show that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to accelerate deep learning tasks, leveraging their rapid processing, vast storage capacity, and low energy consumption. In traditional optical neural networks, the light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding vital information for computation. To address this limitation, we present OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Moreover, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results demonstrate that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained attention due to their ability to accelerate deep learning tasks, leveraging their rapid processing, vast storage capacity, and low energy consumption. In traditional optical neural networks, the light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding crucial information for computation. To address this limitation, we introduce OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Furthermore, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results show that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to speed up deep learning tasks, leveraging their rapid processing, vast storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding critical information for computation. To address this limitation, we introduce OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Moreover, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results demonstrate that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to accelerate deep learning tasks, leveraging their rapid processing, vast storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding crucial information for computation. To address this limitation, we introduce OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Furthermore, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results show that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained attention due to their ability to speed up deep learning tasks, leveraging their fast processing, large storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding essential information for computation. To address this limitation, we present OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Additionally, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results demonstrate that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to accelerate deep learning tasks by leveraging their rapid processing, vast storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding crucial information for computation. To address this limitation, we introduce OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Furthermore, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results show that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to accelerate deep learning tasks by harnessing their rapid processing, vast storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding vital information for computation. To address this limitation, we introduce OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Additionally, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results demonstrate that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to accelerate deep learning tasks by leveraging their rapid processing, vast storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding crucial information for computation. To address this limitation, we propose OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Furthermore, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results show that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to speed up deep learning tasks by leveraging their rapid processing, vast storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding crucial information for computation. To address this limitation, we propose OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Additionally, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results demonstrate that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to accelerate deep learning tasks by leveraging their rapid processing, vast storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding crucial information for computation. To address this limitation, we introduce OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Furthermore, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results show that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to speed up deep learning tasks by leveraging rapid processing, vast storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding critical information for computation. To address this limitation, we propose OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Moreover, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results demonstrate that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to accelerate deep learning tasks by leveraging rapid processing, vast storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding crucial information for computation. To address this limitation, we introduce OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Additionally, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results show that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained widespread acceptance due to their ability to speed up deep learning tasks by harnessing rapid processing, vast storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite holding vital information for computation. To address this limitation, we introduce OplixNet, a framework that condenses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Moreover, we utilize mutual learning across different optical neural network architectures to maintain accuracy. Experimental results demonstrate that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to accelerate deep learning tasks by leveraging rapid processing, vast storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite being crucial for computation. To address this limitation, we introduce OplixNet, a framework that condenses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Furthermore, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results show that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to speed up deep learning tasks by leveraging rapid processing, vast storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite being critical for computation. To address this limitation, we introduce OplixNet, a framework that condenses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Moreover, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results demonstrate that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to accelerate deep learning tasks by harnessing rapid processing, vast storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently neglected, despite being crucial for computation. To address this limitation, we propose OplixNet, a framework that condenses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Additionally, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results show that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to speed up deep learning tasks by leveraging rapid processing, vast storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite being essential for computation. To address this limitation, we introduce OplixNet, a framework that condenses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Furthermore, we utilize mutual learning across different optical neural network architectures to maintain accuracy. Experimental results demonstrate that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to accelerate deep learning tasks by leveraging rapid processing, vast storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite being crucial for computation. To address this limitation, we present OplixNet, a framework that condenses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Additionally, we utilize mutual learning across different optical neural network architectures to maintain accuracy. Experimental results show that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, achieving reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained attention due to their ability to speed up deep learning tasks by harnessing rapid processing, vast storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite being essential for computation. To address this limitation, we introduce OplixNet, a framework that condenses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Furthermore, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results demonstrate that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, achieving reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to accelerate deep learning tasks by leveraging rapid processing, vast storage capacity, and low energy consumption. In traditional optical neural networks, light intensity is adjusted at the input and measured at the output, but the phases of light waves are currently overlooked, despite being crucial for computation. To address this limitation, we introduce OplixNet, a framework that condenses optical neural networks by separating input image data into intensity and phase components of light signals. The input and output components of the optical neural networks are redesigned to utilize both intensity and phase information. Moreover, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results show that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, achieving reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to accelerate deep learning tasks by leveraging rapid processing, vast storage capacity, and low energy consumption. However, traditional optical neural networks overlook the phases of light waves, despite their importance in computation. To address this limitation, we introduce OplixNet, a framework that condenses optical neural networks by separating input image data into intensity and phase components of light signals. The framework redesigns the input and output components of optical neural networks to utilize both intensity and phase information. Additionally, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results demonstrate that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, achieving reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to speed up deep learning tasks by leveraging rapid processing, vast storage capacity, and low energy consumption. However, traditional optical neural networks neglect the phases of light waves, despite their significance in computation. To overcome this limitation, we propose OplixNet, a framework that condenses optical neural networks by separating input image data into intensity and phase components of light signals. The framework redesigns the input and output components of optical neural networks to utilize both intensity and phase information. Furthermore, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results show that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, achieving reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to accelerate deep learning tasks by leveraging rapid processing, vast storage capacity, and low energy consumption. However, traditional optical neural networks overlook the importance of light wave phases, despite their significance in computation. To address this limitation, we introduce OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The framework redesigns the input and output components of optical neural networks to utilize both intensity and phase information. Additionally, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results demonstrate that OplixNet significantly reduces the area of optical neural networks while maintaining acceptable accuracy, achieving reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to accelerate deep learning tasks by harnessing rapid processing, vast storage capacity, and low energy consumption. However, traditional optical neural networks overlook the significance of light wave phases, despite their crucial role in computation. To address this limitation, we introduce OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The framework reconfigures the input and output components of optical neural networks to utilize both intensity and phase information. Furthermore, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results show that OplixNet achieves significant reductions in the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to speed up deep learning tasks by leveraging rapid processing, vast storage capacity, and low energy consumption. However, traditional optical neural networks overlook the importance of light wave phases, despite their critical role in computation. To address this limitation, we introduce OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The framework reconfigures the input and output components of optical neural networks to utilize both intensity and phase information. Moreover, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results demonstrate that OplixNet achieves substantial reductions in the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained traction due to their ability to accelerate deep learning tasks by harnessing rapid processing, vast storage capacity, and low energy consumption. However, traditional optical neural networks overlook the significance of light wave phases, despite their crucial role in computation. To address this limitation, we present OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The framework reconfigures the input and output components of optical neural networks to utilize both intensity and phase information. Furthermore, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results show that OplixNet achieves substantial reductions in the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their ability to speed up deep learning tasks by leveraging rapid processing, vast storage capacity, and low energy consumption. However, traditional optical neural networks overlook the importance of light wave phases, despite their critical role in computation. To address this limitation, we introduce OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The framework reconfigures the input and output components of optical neural networks to utilize both intensity and phase information. Additionally, we use mutual learning across different optical neural network architectures to maintain accuracy. Experimental results demonstrate that OplixNet achieves significant reductions in the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained attention due to their potential to accelerate deep learning tasks by leveraging rapid processing, vast storage capacity, and low energy consumption. However, traditional optical neural networks often neglect the significance of light wave phases, which play a crucial role in computation. To address this limitation, we propose OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The framework reconfigures the input and output components of optical neural networks to utilize both intensity and phase information. Furthermore, we employ mutual learning across different optical neural network architectures to maintain accuracy. Experimental results show that OplixNet achieves substantial reductions in the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have garnered attention due to their potential to accelerate deep learning tasks by leveraging rapid processing, vast storage capacity, and low energy consumption. However, traditional optical neural networks often overlook the importance of light wave phases, which play a critical role in computation. To address this limitation, we propose OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The framework reconfigures the input and output components of optical neural networks to utilize both intensity and phase information. Additionally, we utilize mutual learning across different optical neural network architectures to maintain accuracy. Experimental results demonstrate that OplixNet achieves significant reductions in the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their potential to speed up deep learning tasks by leveraging fast processing, vast storage capacity, and low energy consumption. However, traditional optical neural networks often neglect the significance of light wave phases, which are crucial for computation. To overcome this limitation, we introduce OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The framework reorganizes the input and output components of optical neural networks to utilize both intensity and phase information. Moreover, we employ mutual learning across different optical neural network architectures to preserve accuracy. Experimental results show that OplixNet achieves substantial reductions in the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nOptical neural networks have gained popularity due to their potential to accelerate deep learning tasks by leveraging rapid processing, vast storage capacity, and low energy consumption. However, traditional optical neural networks often overlook the importance of light wave phases, which are essential for computation. To address this limitation, we introduce OplixNet, a framework that compresses optical neural networks by separating input image data into intensity and phase components of light signals. The framework reconfigures the input and output components of optical neural networks to utilize both intensity and phase information. Furthermore, we employ mutual learning across different optical neural network architectures to preserve accuracy. Experimental results demonstrate that OplixNet achieves significant reductions in the area of optical neural networks while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, at accuracy decreases of 0.33% and 2.38%."
        ]
    ]
}