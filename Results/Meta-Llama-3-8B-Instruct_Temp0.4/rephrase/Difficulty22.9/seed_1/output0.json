{
    "adjacency_matrix": [
        [
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0
        ]
    ],
    "prompt_init": [
        "You will receive a text. Your task is to rephrase this text without modifying its meaning. Just output your new text, nothing else. Here is the text:"
    ],
    "prompt_update": [
        "You will receive a text. Your task is to rephrase this text without modifying its meaning. Just output your new text, nothing else. Here is the text:"
    ],
    "personality_list": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "format_prompt": [
        ""
    ],
    "initial_story": "musculoskeletal diseases and cognitive impairments in patients lead todifficulties in movement as well as negative effects on their psychologicalhealth. clinical gait analysis, a vital tool for early diagnosis and treatment,traditionally relies on expensive optical motion capture systems. recentadvances in computer vision and deep learning have opened the door to moreaccessible and cost-effective alternatives. this paper introduces a novelspatio-temporal transformer network to estimate critical gait parameters fromrgb videos captured by a single-view camera. empirical evaluations on a publicdataset of cerebral palsy patients indicate that the proposed frameworksurpasses current state-of-the-art approaches and show significant improvementsin predicting general gait parameters (including walking speed, gait deviationindex - gdi, and knee flexion angle at maximum extension), while utilizingfewer parameters and alleviating the need for manual feature extraction. ",
    "stories": [
        [
            "Patients with musculoskeletal diseases and cognitive impairments often struggle with movement difficulties and psychological health issues. Traditional clinical gait analysis methods, which rely on expensive optical motion capture systems, can be limiting. However, recent advancements in computer vision and deep learning have made it possible to develop more accessible and cost-effective alternatives. This paper presents a novel spatio-temporal transformer network that uses a single-view camera to estimate key gait parameters from RGB videos. Experimental results on a public dataset of cerebral palsy patients demonstrate that the proposed framework outperforms current state-of-the-art approaches, accurately predicting gait parameters such as walking speed, gait deviation index, and knee flexion angle, while requiring fewer parameters and eliminating the need for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal diseases and cognitive impairments frequently encounter mobility challenges and mental health concerns. Conventional gait analysis methods, which rely on expensive optical motion capture technology, can be restrictive. Nevertheless, recent breakthroughs in computer vision and deep learning have enabled the development of more affordable and efficient alternatives. This paper introduces a novel spatio-temporal transformer network that utilizes a single-view camera to estimate essential gait metrics from RGB video footage. Experimental findings on a publicly available dataset of cerebral palsy patients show that the proposed framework surpasses existing state-of-the-art approaches, accurately predicting gait parameters such as walking speed, gait deviation index, and knee flexion angle, while requiring fewer parameters and eliminating the need for manual feature extraction."
        ],
        [
            "People with musculoskeletal diseases and cognitive impairments often face difficulties with mobility and mental health. Traditional methods for analyzing gait, which rely on costly optical motion capture technology, can be limiting. However, recent advancements in computer vision and deep learning have led to the creation of more affordable and efficient alternatives. This study presents a new spatio-temporal transformer network that uses a single camera to estimate key gait metrics from video footage. Experimental results on a publicly available dataset of cerebral palsy patients demonstrate that the proposed approach outperforms existing methods, accurately predicting gait parameters such as walking speed, gait deviation index, and knee flexion angle, while requiring fewer parameters and eliminating the need for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal diseases and cognitive impairments frequently encounter challenges with mobility and mental well-being. Conventional gait analysis methods, which rely on expensive optical motion capture technology, can be restrictive. Nevertheless, recent breakthroughs in computer vision and deep learning have led to the development of more cost-effective and efficient alternatives. This study introduces a novel spatio-temporal transformer network that utilizes a single camera to estimate crucial gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients show that the proposed approach surpasses existing methods, accurately predicting gait parameters such as walking speed, gait deviation index, and knee flexion angle, while requiring fewer parameters and eliminating the need for manual feature extraction."
        ],
        [
            "People with musculoskeletal diseases and cognitive impairments often struggle with mobility and mental health. Traditional methods of analyzing gait, which rely on expensive equipment, can be limiting. However, recent advancements in computer vision and deep learning have led to the creation of more affordable and efficient alternatives. This study presents a new spatio-temporal transformer network that uses a single camera to estimate important gait metrics from video recordings. Experimental results on a publicly available dataset of patients with cerebral palsy show that this approach outperforms existing methods, accurately predicting gait metrics such as walking speed, gait deviation index, and knee flexion angle, while requiring fewer parameters and eliminating the need for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal diseases and cognitive impairments frequently face challenges with mobility and mental well-being. Conventional methods for analyzing gait, which rely on costly equipment, can be restrictive. Nevertheless, recent breakthroughs in computer vision and deep learning have led to the development of more accessible and efficient alternatives. This study introduces a novel spatio-temporal transformer network that utilizes a single camera to estimate crucial gait metrics from video recordings. Experimental findings on a publicly available dataset of patients with cerebral palsy demonstrate that this approach surpasses existing methods, accurately predicting gait metrics such as walking speed, gait deviation index, and knee flexion angle, while requiring fewer parameters and eliminating the need for manual feature extraction."
        ],
        [
            "People with musculoskeletal diseases and cognitive impairments often struggle with mobility and mental health. Traditional methods for analyzing gait, which rely on expensive equipment, can be limiting. However, recent advancements in computer vision and deep learning have led to the creation of more accessible and efficient alternatives. This study presents a new spatio-temporal transformer network that uses a single camera to estimate essential gait metrics from video recordings. Experimental results on a publicly available dataset of patients with cerebral palsy show that this approach outperforms existing methods, accurately predicting gait metrics such as walking speed, gait deviation index, and knee flexion angle, while requiring fewer parameters and eliminating the need for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal diseases and cognitive impairments frequently face challenges with mobility and mental well-being. Conventional methods for analyzing gait, which rely on costly equipment, can be restrictive. Nevertheless, recent breakthroughs in computer vision and deep learning have led to the development of more accessible and efficient alternatives. This research introduces a novel spatio-temporal transformer network that utilizes a single camera to estimate crucial gait metrics from video recordings. Experimental findings on a publicly accessible dataset of patients with cerebral palsy demonstrate that this approach surpasses existing methods, accurately predicting gait metrics such as walking speed, gait deviation index, and knee flexion angle, while necessitating fewer parameters and eliminating the need for manual feature extraction."
        ],
        [
            "People with musculoskeletal diseases and cognitive impairments often struggle with mobility and mental health. Traditional methods for analyzing gait, which require expensive equipment, can be limiting. However, advancements in computer vision and deep learning have led to the creation of more accessible and efficient solutions. This study presents a new spatio-temporal transformer network that uses a single camera to estimate key gait metrics from video recordings. Experimental results on a publicly available dataset of patients with cerebral palsy show that this approach outperforms existing methods, accurately predicting gait metrics such as walking speed, gait deviation index, and knee flexion angle, while requiring fewer parameters and eliminating the need for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal diseases and cognitive impairments frequently face challenges with mobility and mental well-being. Conventional methods for assessing gait, which rely on costly equipment, can be restrictive. Nevertheless, breakthroughs in computer vision and deep learning have enabled the development of more accessible and efficient solutions. This research introduces a novel spatio-temporal transformer network that utilizes a single camera to estimate crucial gait metrics from video recordings. Experimental findings on a publicly available dataset of patients with cerebral palsy demonstrate that this approach surpasses existing methods, accurately predicting gait metrics such as walking speed, gait deviation index, and knee flexion angle, while requiring fewer parameters and eliminating the need for manual feature extraction."
        ],
        [
            "People with musculoskeletal diseases and cognitive impairments often struggle with mobility and mental health. Traditional methods for analyzing gait, which rely on expensive equipment, can be limiting. However, advancements in computer vision and deep learning have led to the creation of more accessible and efficient solutions. This study presents a new spatio-temporal transformer network that uses a single camera to estimate essential gait metrics from video recordings. Experimental results on a publicly available dataset of patients with cerebral palsy show that this approach outperforms existing methods, accurately predicting gait metrics such as walking speed, gait deviation index, and knee flexion angle, while requiring fewer parameters and eliminating the need for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal diseases and cognitive impairments frequently face challenges with mobility and mental well-being. Conventional methods for analyzing gait, which rely on costly equipment, can be restrictive. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible and efficient solutions. This research introduces a novel spatio-temporal transformer network that utilizes a single camera to estimate crucial gait metrics from video recordings. Experimental findings on a publicly accessible dataset of patients with cerebral palsy demonstrate that this approach surpasses existing methods, accurately predicting gait metrics such as walking speed, gait deviation index, and knee flexion angle, while requiring fewer parameters and eliminating the need for manual feature extraction."
        ],
        [
            "People with musculoskeletal conditions and cognitive impairments often struggle with mobility and mental health. Traditional methods for analyzing gait, which rely on expensive equipment, can be limiting. However, advances in computer vision and deep learning have led to the creation of more accessible and efficient solutions. This study presents a new spatio-temporal transformer network that uses a single camera to estimate essential gait metrics from video recordings. Experimental results on a publicly available dataset of patients with cerebral palsy show that this approach outperforms existing methods, accurately predicting gait metrics such as walking speed, gait deviation index, and knee flexion angle, while requiring fewer parameters and eliminating the need for manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal conditions and cognitive impairments frequently face challenges with mobility and mental well-being. Conventional methods for analyzing gait, which rely on costly equipment, can be restrictive. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible and efficient solutions. This study introduces a novel spatio-temporal transformer network that utilizes a single camera to estimate crucial gait metrics from video recordings. Experimental findings on a publicly available dataset of patients with cerebral palsy demonstrate that this approach surpasses existing methods, accurately predicting gait metrics such as walking speed, gait deviation index, and knee flexion angle, while requiring fewer parameters and eliminating the need for manual feature extraction."
        ],
        [
            "People with musculoskeletal conditions and cognitive impairments often struggle with mobility and mental health. Traditional methods for analyzing walking patterns, which rely on expensive equipment, can be limiting. However, advances in computer vision and artificial intelligence have led to the creation of more accessible and efficient solutions. This study presents a new type of network that uses a single camera to calculate important walking metrics from video recordings. Experimental results on a publicly available dataset of patients with cerebral palsy show that this approach outperforms existing methods, accurately predicting metrics such as walking speed, stride deviation, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "Individuals with musculoskeletal conditions and cognitive impairments frequently face challenges with mobility and mental well-being. Conventional methods for analyzing gait patterns, which rely on costly equipment, can be restrictive. Nevertheless, breakthroughs in computer vision and artificial intelligence have led to the development of more inclusive and efficient solutions. This research introduces a novel network that utilizes a single camera to extract crucial walking metrics from video recordings. Experimental findings on a publicly accessible dataset of patients with cerebral palsy demonstrate that this approach surpasses existing methods, accurately forecasting metrics such as walking velocity, stride deviation, and knee flexion angle, while necessitating fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "People with musculoskeletal conditions and cognitive impairments often struggle with mobility and mental health. Traditional methods for analyzing walking patterns require expensive equipment, which can be limiting. However, advancements in computer vision and AI have led to the creation of more accessible and efficient solutions. This study presents a new network that uses a single camera to extract important walking metrics from video recordings. Experimental results on a publicly available dataset of patients with cerebral palsy show that this approach outperforms existing methods, accurately predicting metrics such as walking speed, stride deviation, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "Individuals with musculoskeletal conditions and cognitive impairments frequently face challenges with mobility and mental well-being. Conventional methods for analyzing gait patterns rely on costly equipment, which can be restrictive. Nevertheless, breakthroughs in computer vision and AI have led to the development of more accessible and effective solutions. This research introduces a novel network that utilizes a single camera to extract vital walking metrics from video recordings. Experimental findings on a publicly accessible dataset of patients with cerebral palsy demonstrate that this approach surpasses existing methods, accurately predicting metrics such as walking speed, stride deviation, and knee bend angle, while necessitating fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "People with musculoskeletal conditions and cognitive impairments often struggle with mobility and mental health. Traditional methods for analyzing gait patterns require expensive equipment, which can be limiting. However, advancements in computer vision and AI have led to the creation of more accessible and efficient solutions. This study presents a new network that uses a single camera to extract essential walking metrics from video recordings. Experimental results on a publicly available dataset of patients with cerebral palsy show that this approach outperforms existing methods, accurately predicting metrics such as walking speed, stride deviation, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "Individuals with musculoskeletal conditions and cognitive impairments frequently face challenges with mobility and mental well-being. Conventional methods for analyzing gait patterns rely on costly equipment, which can be restrictive. Nevertheless, breakthroughs in computer vision and AI have enabled the development of more accessible and efficient solutions. This research introduces a novel network that utilizes a single camera to extract crucial walking metrics from video recordings. Experimental findings on a publicly available dataset of patients with cerebral palsy demonstrate that this approach surpasses existing methods, accurately predicting metrics such as walking speed, stride deviation, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "People with musculoskeletal conditions and cognitive impairments often struggle with mobility and mental health. Traditional methods for analyzing gait patterns rely on expensive equipment, which can be limiting. However, advances in computer vision and AI have led to the creation of more accessible and efficient solutions. This study presents a new network that uses a single camera to extract key walking metrics from video recordings. Experimental results on a publicly available dataset of patients with cerebral palsy show that this approach outperforms existing methods, accurately predicting metrics such as walking speed, stride deviation, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "Individuals with musculoskeletal conditions and cognitive impairments frequently face challenges with mobility and mental well-being. Conventional techniques for analyzing gait patterns rely on costly equipment, which can be restrictive. Nevertheless, breakthroughs in computer vision and AI have led to the development of more accessible and efficient solutions. This research introduces a novel network that utilizes a single camera to extract crucial walking metrics from video recordings. Experimental findings on a publicly available dataset of patients with cerebral palsy demonstrate that this approach surpasses existing methods, accurately forecasting metrics such as walking speed, stride deviation, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "People with musculoskeletal conditions and cognitive impairments often struggle with mobility and mental health. Traditional methods for analyzing gait patterns rely on expensive equipment, which can be limiting. However, advancements in computer vision and AI have led to the creation of more accessible and efficient solutions. This study presents a new network that uses a single camera to extract essential walking metrics from video recordings. Experimental results on a publicly available dataset of patients with cerebral palsy show that this approach outperforms existing methods, accurately predicting metrics such as walking speed, stride deviation, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "Individuals with musculoskeletal conditions and cognitive impairments frequently face challenges with mobility and mental well-being. Conventional methods for analyzing gait patterns rely on costly equipment, which can be restrictive. Nevertheless, breakthroughs in computer vision and AI have led to the development of more accessible and efficient solutions. This research introduces a novel network that utilizes a single camera to extract crucial walking metrics from video recordings. Experimental findings on a publicly available dataset of patients with cerebral palsy demonstrate that this approach surpasses existing methods, accurately predicting metrics such as walking speed, stride deviation, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "People with musculoskeletal conditions and cognitive impairments often struggle with mobility and mental health. Traditional methods for analyzing gait patterns rely on expensive equipment, which can be limiting. However, advancements in computer vision and AI have led to the creation of more accessible and efficient solutions. This study presents a new network that uses a single camera to extract key walking metrics from video recordings. Experimental results on a publicly available dataset of patients with cerebral palsy show that this approach outperforms existing methods, accurately predicting metrics such as walking speed, stride deviation, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "Individuals with musculoskeletal conditions and cognitive impairments frequently face challenges with mobility and mental well-being. Conventional methods for analyzing gait patterns rely on costly equipment, which can be restrictive. Nevertheless, breakthroughs in computer vision and AI have led to the development of more accessible and efficient solutions. This research introduces a novel network that utilizes a single camera to extract crucial walking metrics from video recordings. Experimental findings on a publicly available dataset of patients with cerebral palsy demonstrate that this approach surpasses existing methods, accurately forecasting metrics such as walking speed, stride deviation, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "People with musculoskeletal conditions and cognitive impairments often struggle with mobility and mental health. Traditional methods for analyzing gait patterns rely on expensive equipment, which can be limiting. However, advancements in computer vision and AI have led to the creation of more accessible and efficient solutions. This study presents a new network that uses a single camera to extract essential walking metrics from video recordings. Experimental results on a publicly available dataset of patients with cerebral palsy show that this approach outperforms existing methods, accurately predicting metrics such as walking speed, stride deviation, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "Individuals with musculoskeletal conditions and cognitive impairments frequently face challenges with mobility and mental well-being. Conventional methods for analyzing gait patterns rely on costly equipment, which can be restrictive. Nevertheless, breakthroughs in computer vision and AI have led to the development of more accessible and efficient solutions. This research introduces a novel network that utilizes a single camera to extract crucial walking metrics from video recordings. Experimental findings on a publicly available dataset of patients with cerebral palsy demonstrate that this approach surpasses existing methods, accurately predicting metrics such as walking speed, stride deviation, and knee bend angle, while necessitating fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "People with musculoskeletal conditions and cognitive impairments often struggle with mobility and mental health. Traditional methods for analyzing gait patterns require expensive equipment, which can be limiting. However, advancements in computer vision and AI have led to the creation of more accessible and efficient solutions. This study presents a new network that uses a single camera to extract key walking metrics from video recordings. Experimental results on a publicly available dataset of patients with cerebral palsy show that this approach outperforms existing methods, accurately predicting metrics like walking speed, stride deviation, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "Individuals with musculoskeletal conditions and cognitive impairments frequently face challenges with mobility and mental well-being. Conventional methods for analyzing gait patterns rely on costly equipment, which can be restrictive. Fortunately, breakthroughs in computer vision and AI have enabled the development of more accessible and efficient solutions. This study introduces a novel network that utilizes a single camera to extract crucial walking metrics from video recordings. Experimental findings on a publicly available dataset of patients with cerebral palsy demonstrate that this approach surpasses existing methods, accurately forecasting metrics such as walking speed, stride deviation, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "People with musculoskeletal conditions and cognitive impairments often struggle with mobility and mental health. Traditional methods for analyzing walking patterns require expensive equipment, which can be limiting. However, advancements in computer vision and AI have led to the creation of more accessible and efficient solutions. This research presents a new network that uses a single camera to extract essential walking metrics from video recordings. Experimental results on a publicly available dataset of patients with cerebral palsy show that this approach outperforms existing methods, accurately predicting metrics such as walking speed, stride deviation, and knee bend angle, while needing fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "Individuals with musculoskeletal conditions and cognitive impairments frequently face challenges with mobility and mental well-being. Conventional methods for analyzing gait patterns rely on costly equipment, which can be restrictive. Nevertheless, breakthroughs in computer vision and AI have led to the development of more accessible and efficient solutions. This study introduces a novel network that utilizes a single camera to extract vital walking metrics from video recordings. Experimental findings on a publicly accessible dataset of patients with cerebral palsy demonstrate that this approach surpasses existing methods, accurately forecasting metrics such as walking speed, stride deviation, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "People with musculoskeletal conditions and cognitive impairments often struggle with mobility and mental health. Traditional methods for analyzing walking patterns rely on expensive equipment, which can be limiting. However, advancements in computer vision and AI have led to the creation of more accessible and efficient solutions. This research presents a new network that uses a single camera to extract essential walking metrics from video recordings. Experimental results on a publicly available dataset of patients with cerebral palsy show that this approach outperforms existing methods, accurately predicting metrics such as walking speed, stride deviation, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "Individuals with musculoskeletal conditions and cognitive impairments frequently face challenges with mobility and mental well-being. Conventional methods for analyzing gait patterns rely on costly equipment, which can be restrictive. Nevertheless, breakthroughs in computer vision and AI have given rise to more accessible and efficient solutions. This study introduces a novel network that utilizes a single camera to extract vital walking metrics from video recordings. Experimental findings on a publicly accessible dataset of patients with cerebral palsy demonstrate that this approach surpasses existing methods, accurately forecasting metrics such as walking velocity, stride variability, and knee flexion angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "People with musculoskeletal conditions and cognitive impairments often struggle with mobility and mental health. Traditional methods for analyzing gait patterns rely on expensive equipment, which can be limiting. However, advancements in computer vision and AI have led to more affordable and efficient solutions. This research presents a new network that uses a single camera to extract important walking metrics from video recordings. Experimental results on a publicly available dataset of patients with cerebral palsy show that this approach outperforms existing methods, accurately predicting metrics such as walking speed, stride consistency, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "Individuals with musculoskeletal conditions and cognitive impairments frequently face challenges with mobility and mental well-being. Conventional methods for analyzing gait patterns rely on costly equipment, which can be restrictive. Nevertheless, breakthroughs in computer vision and AI have led to more accessible and effective solutions. This study introduces a novel network that utilizes a single camera to extract crucial walking metrics from video recordings. Experimental findings on a publicly accessible dataset of patients with cerebral palsy demonstrate that this approach surpasses existing methods, accurately forecasting metrics such as walking speed, stride consistency, and knee bend angle, while necessitating fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "People with musculoskeletal conditions and cognitive impairments often struggle with mobility and mental health. Traditional methods for analyzing walking patterns require expensive equipment, which can be limiting. However, advancements in computer vision and AI have led to more affordable and efficient solutions. This research presents a new network that uses a single camera to extract key walking metrics from video recordings. Experimental results on a publicly available dataset of patients with cerebral palsy show that this approach outperforms existing methods, accurately predicting metrics such as walking speed, stride consistency, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "Individuals with musculoskeletal conditions and cognitive impairments frequently face challenges with mobility and mental well-being. Conventional methods for analyzing gait patterns rely on costly equipment, which can be restrictive. Nevertheless, breakthroughs in computer vision and AI have led to more accessible and effective solutions. This study introduces a novel network that utilizes a single camera to extract crucial walking metrics from video recordings. Experimental findings on a publicly available dataset of patients with cerebral palsy demonstrate that this approach surpasses existing methods, accurately forecasting metrics such as walking velocity, stride uniformity, and knee flexion angle, while necessitating fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "People with musculoskeletal conditions and cognitive impairments often struggle with mobility and mental health. Traditional methods for analyzing gait patterns require expensive equipment, which can be limiting. However, advancements in computer vision and AI have led to more accessible and efficient solutions. This research presents a new network that uses a single camera to extract essential walking metrics from video recordings. Experimental results on a publicly available dataset of patients with cerebral palsy show that this approach outperforms existing methods, accurately predicting metrics like walking speed, stride consistency, and knee bend angle, while needing fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "Individuals with musculoskeletal conditions and cognitive impairments frequently face challenges with mobility and mental well-being. Conventional methods for analyzing gait patterns rely on costly equipment, which can be restrictive. Nevertheless, breakthroughs in computer vision and AI have led to more accessible and efficient solutions. This study introduces a novel network that utilizes a single camera to extract crucial walking metrics from video recordings. Experimental findings on a publicly available dataset of patients with cerebral palsy demonstrate that this approach surpasses existing methods, accurately predicting metrics such as walking speed, stride consistency, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "People with musculoskeletal conditions and cognitive impairments often struggle with mobility and mental health. Traditional methods for analyzing walking patterns rely on expensive equipment, which can be limiting. However, advancements in computer vision and AI have led to more affordable and efficient solutions. This study presents a new network that uses a single camera to extract key walking metrics from video recordings. Experimental results on a publicly available dataset of patients with cerebral palsy show that this approach outperforms existing methods, accurately predicting metrics such as walking speed, stride consistency, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "Individuals with musculoskeletal conditions and cognitive impairments frequently face challenges with mobility and mental well-being. Conventional methods for analyzing gait patterns rely on costly equipment, which can be restrictive. Nevertheless, breakthroughs in computer vision and AI have led to more accessible and efficient alternatives. This research introduces a novel network that utilizes a single camera to extract crucial walking metrics from video recordings. Experimental findings on a publicly accessible dataset of patients with cerebral palsy demonstrate that this approach surpasses existing methods, accurately predicting metrics such as walking velocity, stride uniformity, and knee flexion angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "People with musculoskeletal conditions and cognitive impairments often struggle with mobility and mental health. Traditional methods for analyzing gait patterns rely on expensive equipment, which can be limiting. However, advancements in computer vision and AI have led to more affordable and efficient solutions. This study presents a new network that uses a single camera to extract essential walking metrics from video recordings. Experimental results on a publicly available dataset of patients with cerebral palsy show that this approach outperforms existing methods, accurately predicting metrics such as walking speed, stride consistency, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "Individuals with musculoskeletal conditions and cognitive impairments frequently face challenges with mobility and mental well-being. Conventional methods for analyzing gait patterns rely on costly equipment, which can be restrictive. Nevertheless, breakthroughs in computer vision and AI have led to more accessible and efficient solutions. This research introduces a novel network that utilizes a single camera to extract crucial walking metrics from video recordings. Experimental findings on a publicly available dataset of patients with cerebral palsy demonstrate that this approach surpasses existing methods, accurately forecasting metrics such as walking speed, stride consistency, and knee bend angle, while necessitating fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "People with musculoskeletal conditions and cognitive impairments often struggle with mobility and mental health. Traditional methods for analyzing walking patterns require expensive equipment, which can be limiting. However, advancements in computer vision and AI have led to more affordable and efficient solutions. This study presents a new network that uses a single camera to extract essential walking metrics from video recordings. Experimental results on a publicly available dataset of patients with cerebral palsy show that this approach outperforms existing methods, accurately predicting metrics such as walking speed, stride consistency, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "Individuals with musculoskeletal conditions and cognitive impairments frequently face challenges with mobility and mental well-being. Conventional methods for analyzing gait patterns rely on costly equipment, which can be restrictive. Fortunately, breakthroughs in computer vision and AI have led to more accessible and efficient alternatives. This research introduces a novel network that employs a single camera to extract crucial walking metrics from video recordings. Experimental findings on a publicly available dataset of patients with cerebral palsy demonstrate that this approach surpasses existing methods, accurately predicting metrics such as walking pace, stride uniformity, and knee flexion angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "People with musculoskeletal conditions and cognitive impairments often struggle with mobility and mental health. Traditional methods for analyzing gait patterns rely on expensive equipment, which can be limiting. However, advancements in computer vision and AI have led to more affordable and efficient solutions. This study presents a new network that uses a single camera to extract essential walking metrics from video recordings. Experimental results on a publicly available dataset of patients with cerebral palsy show that this approach outperforms existing methods, accurately predicting metrics such as walking speed, stride consistency, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "Individuals with musculoskeletal conditions and cognitive impairments frequently face challenges with mobility and mental well-being. Conventional methods for analyzing gait patterns rely on costly equipment, which can be restrictive. Nevertheless, breakthroughs in computer vision and AI have led to more accessible and effective solutions. This research introduces a novel network that utilizes a single camera to extract crucial walking metrics from video recordings. Experimental findings on a publicly accessible dataset of patients with cerebral palsy demonstrate that this approach surpasses existing methods, accurately predicting metrics such as walking speed, stride consistency, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "People with musculoskeletal conditions and cognitive impairments often struggle with mobility and mental health. Traditional methods for analyzing gait patterns rely on expensive equipment, which can be limiting. However, advancements in computer vision and AI have led to more affordable and effective solutions. This study presents a new network that uses a single camera to extract essential walking metrics from video recordings. Experimental results on a publicly available dataset of patients with cerebral palsy show that this approach outperforms existing methods, accurately predicting metrics such as walking speed, stride consistency, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ],
        [
            "Individuals with musculoskeletal conditions and cognitive impairments frequently face challenges with mobility and mental well-being. Conventional methods for analyzing gait patterns rely on costly equipment, which can be restrictive. Nevertheless, breakthroughs in computer vision and AI have led to more accessible and efficient solutions. This research introduces a novel network that utilizes a single camera to extract crucial walking metrics from video recordings. Experimental findings on a publicly available dataset of patients with cerebral palsy demonstrate that this approach surpasses existing methods, accurately predicting metrics such as walking speed, stride consistency, and knee bend angle, while requiring fewer parameters and eliminating the need for manual data processing."
        ]
    ]
}