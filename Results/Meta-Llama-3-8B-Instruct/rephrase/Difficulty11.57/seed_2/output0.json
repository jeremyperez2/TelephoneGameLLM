{
    "adjacency_matrix": [
        [
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0
        ]
    ],
    "prompt_init": [
        "You will receive a text. Your task is to rephrase this text without modifying its meaning. Just output your new text, nothing else. Here is the text:"
    ],
    "prompt_update": [
        "You will receive a text. Your task is to rephrase this text without modifying its meaning. Just output your new text, nothing else. Here is the text:"
    ],
    "personality_list": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "format_prompt": [
        ""
    ],
    "initial_story": "having the potential for high speed, high throughput, and low energy cost,optical neural networks (onns) have emerged as a promising candidate foraccelerating deep learning tasks. in conventional onns, light amplitudes aremodulated at the input and detected at the output. however, the light phasesare still ignored in conventional structures, although they can also carryinformation for computing. to address this issue, in this paper, we propose aframework called oplixnet to compress the areas of onns by modulating inputimage data into the amplitudes and phase parts of light signals. the input andoutput parts of the onns are redesigned to make full use of both amplitude andphase information. moreover, mutual learning across different onn structures isintroduced to maintain the accuracy. experimental results demonstrate that theproposed framework significantly reduces the areas of onns with the accuracywithin an acceptable range. for instance, 75.03% area is reduced with a 0.33%accuracy decrease on fully connected neural network (fcnn) and 74.88% area isreduced with a 2.38% accuracy decrease on resnet-32. ",
    "stories": [
        [
            "Optical neural networks (ONNs), capable of high speed, high throughput, and low energy consumption, have shown promise in accelerating deep learning tasks. In traditional ONNs, light amplitudes are modulated at the input and detected at the output, but phases are ignored, despite carrying information for computation. To address this, we propose Oplixnet, a framework that compresses ONNs by modulating input image data into amplitude and phase parts of light signals. The input and output parts of ONNs are redesigned to utilize both amplitude and phase information. Additionally, mutual learning across different ONN structures is introduced to maintain accuracy. Experimental results show that our framework significantly reduces ONN area while maintaining acceptable accuracy, with reductions of 75.03% with a 0.33% accuracy decrease in fully connected neural networks (FCNNs) and 74.88% with a 2.38% accuracy decrease in ResNet-32."
        ],
        [
            "We present Oplixnet, a novel framework that optimizes optical neural networks (ONNs) by leveraging both amplitude and phase information in light signals. Our approach compresses ONNs by separating input image data into amplitude and phase components, and redesigns the input and output layers to utilize this dual information. To ensure accuracy, we incorporate mutual learning across different ONN structures. Experimental results demonstrate that Oplixnet reduces ONN area by 75.03% and 74.88%, respectively, in fully connected neural networks (FCNNs) and ResNet-32, with minimal accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "We introduce Oplixnet, a groundbreaking framework that improves optical neural networks by harnessing both amplitude and phase data in light signals. Our method condenses these networks by splitting input image data into amplitude and phase components, then reconfigures the input and output layers to utilize this dual information. To guarantee precision, we implement mutual learning across diverse ONN architectures. Experimental findings show that Oplixnet slashes ONN area by 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, while precision drops by only 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nWe are proud to introduce Oplixnet, a pioneering framework that revolutionizes optical neural networks by leveraging both amplitude and phase data in light signals. Our innovative approach reduces the size of these networks by separating input image data into amplitude and phase components, and redesigning the input and output layers to utilize this dual information. To ensure accuracy, we employ mutual learning across a range of ONN architectures. Our experimental results demonstrate that Oplixnet achieves a significant reduction in ONN area, with a 75.03% and 74.88% decrease in fully connected neural networks and ResNet-32, respectively, while precision drops only slightly, by 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nIntroducing Oplixnet, a groundbreaking framework that transforms optical neural networks by combining amplitude and phase data in light signals. By splitting input image data into amplitude and phase components, and reconfiguring input and output layers to utilize this dual information, our innovative approach minimizes the size of these networks. To guarantee accuracy, we utilize mutual learning across various ONN architectures. Experimental results show that Oplixnet achieves substantial reductions in ONN area, with decreases of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, while precision drops only slightly, by 0.33% and 2.38%."
        ],
        [
            "Here is a rephrased text that maintains the original meaning:\n\nMeet Oplixnet, a revolutionary framework that revolutionizes optical neural networks by combining amplitude and phase data from light signals. By breaking down input image data into amplitude and phase components and reorganizing input and output layers to leverage this dual information, our innovative approach significantly reduces the size of these networks. To ensure accuracy, we employ mutual learning across various ONN architectures. Experimental results demonstrate substantial decreases in ONN area, with reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, while precision only slightly drops by 0.33% and 2.38%."
        ],
        [
            "Here is a rephrased text that maintains the original meaning:\n\nIntroducing Oplixnet, a groundbreaking framework that transforms optical neural networks by merging amplitude and phase data from light signals. By decomposing input image data into amplitude and phase components and rearranging input and output layers to capitalize on this dual information, our pioneering approach dramatically minimizes the size of these networks. To guarantee precision, we implement mutual learning across various ONN architectures. Experimental findings show substantial reductions in ONN area, with decreases of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by only a slight decline in precision of 0.33% and 2.38%."
        ],
        [
            "Here is a groundbreaking framework, Oplixnet, that revolutionizes optical neural networks by combining amplitude and phase data from light signals. By breaking down input image data into amplitude and phase components and rearranging input and output layers to leverage this dual information, our innovative approach significantly reduces the size of these networks. To ensure accuracy, we apply mutual learning across various ONN architectures. Experimental results demonstrate substantial reductions in ONN area, with decreases of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor decline in precision of 0.33% and 2.38%."
        ],
        [
            "Here is a pioneering framework, Oplixnet, that transforms optical neural networks by integrating amplitude and phase data from light signals. By dissecting input image data into amplitude and phase components and rearranging input and output layers to harness this dual information, our novel approach substantially minimizes the size of these networks. To maintain accuracy, we implement mutual learning across various ONN architectures. Experimental outcomes reveal substantial reductions in ONN area, with decreases of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor decline in precision of 0.33% and 2.38%."
        ],
        [
            "Here is a groundbreaking framework, Oplixnet, that revolutionizes optical neural networks by combining amplitude and phase data from light signals. By dividing input image data into amplitude and phase components and rearranging input and output layers to utilize this dual information, our innovative approach significantly reduces the size of these networks. To ensure accuracy, we implement mutual learning across various ONN architectures. Experimental results show substantial reductions in ONN area, with decreases of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor decline in precision of 0.33% and 2.38%."
        ],
        [
            "Here is a pioneering framework, Oplixnet, that disrupts traditional optical neural networks by integrating amplitude and phase data from light signals. By splitting input image data into amplitude and phase parts and restructuring input and output layers to harness this dual information, our innovative approach leads to a significant downsizing of these networks. To guarantee reliability, we employ mutual learning across various ONN architectures. Experimental outcomes demonstrate considerable reductions in ONN area, with decreases of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor decline in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here is a groundbreaking framework, Oplixnet, that revolutionizes traditional optical neural networks by combining amplitude and phase data from light signals. By separating input image data into amplitude and phase components and reorganizing input and output layers to utilize this dual information, our innovative approach leads to a substantial reduction in the size of these networks. To ensure reliability, we use mutual learning across various ONN architectures. Experimental results show notable decreases in ONN area, with reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor decrease in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here is a pioneering framework, Oplixnet, that transforms traditional optical neural networks by integrating amplitude and phase data from light signals. By splitting input image data into amplitude and phase components and reconfiguring input and output layers to leverage this dual information, our innovative approach leads to a significant reduction in network size. To ensure dependability, we employ mutual learning across various ONN architectures. Experimental findings demonstrate considerable decreases in ONN area, with reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor decrease in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here is a groundbreaking framework, Oplixnet, that revolutionizes traditional optical neural networks by combining amplitude and phase data from light signals. By separating input image data into amplitude and phase components and reorganizing input and output layers to utilize this dual information, our innovative approach leads to a substantial decrease in network size. To guarantee reliability, we apply mutual learning across various ONN architectures. Experimental results show substantial reductions in ONN area, with decreases of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor decline in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here is a pioneering framework, Oplixnet, which significantly improves traditional optical neural networks by integrating amplitude and phase data from light signals. By dividing input image data into amplitude and phase components and reconfiguring input and output layers to leverage this dual information, our innovative approach leads to a substantial reduction in network size. To ensure reliability, we implement mutual learning across various ONN architectures. Experimental results demonstrate substantial reductions in ONN area, with decreases of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor decrease in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here is a groundbreaking framework, Oplixnet, which revolutionizes traditional optical neural networks by combining amplitude and phase data from light signals. By separating input image data into amplitude and phase components and reorganizing input and output layers to utilize this dual information, our novel approach leads to a significant decrease in network size. To guarantee dependability, we employ mutual learning across various ONN architectures. Experimental findings show substantial reductions in ONN area, with decreases of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor decline in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here is a pioneering framework, Oplixnet, which transforms conventional optical neural networks by integrating amplitude and phase data from light signals. By splitting input image data into amplitude and phase components and restructuring input and output layers to leverage this dual information, our innovative approach leads to a substantial reduction in network size. To ensure reliability, we utilize mutual learning across diverse ONN architectures. Experimental results demonstrate significant decreases in ONN area, with reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor decline in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here is a groundbreaking framework, Oplixnet, which revolutionizes traditional optical neural networks by combining amplitude and phase information from light signals. By dividing input image data into amplitude and phase components and reorganizing input and output layers to utilize this dual information, our novel approach leads to a substantial reduction in network size. To guarantee reliability, we employ mutual learning across various ONN architectures. Experimental results show substantial decreases in ONN area, with reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor decline in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here is a pioneering framework, Oplixnet, which dramatically transforms traditional optical neural networks by integrating amplitude and phase details from light signals. By separating input image data into amplitude and phase parts and restructuring input and output layers to leverage this dual data, our innovative approach leads to a significant reduction in network size. To ensure reliability, we implement mutual learning across diverse ONN architectures. Experimental outcomes demonstrate substantial decreases in ONN area, with reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor decline in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here is a groundbreaking framework, Oplixnet, which revolutionizes traditional optical neural networks by combining amplitude and phase information from light signals. By dividing input image data into amplitude and phase components and rearranging input and output layers to capitalize on this dual data, our innovative approach leads to a substantial reduction in network size. To guarantee reliability, we employ mutual learning across various ONN architectures. Experimental results show significant decreases in ONN area, with reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor decline in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here is a pioneering framework, Oplixnet, which transforms traditional optical neural networks by harnessing both amplitude and phase data from light signals. By separating input image data into amplitude and phase components and reconfiguring input and output layers to leverage this dual information, our innovative approach yields a substantial decrease in network size. To ensure reliability, we utilize mutual learning across diverse ONN architectures. Experimental outcomes demonstrate substantial reductions in ONN area, with decreases of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor decline in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here is a groundbreaking framework, Oplixnet, which revolutionizes traditional optical neural networks by utilizing both amplitude and phase data from light signals. By dividing input image data into amplitude and phase components and redesigning input and output layers to capitalize on this dual information, our novel approach leads to a significant reduction in network size. To guarantee reliability, we employ mutual learning across various ONN architectures. Experimental results show substantial decreases in ONN area, with reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor decrease in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here is a pioneering framework, Oplixnet, which transforms traditional optical neural networks by harnessing both amplitude and phase data from light signals. By separating input image data into amplitude and phase components and reconfiguring input and output layers to leverage this dual information, our innovative approach results in a substantial reduction in network size. To ensure reliability, we implement mutual learning across diverse ONN architectures. Experimental outcomes demonstrate notable decreases in ONN area, with reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor decrease in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here is a groundbreaking framework, Oplixnet, which revolutionizes traditional optical neural networks by utilizing both amplitude and phase data from light signals. By decomposing input image data into amplitude and phase components and reorganizing input and output layers to capitalize on this dual information, our novel approach leads to a significant decrease in network size. To guarantee reliability, we implement mutual learning across various ONN architectures. Experimental results show notable decreases in ONN area, with reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor decrease in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here is a pioneering framework, Oplixnet, which transforms conventional optical neural networks by leveraging both amplitude and phase data from light signals. By breaking down input image data into amplitude and phase components and rearranging input and output layers to exploit this dual information, our innovative approach leads to a substantial reduction in network size. To ensure reliability, we incorporate mutual learning across various ONN architectures. Experimental results demonstrate substantial decreases in ONN area, with reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor decline in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here's a pioneering framework, Oplixnet, that revolutionizes traditional optical neural networks by utilizing both amplitude and phase data from light signals. By decomposing input image data into amplitude and phase components and reorganizing input and output layers to capitalize on this dual information, our innovative approach leads to a significant reduction in network size. To ensure reliability, we incorporate mutual learning across various ONN architectures. Experimental results show substantial decreases in ONN area, with reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor decline in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here's a groundbreaking framework, Oplixnet, that transforms traditional optical neural networks by harnessing both amplitude and phase data from light signals. By separating input image data into amplitude and phase components and reconfiguring input and output layers to leverage this dual information, our innovative approach leads to a substantial reduction in network size. To guarantee reliability, we incorporate mutual learning across diverse ONN architectures. Experimental outcomes demonstrate significant decreases in ONN area, with reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor decline in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here's a pioneering framework, Oplixnet, which revolutionizes traditional optical neural networks by utilizing both amplitude and phase data from light signals. By splitting input image data into amplitude and phase components and reorganizing input and output layers to exploit this dual information, our innovative approach leads to a substantial decrease in network size. To ensure reliability, we integrate mutual learning across various ONN architectures. Experimental results show substantial reductions in ONN area, with decreases of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor decline in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here's a groundbreaking framework, Oplixnet, which transforms traditional optical neural networks by leveraging both amplitude and phase information from light signals. By dividing input image data into amplitude and phase components and rearranging input and output layers to utilize this dual data, our novel approach leads to a significant reduction in network size. To ensure dependability, we integrate mutual learning across various ONN architectures. Experimental results demonstrate substantial decreases in ONN area, with reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor decline in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here's a revolutionary framework, Oplixnet, which revolutionizes traditional optical neural networks by harnessing both amplitude and phase information from light signals. By separating input image data into amplitude and phase components and rearranging input and output layers to utilize this dual data, our innovative approach leads to a substantial reduction in network size. To ensure reliability, we incorporate mutual learning across diverse ONN architectures. Experimental findings show substantial decreases in ONN area, with reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor decline in accuracy of 0.33% and 2.38%."
        ],
        [
            "Introducing Oplixnet, a groundbreaking framework that transforms traditional optical neural networks by leveraging both amplitude and phase data from light signals. By splitting input image data into amplitude and phase components and rearranging layers to utilize this dual information, our innovative approach leads to a significant reduction in network size. To ensure reliability, we incorporate mutual learning across various ONN architectures. Experimental results demonstrate substantial area reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor 0.33% and 2.38% decrease in accuracy."
        ],
        [
            "Here is the rephrased text:\n\nWe present Oplixnet, a pioneering framework that revolutionizes traditional optical neural networks by harnessing the power of both amplitude and phase information from light signals. By dividing input image data into amplitude and phase components and rearranging layers to utilize this dual data, our innovative approach results in a substantial reduction in network size. To guarantee reliability, we implement mutual learning across multiple ONN architectures. Experimental results show remarkable area reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by a minor 0.33% and 2.38% decrease in accuracy."
        ],
        [
            "Here is the rephrased text:\n\nWe introduce Oplixnet, a groundbreaking framework that transforms traditional optical neural networks by leveraging both amplitude and phase data from light signals. By separating input image data into amplitude and phase components and reorganizing layers to utilize this dual input, our innovative approach leads to a significant reduction in network size. To ensure reliability, we implement mutual learning across multiple ONN architectures. Experimental results demonstrate impressive area reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by minor accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is a rephrased version of the text: \n\nWe present Oplixnet, a pioneering framework that revolutionizes traditional optical neural networks by harnessing both amplitude and phase information from light signals. By splitting input image data into amplitude and phase components and reconfiguring layers to utilize this dual input, our novel approach achieves a substantial reduction in network size. To guarantee reliability, we employ mutual learning across multiple ONN architectures. Experimental findings show remarkable area reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by minor accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "Here is a pioneering framework, Oplixnet, which transforms traditional optical neural networks by leveraging both amplitude and phase data from light signals. By separating input image data into amplitude and phase components and reorganizing layers to utilize this dual input, our innovative approach leads to a significant decrease in network size. To ensure reliability, we implement mutual learning across multiple ONN architectures. Experimental results demonstrate notable area reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by minor accuracy drops of 0.33% and 2.38%."
        ],
        [
            "Here is a groundbreaking framework, Oplixnet, which revolutionizes traditional optical neural networks by combining amplitude and phase data from light signals. By splitting input image data into amplitude and phase components and rearranging layers to utilize both, our approach yields a substantial reduction in network size. To guarantee robustness, we employ mutual learning across various ONN architectures. Experimental findings show notable area reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by minor accuracy drops of 0.33% and 2.38%."
        ],
        [
            "Here is a revolutionary framework, Oplixnet, which transforms traditional optical neural networks by integrating amplitude and phase information from light signals. By separating input image data into amplitude and phase components and rearranging layers to utilize both, our method leads to a significant reduction in network size. To ensure reliability, we apply mutual learning across diverse ONN architectures. Experimental results demonstrate notable area reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by minor decreases in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here is a groundbreaking framework, Oplixnet, which redefines traditional optical neural networks by combining amplitude and phase data from light signals. By breaking down input image data into amplitude and phase components and rearranging layers to utilize both, our approach achieves a substantial reduction in network size. To guarantee reliability, we implement mutual learning across various ONN architectures. Experimental results show remarkable area reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by minor drops in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here is a revolutionary framework, Oplixnet, which transforms traditional optical neural networks by integrating amplitude and phase information from light signals. By decomposing input image data into amplitude and phase components and rearranging network layers to leverage both, our approach achieves a significant reduction in network size. To ensure reliability, we implement mutual learning across various ONN architectures. Experimental results demonstrate impressive area reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by minor decreases in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here is a groundbreaking framework, Oplixnet, which revolutionizes traditional optical neural networks by combining amplitude and phase data from light signals. By breaking down input image data into amplitude and phase components and reorganizing network layers to utilize both, our method achieves a substantial decrease in network size. To guarantee reliability, we implement mutual learning across various ONN architectures. Experimental results show notable area reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by minor declines in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here's a rephrased version of the text:\n\nIntroducing Oplixnet, a pioneering framework that transforms traditional optical neural networks by integrating amplitude and phase information from light signals. By splitting input image data into amplitude and phase components and reconfiguring network layers to harness both, our approach yields a significant reduction in network size. To ensure reliability, we incorporate mutual learning across various ONN architectures. Experimental outcomes demonstrate notable area reductions of 75.03% and 74.88% in fully connected neural networks and ResNet-32, respectively, accompanied by minor decreases in accuracy of 0.33% and 2.38%."
        ],
        [
            "Here's a rephrased version of the text:"
        ],
        [
            "I'm ready! Please go ahead and send the text."
        ],
        [
            "I'm all set! Go ahead and send it now."
        ],
        [
            "You can send it now, I'm ready!"
        ],
        [
            "I'm prepared to receive it - send it over!"
        ],
        [
            "Send it over, I'm ready to receive it!"
        ],
        [
            "I'm ready to receive it, can you send it over now?"
        ],
        [
            "Are you ready to send it? Can you share it with me immediately?"
        ],
        [
            "Are you prepared to transmit it? Can you send it to me right away?"
        ]
    ]
}