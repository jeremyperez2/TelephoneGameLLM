{
    "adjacency_matrix": [
        [
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0
        ]
    ],
    "prompt_init": [
        "You will receive a text. Your task is to rephrase this text without modifying its meaning. Just output your new text, nothing else. Here is the text:"
    ],
    "prompt_update": [
        "You will receive a text. Your task is to rephrase this text without modifying its meaning. Just output your new text, nothing else. Here is the text:"
    ],
    "personality_list": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "format_prompt": [
        ""
    ],
    "initial_story": "having the potential for high speed, high throughput, and low energy cost,optical neural networks (onns) have emerged as a promising candidate foraccelerating deep learning tasks. in conventional onns, light amplitudes aremodulated at the input and detected at the output. however, the light phasesare still ignored in conventional structures, although they can also carryinformation for computing. to address this issue, in this paper, we propose aframework called oplixnet to compress the areas of onns by modulating inputimage data into the amplitudes and phase parts of light signals. the input andoutput parts of the onns are redesigned to make full use of both amplitude andphase information. moreover, mutual learning across different onn structures isintroduced to maintain the accuracy. experimental results demonstrate that theproposed framework significantly reduces the areas of onns with the accuracywithin an acceptable range. for instance, 75.03% area is reduced with a 0.33%accuracy decrease on fully connected neural network (fcnn) and 74.88% area isreduced with a 2.38% accuracy decrease on resnet-32. ",
    "stories": [
        [
            "Optical neural networks (ONNs) have gained attention for their potential to accelerate deep learning tasks, combining high speed, high throughput, and low energy costs. Traditional ONNs modulate light amplitudes at the input and output, but neglect the phases, which can also carry information. To address this, we introduce OplixNet, a framework that compresses ONNs by separating input image data into amplitude and phase parts of light signals. The input and output parts are redesigned to utilize both amplitude and phase information. Additionally, mutual learning across different ONN structures is employed to maintain accuracy. Experimental results show that OplixNet significantly reduces ONN areas while maintaining acceptable accuracy, with reductions of 75.03% and 74.88% for fully connected neural networks (FCNN) and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "We propose OplixNet, a novel framework that enhances optical neural networks by leveraging both amplitude and phase information in input and output light signals. By separating input image data into amplitude and phase parts and redesigning the input and output parts to utilize both, we achieve significant area reductions while maintaining acceptable accuracy. Experimental results demonstrate that OplixNet reduces ONN areas by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, with corresponding accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "We introduce OplixNet, a pioneering framework that amplifies the capabilities of optical neural networks by harnessing both amplitude and phase aspects of input and output light signals. By segmenting input image data into amplitude and phase components and reconfiguring the input and output components to utilize both, we attain substantial area reductions while preserving acceptable precision. Experimental findings show that OplixNet decreases ONN areas by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by corresponding accuracy declines of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nWe present OplixNet, a groundbreaking framework that enhances the performance of optical neural networks by combining the amplitude and phase features of input and output light signals. By separating input image data into amplitude and phase parts and modifying the input and output components to leverage both, we achieve significant area reductions while maintaining acceptable precision. Experimental results demonstrate that OplixNet reduces ONN areas by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by corresponding accuracy declines of 0.33% and 2.38%."
        ],
        [
            "We introduce OplixNet, a pioneering framework that boosts the efficiency of optical neural networks by integrating amplitude and phase characteristics of input and output light signals. By splitting input image data into amplitude and phase components and adjusting input and output components to utilize both, we achieve substantial area reductions while preserving acceptable precision. Experimental outcomes show that OplixNet decreases ONN areas by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, with corresponding accuracy drops of 0.33% and 2.38%."
        ],
        [
            "We present OplixNet, a groundbreaking framework that enhances the performance of optical neural networks by combining amplitude and phase properties of input and output light signals. By separating input image data into amplitude and phase components and optimizing input and output components to leverage both, we achieve significant area reductions while maintaining acceptable precision. Experimental results demonstrate that OplixNet reduces the area of ONNs by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, with corresponding accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "We introduce OplixNet, a pioneering framework that boosts the efficiency of optical neural networks by integrating amplitude and phase characteristics of input and output light signals. By decomposing input image data into amplitude and phase parts and optimizing both input and output components to harness their synergy, we realize substantial area savings without compromising precision. Experimental findings show that OplixNet decreases the area occupied by ONNs by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy drops of 0.33% and 2.38%."
        ],
        [
            "We present OplixNet, a groundbreaking framework that enhances the performance of optical neural networks by combining amplitude and phase features of input and output light signals. By splitting input image data into amplitude and phase components and optimizing both input and output components to leverage their combined strength, we achieve significant area reductions without sacrificing precision. Experimental results demonstrate that OplixNet reduces the area occupied by ONNs by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "We introduce OplixNet, a pioneering framework that boosts the performance of optical neural networks by merging amplitude and phase attributes of input and output light signals. By separating input image data into amplitude and phase components and refining both input and output components to harness their collective strength, we realize substantial area reductions without compromising precision. Experimental outcomes show that OplixNet decreases the area occupied by ONNs by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy drops of 0.33% and 2.38%."
        ],
        [
            "We present OplixNet, a groundbreaking framework that enhances the performance of optical neural networks by integrating amplitude and phase characteristics of input and output light signals. By decomposing input image data into amplitude and phase components and optimizing both input and output components to leverage their combined potential, we achieve significant area reductions without sacrificing precision. Experimental results demonstrate that OplixNet reduces the area occupied by ONNs by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy losses of 0.33% and 2.38%."
        ],
        [
            "We introduce OplixNet, a pioneering framework that boosts the performance of optical neural networks by fusing amplitude and phase properties of input and output light signals. By breaking down input image data into amplitude and phase components and fine-tuning both input and output components to harness their collective potential, we achieve substantial area savings without compromising precision. Experimental findings show that OplixNet decreases the area consumed by ONNs by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, alongside accuracy losses of 0.33% and 2.38%."
        ],
        [
            "We present OplixNet, a groundbreaking framework that elevates the performance of optical neural networks by combining amplitude and phase attributes of input and output light signals. By decomposing input image data into amplitude and phase parts and refining both input and output components to leverage their combined capabilities, we achieve significant area reductions without compromising accuracy. Experimental results demonstrate that OplixNet reduces the area occupied by ONNs by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, with corresponding accuracy drops of 0.33% and 2.38%."
        ],
        [
            "We introduce OplixNet, a pioneering framework that boosts the performance of optical neural networks by integrating amplitude and phase characteristics of input and output light signals. By breaking down input image data into amplitude and phase components and enhancing both input and output elements to harness their combined strengths, we attain substantial area reductions without sacrificing accuracy. Experimental findings show that OplixNet decreases the area consumed by ONNs by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by accuracy drops of 0.33% and 2.38%."
        ],
        [
            "We present OplixNet, a groundbreaking framework that improves the performance of optical neural networks by fusing amplitude and phase aspects of input and output light signals. By decomposing input image data into amplitude and phase components and amplifying both input and output components to leverage their complementary strengths, we achieve significant area reductions without compromising accuracy. Experimental results demonstrate that OplixNet reduces the area occupied by ONNs by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by minor accuracy decreases of 0.33% and 2.38%."
        ],
        [
            "We introduce OplixNet, a pioneering framework that boosts the efficiency of optical neural networks by combining amplitude and phase properties of input and output light signals. By breaking down input image data into amplitude and phase components and increasing both input and output components to capitalize on their contrasting strengths, we achieve substantial area reductions without compromising precision. Experimental findings show that OplixNet diminishes the area occupied by ONNs by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, accompanied by minor accuracy drops of 0.33% and 2.38%."
        ],
        [
            "Here is the rephrased text:\n\nWe present OplixNet, a groundbreaking framework that enhances the efficiency of optical neural networks by leveraging the combined properties of amplitude and phase light signals. By decomposing input image data into amplitude and phase components and amplifying both input and output components to exploit their complementary strengths, we achieve significant reductions in area usage without compromising precision. Experimental results demonstrate that OplixNet reduces the area occupied by optical neural networks by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, with only minor accuracy declines of 0.33% and 2.38%."
        ],
        [
            "Here is a rephrased version of the text:\n\nOur innovative framework, OplixNet, revolutionizes optical neural networks by harnessing the unique characteristics of amplitude and phase light signals. By breaking down input image data into amplitude and phase components and amplifying both inputs and outputs to take advantage of their complementary strengths, we've achieved substantial reductions in area usage without sacrificing precision. Experimental findings show that OplixNet reduces the area occupied by optical neural networks by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, with only minor accuracy losses of 0.33% and 2.38%."
        ],
        [
            "Here is a rephrased version of the text: Our revolutionary framework, OplixNet, transforms optical neural networks by leveraging the distinct properties of amplitude and phase light signals. By decomposing input image data into amplitude and phase components, and amplifying both inputs and outputs to capitalize on their synergistic benefits, we've achieved significant reductions in area usage without compromising precision. Experimental results demonstrate that OplixNet reduces the footprint of optical neural networks by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, with only slight accuracy losses of 0.33% and 2.38%."
        ],
        [
            "Our innovative framework, OplixNet, redefines optical neural networks by harnessing the unique characteristics of amplitude and phase light signals. By separating input image data into amplitude and phase components and amplifying both inputs and outputs to exploit their collaborative advantages, we've made substantial reductions in area usage without compromising precision. Experimental findings show that OplixNet shrinks the footprint of optical neural networks by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, with only minor accuracy losses of 0.33% and 2.38%."
        ],
        [
            "Our novel framework, OplixNet, revolutionizes optical neural networks by leveraging the distinct properties of amplitude and phase light signals. By splitting input image data into amplitude and phase components and amplifying both inputs and outputs to capitalize on their synergistic benefits, we've achieved significant reductions in area usage without sacrificing precision. Experimental results demonstrate that OplixNet compresses the footprint of optical neural networks by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, with minimal accuracy losses of 0.33% and 2.38%."
        ],
        [
            "Our innovative framework, OplixNet, transforms optical neural networks by harnessing the unique characteristics of amplitude and phase light signals. By dividing input image data into amplitude and phase components and amplifying both inputs and outputs to exploit their complementary strengths, we've made substantial reductions in area usage without compromising precision. Experimental outcomes show that OplixNet reduces the footprint of optical neural networks by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, with minimal accuracy losses of 0.33% and 2.38%."
        ],
        [
            "Our innovative framework, OplixNet, revolutionizes optical neural networks by leveraging the distinct properties of amplitude and phase light signals. By separating input image data into amplitude and phase components and amplifying both inputs and outputs to capitalize on their complementary advantages, we've achieved significant reductions in area usage without sacrificing precision. Experimental results demonstrate that OplixNet minimizes the footprint of optical neural networks by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, with minimal losses in accuracy of 0.33% and 2.38%."
        ],
        [
            "Our innovative framework, OplixNet, transforms optical neural networks by harnessing the unique characteristics of amplitude and phase light signals. By dividing input image data into amplitude and phase components and amplifying both inputs and outputs to exploit their complementary strengths, we've achieved substantial reductions in area usage without compromising precision. Experimental outcomes show that OplixNet minimizes the footprint of optical neural networks by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, with minimal losses in accuracy of 0.33% and 2.38%."
        ],
        [
            "Our OplixNet framework revolutionizes optical neural networks by leveraging the distinct properties of amplitude and phase light signals. By separating input image data into amplitude and phase components, and boosting both inputs and outputs to capitalize on their synergistic advantages, we have successfully reduced area usage while maintaining precision. Experimental results demonstrate that OplixNet minimizes the footprint of optical neural networks by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, with minor losses in accuracy of 0.33% and 2.38%."
        ],
        [
            "Our OplixNet framework transforms optical neural networks by exploiting the unique characteristics of amplitude and phase light signals. By dividing input image data into amplitude and phase parts, and amplifying both inputs and outputs to harness their complementary strengths, we have achieved a reduction in area usage while preserving precision. Experimental findings show that OplixNet reduces the physical footprint of optical neural networks by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, with minor decreases in accuracy of 0.33% and 2.38%."
        ],
        [
            "Our OplixNet framework revolutionizes optical neural networks by leveraging the distinct properties of amplitude and phase light signals. By segmenting input image data into amplitude and phase components, and boosting both inputs and outputs to capitalize on their synergistic benefits, we have successfully minimized area usage without compromising precision. Our experiments demonstrate that OplixNet shrinks the physical footprint of optical neural networks by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, with minor losses in accuracy of 0.33% and 2.38%."
        ],
        [
            "Our OplixNet framework innovates optical neural networks by harnessing the unique characteristics of amplitude and phase light signals. By separating input image data into amplitude and phase components, and amplifying both inputs and outputs to capitalize on their combined advantages, we have successfully reduced physical space requirements without compromising accuracy. Experimental results show that OplixNet reduces the physical footprint of optical neural networks by 75.03% and 74.88% for fully connected neural networks and ResNet-32, respectively, with minor losses in precision of 0.33% and 2.38%."
        ],
        [
            "Our innovative OplixNet framework leverages the distinct properties of amplitude and phase light signals in optical neural networks. By decomposing input image data into amplitude and phase components, and amplifying both inputs and outputs to take advantage of their complementary strengths, we have achieved significant reductions in physical space requirements without compromising accuracy. Experimental results demonstrate that OplixNet reduces the physical footprint of optical neural networks by 75.03% for fully connected neural networks and 74.88% for ResNet-32, respectively, with minor losses in precision of 0.33% and 2.38%."
        ],
        [
            "Our OplixNet framework exploits the unique characteristics of amplitude and phase light signals in optical neural networks. By breaking down image data into amplitude and phase components, and amplifying both inputs and outputs to capitalize on their complementary advantages, we've achieved substantial reductions in physical space requirements without sacrificing accuracy. Experimental results show that OplixNet shrinks the physical footprint of optical neural networks by 75.03% for fully connected networks and 74.88% for ResNet-32, respectively, with minor losses in precision of 0.33% and 2.38%."
        ],
        [
            "Our OplixNet framework leverages the distinct properties of amplitude and phase light signals in optical neural networks. By decomposing image data into amplitude and phase components, and amplifying both inputs and outputs to capitalize on their complementary strengths, we have successfully reduced physical space requirements without compromising accuracy. Experimental results demonstrate that OplixNet achieves a physical footprint reduction of 75.03% for fully connected networks and 74.88% for ResNet-32, with minor losses in precision of 0.33% and 2.38%."
        ],
        [
            "Our OplixNet framework utilizes the unique characteristics of amplitude and phase light signals in optical neural networks. By splitting image data into amplitude and phase components, and amplifying both inputs and outputs to take advantage of their complementary capabilities, we have achieved significant reductions in physical space requirements without sacrificing accuracy. Experimental results show that OplixNet achieves a physical footprint reduction of 75.03% for fully connected networks and 74.88% for ResNet-32, with only minor decreases in precision of 0.33% and 2.38%."
        ],
        [
            "Our OplixNet framework leverages the distinct properties of amplitude and phase light signals in optical neural networks. By separating image data into amplitude and phase components and amplifying both inputs and outputs to exploit their complementary strengths, we have achieved substantial reductions in physical space requirements without compromising accuracy. Experimental findings demonstrate that OplixNet achieves a 75.03% and 74.88% physical footprint reduction in fully connected networks and ResNet-32, respectively, accompanied by minor precision declines of 0.33% and 2.38%."
        ],
        [
            "Our OplixNet framework utilizes the unique characteristics of amplitude and phase light signals in optical neural networks. By dividing image data into amplitude and phase components and amplifying both inputs and outputs to capitalize on their complementary strengths, we have achieved significant reductions in physical space requirements without sacrificing accuracy. Experimental results show that OplixNet achieves a 75.03% and 74.88% reduction in physical footprint in fully connected networks and ResNet-32, respectively, accompanied by minor losses in precision of 0.33% and 2.38%."
        ],
        [
            "Our OplixNet framework leverages the distinct properties of amplitude and phase light signals in optical neural networks. By splitting image data into amplitude and phase parts and boosting both inputs and outputs to harness their complementary advantages, we have successfully minimized physical space requirements without compromising accuracy. Experimental outcomes reveal that OplixNet achieves substantial reductions in physical footprint of 75.03% and 74.88% in fully connected networks and ResNet-32, respectively, accompanied by minor losses in precision of 0.33% and 2.38%."
        ],
        [
            "Our OplixNet framework capitalizes on the unique characteristics of amplitude and phase light signals in optical neural networks. By separating image data into amplitude and phase components and amplifying both inputs and outputs to exploit their synergies, we have effectively reduced physical space requirements without sacrificing accuracy. Experimental results show that OplixNet achieves significant reductions in physical footprint of 75.03% and 74.88% in fully connected networks and ResNet-32, respectively, with minor losses in precision of 0.33% and 2.38%."
        ],
        [
            "Our OplixNet framework leverages the distinct properties of amplitude and phase light signals in optical neural networks. By decomposing image data into amplitude and phase components and amplifying both inputs and outputs to harness their advantages, we have successfully minimized physical space requirements without compromising accuracy. Experimental outcomes demonstrate that OplixNet realizes substantial reductions in physical footprint, specifically 75.03% in fully connected networks and 74.88% in ResNet-32, accompanied by minor losses in precision of 0.33% and 2.38%, respectively."
        ],
        [
            "Our OplixNet framework exploits the unique characteristics of amplitude and phase light signals in optical neural networks. By breaking down image data into amplitude and phase components and amplifying both inputs and outputs to take advantage of their strengths, we have achieved significant reductions in physical space requirements without sacrificing accuracy. Experimental results show that OplixNet realizes substantial reductions in physical footprint, specifically 75.03% in fully connected networks and 74.88% in ResNet-32, accompanied by minor losses in precision of 0.33% and 2.38%, respectively."
        ],
        [
            "Our OplixNet framework leverages the distinct properties of amplitude and phase light signals in optical neural networks. By decomposing image data into amplitude and phase components and boosting both inputs and outputs to capitalize on their respective strengths, we have attained substantial reductions in physical space requirements without compromising accuracy. Experimental outcomes demonstrate that OplixNet achieves substantial reductions in physical footprint, specifically 75.03% in fully connected networks and 74.88% in ResNet-32, accompanied by minor declines in precision of 0.33% and 2.38%, respectively."
        ],
        [
            "Our OplixNet framework utilizes the unique characteristics of amplitude and phase light signals in optical neural networks. By separating image data into amplitude and phase components and amplifying both inputs and outputs to take advantage of their individual strengths, we have achieved significant reductions in physical space requirements without sacrificing accuracy. Experimental results show that OplixNet achieves substantial reductions in physical footprint, specifically 75.03% in fully connected networks and 74.88% in ResNet-32, alongside minor decreases in precision of 0.33% and 2.38%, respectively."
        ],
        [
            "Our OplixNet framework leverages the distinct properties of amplitude and phase light signals in optical neural networks. By dividing image data into amplitude and phase components and amplifying both inputs and outputs to exploit their respective strengths, we have achieved substantial reductions in physical space requirements without compromising accuracy. Experimental findings indicate that OplixNet achieves notable decreases in physical footprint, with reductions of 75.03% in fully connected networks and 74.88% in ResNet-32, accompanied by minor precision losses of 0.33% and 2.38%, respectively."
        ],
        [
            "Our OplixNet framework utilizes the unique characteristics of amplitude and phase light signals in optical neural networks. By splitting image data into amplitude and phase components and amplifying both inputs and outputs to optimize their individual strengths, we have successfully minimized physical space requirements without sacrificing accuracy. Experimental results show that OplixNet achieves significant reductions in physical size, with decreases of 75.03% in fully connected networks and 74.88% in ResNet-32, accompanied by minor losses in precision of 0.33% and 2.38%, respectively."
        ],
        [
            "Our OplixNet framework leverages the distinct properties of amplitude and phase light signals in optical neural networks. By separating image data into amplitude and phase components and boosting both inputs and outputs to maximize their individual contributions, we have effectively reduced physical space requirements without compromising accuracy. Experimental outcomes reveal that OplixNet achieves substantial reductions in physical size, with decreases of 75.03% in fully connected networks and 74.88% in ResNet-32, accompanied by minor losses in precision of 0.33% and 2.38%, respectively."
        ],
        [
            "Our OplixNet framework utilizes the unique characteristics of amplitude and phase light signals in optical neural networks. By isolating image data into amplitude and phase components and amplifying both inputs and outputs to optimize their individual effects, we have successfully minimized physical space requirements without sacrificing accuracy. Experimental results demonstrate that OplixNet achieves significant reductions in physical size, with decreases of 75.03% in fully connected networks and 74.88% in ResNet-32, accompanied by minor declines in precision of 0.33% and 2.38%, respectively."
        ],
        [
            "Our OplixNet framework leverages the distinct properties of amplitude and phase light signals in optical neural networks. By separating image data into amplitude and phase components and amplifying both inputs and outputs to optimize their individual impacts, we have successfully minimized physical space requirements without compromising accuracy. Experimental outcomes show that OplixNet achieves substantial reductions in physical size, with decreases of 75.03% in fully connected networks and 74.88% in ResNet-32, accompanied by minor decreases in precision of 0.33% and 2.38%, respectively."
        ],
        [
            "Our OplixNet framework utilizes the unique characteristics of amplitude and phase light signals in optical neural networks. By dividing image data into amplitude and phase parts and amplifying both inputs and outputs to maximize their effects, we have achieved significant reductions in physical space requirements without sacrificing accuracy. Experimental results demonstrate that OplixNet achieves substantial physical size reductions, with decreases of 75.03% in fully connected networks and 74.88% in ResNet-32, accompanied by minor decreases in precision of 0.33% and 2.38%, respectively."
        ],
        [
            "Our OplixNet framework leverages the distinct properties of amplitude and phase light signals in optical neural networks. By splitting image data into amplitude and phase components and amplifying both inputs and outputs to maximize their impact, we have achieved considerable reductions in physical space requirements without compromising accuracy. Experimental outcomes show that OplixNet achieves substantial physical size reductions, with decreases of 75.03% in fully connected networks and 74.88% in ResNet-32, accompanied by minor decreases in precision of 0.33% and 2.38%, respectively."
        ],
        [
            "Our OplixNet framework utilizes the unique characteristics of amplitude and phase light signals in optical neural networks. By separating image data into amplitude and phase components and amplifying both inputs and outputs to maximize their influence, we have successfully minimized physical space requirements without sacrificing accuracy. Experimental results demonstrate that OplixNet achieves significant physical size reductions, with decreases of 75.03% in fully connected networks and 74.88% in ResNet-32, accompanied by minor decreases in precision of 0.33% and 2.38%, respectively."
        ],
        [
            "Our OplixNet framework leverages the distinct properties of amplitude and phase light signals in optical neural networks. By decomposing image data into amplitude and phase components and amplifying both inputs and outputs to amplify their impact, we have effectively reduced physical space requirements without compromising accuracy. Experimental outcomes show that OplixNet achieves substantial physical size reductions, with decreases of 75.03% in fully connected networks and 74.88% in ResNet-32, accompanied by minor declines in precision of 0.33% and 2.38%, respectively."
        ],
        [
            "Our OplixNet framework utilizes the unique characteristics of amplitude and phase light signals in optical neural networks. By splitting image data into amplitude and phase components, then amplifying both inputs and outputs to enhance their effects, we have successfully minimized physical space requirements without sacrificing accuracy. Experimental results demonstrate that OplixNet achieves significant physical size reductions, with decreases of 75.03% in fully connected networks and 74.88% in ResNet-32, accompanied by minor decreases in precision of 0.33% and 2.38%, respectively."
        ],
        [
            "Our OplixNet framework leverages the distinctive properties of amplitude and phase light signals in optical neural networks. By separating image data into amplitude and phase components, amplifying both inputs and outputs to intensify their impact, we have accomplished substantial reductions in physical space without compromising precision. Experimental findings show that OplixNet achieves considerable physical size reductions, with decreases of 75.03% in fully connected networks and 74.88% in ResNet-32, accompanied by minor declines in accuracy of 0.33% and 2.38%, respectively."
        ]
    ]
}