{
    "adjacency_matrix": [
        [
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0
        ]
    ],
    "prompt_init": [
        "You will receive a text. Your task is to create a new original text by taking inspiration from this text. Just output your new text, nothing else. Here is the text:"
    ],
    "prompt_update": [
        "You will receive a text. Your task is to create a new original text by taking inspiration from this text. Just output your new text, nothing else. Here is the text:"
    ],
    "personality_list": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "format_prompt": [
        ""
    ],
    "initial_story": "bias triangles represent features in stability diagrams of quantum dot (qd)devices, whose occurrence and property analysis are crucial indicators for spinphysics. nevertheless, challenges associated with quality and availability ofdata as well as the subtlety of physical phenomena of interest have hindered anautomatic and bespoke analysis framework, often still relying (in part) onhuman labelling and verification. we introduce a feature extraction frameworkfor bias triangles, built from unsupervised, segmentation-based computer visionmethods, which facilitates the direct identification and quantification ofphysical properties of the former. thereby, the need for human input or largetraining datasets to inform supervised learning approaches is circumvented,while additionally enabling the automation of pixelwise shape and featurelabeling. in particular, we demonstrate that pauli spin blockade (psb)detection can be conducted effectively, efficiently and without any trainingdata as a direct result of this approach. ",
    "stories": [
        [
            "Bias triangles are a useful tool for studying the stability of quantum dot devices. However, the process of analyzing these features can be challenging due to the lack of quality and availability of data. Additionally, the subtle nature of the physical phenomena involved can make it difficult for humans to accurately identify and quantify these features. \nTo address this challenge, we have developed a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This framework allows for the direct identification and quantification of physical properties of bias triangles, eliminating the need for human input or large training datasets to inform supervised learning approaches. Furthermore, this approach enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate. \nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. \nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices, enabling more accurate and efficient analysis of these features. With this framework, researchers will be able to gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "The process of analyzing bias triangles, a useful tool for studying the stability of quantum dot devices, can be challenging due to the lack of quality and availability of data. Additionally, the subtle nature of the physical phenomena involved can make it difficult for humans to accurately identify and quantify these features. \nTo address this challenge, we have developed a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This framework allows for the direct identification and quantification of physical properties of bias triangles, eliminating the need for human input or large training datasets to inform supervised learning approaches. Furthermore, this approach enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate. \nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. \nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices, enabling more accurate and efficient analysis of these features. With this framework, researchers will be able to gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "The process of analyzing bias triangles, a useful tool for studying the stability of quantum dot devices, can be challenging due to the lack of quality and availability of data. Additionally, the subtle nature of the physical phenomena involved can make it difficult for humans to accurately identify and quantify these features. \nTo address this challenge, we have developed a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This framework allows for the direct identification and quantification of physical properties of bias triangles, eliminating the need for human input or large training datasets to inform supervised learning approaches. Furthermore, this approach enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate. \nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. \nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices, enabling more accurate and efficient analysis of these features. With this framework, researchers will be able to gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "The process of analyzing bias triangles, a useful tool for studying the stability of quantum dot devices, can be challenging due to the lack of quality and availability of data. Additionally, the subtle nature of the physical phenomena involved can make it difficult for humans to accurately identify and quantify these features. \nTo address this challenge, we have developed a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This framework allows for the direct identification and quantification of physical properties of bias triangles, eliminating the need for human input or large training datasets to inform supervised learning approaches. Furthermore, this approach enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate. \nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. \nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices, enabling more accurate and efficient analysis of these features. With this framework, researchers will be able to gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "The process of analyzing bias triangles, a useful tool for studying the stability of quantum dot devices, can be challenging due to the lack of quality and availability of data. Additionally, the subtle nature of the physical phenomena involved can make it difficult for humans to accurately identify and quantify these features. \nTo address this challenge, we have developed a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This framework allows for the direct identification and quantification of physical properties of bias triangles, eliminating the need for human input or large training datasets to inform supervised learning approaches. Furthermore, this approach enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate. \nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. \nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices, enabling more accurate and efficient analysis of these features. With this framework, researchers will be able to gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "The process of analyzing bias triangles, a useful tool for studying the stability of quantum dot devices, can be challenging due to the lack of quality and availability of data. Additionally, the subtle nature of the physical phenomena involved can make it difficult for humans to accurately identify and quantify these features. \nTo address this challenge, we have developed a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This framework allows for the direct identification and quantification of physical properties of bias triangles, eliminating the need for human input or large training datasets to inform supervised learning approaches. Furthermore, this approach enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate. \nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. \nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices, enabling more accurate and efficient analysis of these features. With this framework, researchers will be able to gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "In this study, we developed an unsupervised framework to extract features from bias triangles for studying the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved. \nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate. \nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. \nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "In this study, we developed an unsupervised framework to extract features from bias triangles for studying the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved. \n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate. \n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. \n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "In this study, we developed an unsupervised framework to extract features from bias triangles for studying the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved. \n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate. \n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. \n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "In this study, we developed an unsupervised framework to extract features from bias triangles for studying the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved. \n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate. \n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. \n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "In this study, we developed an unsupervised framework to extract features from bias triangles for studying the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved. \n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate. \n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. \n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "In this study, we developed an unsupervised framework to extract features from bias triangles for studying the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved. \n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate. \n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. \n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "A New Approach to Analyzing Bias Triangles: An Unsupervised Framework for Extracting Features from Bias Triangles for Studying Quantum Dot Devices Stability\n\nIn this study, we propose an unsupervised framework for analyzing bias triangles and extracting features from them for studying the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "A New Approach to Analyzing Bias Triangles: An Unsupervised Framework for Extracting Features from Bias Triangles for Studying Quantum Dot Devices Stability\n\nIn this study, we propose an unsupervised framework for analyzing bias triangles and extracting features from them for studying the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "A New Approach to Analyzing Bias Triangles: An Unsupervised Framework for Extracting Features from Bias Triangles for Studying Quantum Dot Devices Stability\n\nIn this study, we propose an unsupervised framework for analyzing bias triangles and extracting features from them for studying the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "A New Approach to Analyzing Bias Triangles: An Unsupervised Framework for Extracting Features from Bias Triangles for Studying Quantum Dot Devices Stability\n\nIn this study, we propose an unsupervised framework for analyzing bias triangles and extracting features from them for studying the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "The Bias Triangle: A New Approach to Analyzing Quantum Dot Device Stability\n\nIn this study, we propose a novel framework for analyzing bias triangles and extracting features from them to study the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "The Bias Triangle: A New Approach to Analyzing Quantum Dot Device Stability\n\nIn this study, we propose a novel framework for analyzing bias triangles and extracting features from them to study the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "The Bias Triangle: A New Approach to Analyzing Quantum Dot Device Stability\n\nIn this study, we propose a novel framework for analyzing bias triangles and extracting features from them to study the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "The Bias Triangle: A New Approach to Analyzing Quantum Dot Device Stability\n\nIn this study, we propose a novel framework for analyzing bias triangles and extracting features from them to study the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "The Bias Triangle: A New Approach to Analyzing Quantum Dot Device Stability\n\nIn this study, we propose a novel framework for analyzing bias triangles and extracting features from them to study the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "The Bias Triangle: A New Approach to Analyzing Quantum Dot Device Stability\n\nIn this study, we propose a novel framework for analyzing bias triangles and extracting features from them to study the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "The Bias Triangle: A New Approach to Analyzing Quantum Dot Device Stability\n\nIn this study, we propose a novel framework for analyzing bias triangles and extracting features from them to study the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field.\n\nIn this study, we propose a novel framework for analyzing bias triangles and extracting features from them to study the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "The Bias Triangle: A New Approach to Analyzing Quantum Dot Device Stability\n\nIn this study, we propose a novel framework for analyzing bias triangles and extracting features from them to study the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "The Bias Triangle: A New Approach to Analyzing Quantum Dot Device Stability\n\nIn this study, we propose a novel framework for analyzing bias triangles and extracting features from them to study the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "The Bias Triangle: A New Approach to Analyzing Quantum Dot Device Stability\n\nIn this study, we propose a novel framework for analyzing bias triangles and extracting features from them to study the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "The Bias Triangle: A New Approach to Analyzing Quantum Dot Device Stability\n\nIn this study, we propose a novel framework for analyzing bias triangles and extracting features from them to study the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "The Bias Triangle: A New Approach to Analyzing Quantum Dot Device Stability\n\nIn this study, we propose a novel framework for analyzing bias triangles and extracting features from them to study the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "The Bias Triangle: A New Approach to Analyzing Quantum Dot Device Stability\n\nIn this study, we propose a novel framework for analyzing bias triangles and extracting features from them to study the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "The Bias Triangle: A Novel Framework for Analyzing Quantum Dot Device Stability\n\nIn this study, we propose a novel framework for analyzing bias triangles and extracting features from them to study the stability of quantum dot devices. The process of analyzing bias triangles can be challenging due to the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "# Introduction\n\nBias triangles are a powerful tool for studying the stability of quantum dot devices. By analyzing these triangles, researchers can gain insights into the physical phenomena involved in their operation. However, the process of analyzing bias triangles can be challenging due to several factors, including the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\n# Methods\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\n# Results\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\n# Discussion\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "# Introduction\n\nBias triangles are a powerful tool for studying the stability of quantum dot devices. By analyzing these triangles, researchers can gain insights into the physical phenomena involved in their operation. However, the process of analyzing bias triangles can be challenging due to several factors, including the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\n# Methods\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\n# Results\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\n# Discussion\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "# Introduction\n\nBias triangles are a powerful tool for studying the stability of quantum dot devices. By analyzing these triangles, researchers can gain insights into the physical phenomena involved in their operation. However, the process of analyzing bias triangles can be challenging due to several factors, including the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\n# Methods\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\n# Results\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\n# Discussion\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "# Introduction\n\nBias triangles are a powerful tool for studying the stability of quantum dot devices. By analyzing these triangles, researchers can gain insights into the physical phenomena involved in their operation. However, the process of analyzing bias triangles can be challenging due to several factors, including the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\n# Methods\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\n# Results\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\n# Discussion\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "# Introduction\n\nBias triangles are a powerful tool for studying the stability of quantum dot devices. By analyzing these triangles, researchers can gain insights into the physical phenomena involved in their operation. However, the process of analyzing bias triangles can be challenging due to several factors, including the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\n# Methods\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\n# Results\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\n# Discussion\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "# Introduction\n\nBias triangles are a powerful tool for studying the stability of quantum dot devices. By analyzing these triangles, researchers can gain insights into the physical phenomena involved in their operation. However, the process of analyzing bias triangles can be challenging due to several factors, including the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\n# Methods\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\n# Results\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\n# Discussion\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "# Introduction\n\nBias triangles are a powerful tool for studying the stability of quantum dot devices. By analyzing these triangles, researchers can gain insights into the physical phenomena involved in their operation. However, the process of analyzing bias triangles can be challenging due to several factors, including the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\n# Methods\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\n# Results\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\n# Discussion\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "# Introduction\n\nBias triangles are a powerful tool for studying the stability of quantum dot devices. By analyzing these triangles, researchers can gain insights into the physical phenomena involved in their operation. However, the process of analyzing bias triangles can be challenging due to several factors, including the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\n# Methods\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\n# Results\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\n# Discussion\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field."
        ],
        [
            "# Introduction\n\nBias triangles are a powerful tool for studying the stability of quantum dot devices. By analyzing these triangles, researchers can gain insights into the physical phenomena involved in their operation. However, the process of analyzing bias triangles can be challenging due to several factors, including the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\n# Methods\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\n# Results\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\n# Discussion\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field.\n\n# Conclusion\n\nIn conclusion, our study has shown that the segmentation-based computer vision approach we have implemented is a powerful tool for directly identifying and quantifying physical properties of bias triangles. This approach eliminates the need for human input or large training datasets, making the process more efficient and accurate. Furthermore, the automation of pixelwise shape and feature labeling allows for the detection of Pauli spin blockade (PSB) without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. Overall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices, and we believe it will lead to potential advancements in the field."
        ],
        [
            "# Introduction\n\nBias triangles are a powerful tool for studying the stability of quantum dot devices. By analyzing these triangles, researchers can gain insights into the physical phenomena involved in their operation. However, the process of analyzing bias triangles can be challenging due to several factors, including the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\n# Methods\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\n# Results\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\n# Discussion\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field.\n\n# Conclusion\n\nIn conclusion, our study has shown that the segmentation-based computer vision approach we have implemented is a powerful tool for directly identifying and quantifying physical properties of bias triangles. This approach eliminates the need for human input or large training datasets, making the process more efficient and accurate. Furthermore, the automation of pixelwise shape and feature labeling allows for the detection of Pauli spin blockade (PSB) without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. Overall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices, and we believe it will lead to potential advancements in the field."
        ],
        [
            "# Introduction\n\nThe concept of Bias Triangles was first introduced by [insert reference] in [insert year]. They are a powerful tool for studying the stability of quantum dot devices. By analyzing these triangles, researchers can gain insights into the physical phenomena involved in their operation. However, the process of analyzing bias triangles can be challenging due to several factors, including the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\n# Methods\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\n# Results\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\n# Discussion\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field.\n\n# Conclusion\n\nIn conclusion, our study has shown that the segmentation-based computer vision approach we have implemented is a powerful tool for directly identifying and quantifying physical properties of bias triangles. This approach eliminates the need for human input or large training datasets, making the process more efficient and accurate. Furthermore, the automation of pixelwise shape and feature labeling allows for the detection of Pauli spin blockade (PSB) without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. Overall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices, and we believe it will lead to potential advancements in the field."
        ],
        [
            "# Introduction\n\nThe concept of Bias Triangles was first introduced by [insert reference] in [insert year]. They are a powerful tool for studying the stability of quantum dot devices. By analyzing these triangles, researchers can gain insights into the physical phenomena involved in their operation. However, the process of analyzing bias triangles can be challenging due to several factors, including the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\n# Methods\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\n# Results\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\n# Discussion\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field.\n\n# Conclusion\n\nIn conclusion, our study has shown that the segmentation-based computer vision approach we have implemented is a powerful tool for directly identifying and quantifying physical properties of bias triangles. This approach eliminates the need for human input or large training datasets, making the process more efficient and accurate. Furthermore, the automation of pixelwise shape and feature labeling allows for the detection of Pauli spin blockade (PSB) without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. Overall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices, and we believe it will lead to potential advancements in the field."
        ],
        [
            "# Introduction\n\nBias triangles are a powerful tool for studying the stability of quantum dot devices. Researchers can gain insights into the physical phenomena involved in their operation by analyzing these triangles. However, the process of analyzing bias triangles can be challenging due to several factors, including the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\n# Methods\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\n# Results\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\n# Discussion\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field.\n\n# Conclusion\n\nIn conclusion, our study has shown that the segmentation-based computer vision approach we have implemented is a powerful tool for directly identifying and quantifying physical properties of bias triangles. This approach eliminates the need for human input or large training datasets, making the process more efficient and accurate. Furthermore, the automation of pixelwise shape and feature labeling allows for the detection of Pauli spin blockade (PSB) without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. Overall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices, and we believe it will lead to potential advancements in the field."
        ],
        [
            "# Introduction\n\nBias triangles are a powerful tool for studying the stability of quantum dot devices. Researchers can gain insights into the physical phenomena involved in their operation by analyzing these triangles. However, the process of analyzing bias triangles can be challenging due to several factors, including the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\n# Methods\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\n# Results\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\n# Discussion\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field.\n\n# Conclusion\n\nIn conclusion, our study has shown that the segmentation-based computer vision approach we have implemented is a powerful tool for directly identifying and quantifying physical properties of bias triangles. This approach eliminates the need for human input or large training datasets, making the process more efficient and accurate. Furthermore, the automation of pixelwise shape and feature labeling allows for the detection of Pauli spin blockade (PSB) without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. Overall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices, and we believe it will lead to potential advancements in the field."
        ],
        [
            "# Introduction\n\nBias triangles are a powerful tool for studying the stability of quantum dot devices. Researchers can gain insights into the physical phenomena involved in their operation by analyzing these triangles. However, the process of analyzing bias triangles can be challenging due to several factors, including the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\n# Methods\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\n# Results\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\n# Discussion\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field.\n\n# Conclusion\n\nIn conclusion, our study has shown that the segmentation-based computer vision approach we have implemented is a powerful tool for directly identifying and quantifying physical properties of bias triangles. This approach eliminates the need for human input or large training datasets, making the process more efficient and accurate. Furthermore, the automation of pixelwise shape and feature labeling allows for the detection of Pauli spin blockade (PSB) without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. Overall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices, and we believe it will lead to potential advancements in the field."
        ],
        [
            "# Introduction\n\nBias triangles are a powerful tool for studying the stability of quantum dot devices. They can help researchers gain insights into the physical phenomena involved in their operation. However, analyzing bias triangles can be challenging due to several factors, including the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\n# Methods\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\n# Results\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\n# Discussion\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field.\n\n# Conclusion\n\nIn conclusion, our study has shown that the segmentation-based computer vision approach we have implemented is a powerful tool for directly identifying and quantifying physical properties of bias triangles. This approach eliminates the need for human input or large training datasets, making the process more efficient and accurate. Furthermore, the automation of pixelwise shape and feature labeling allows for the detection of Pauli spin blockade (PSB) without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. Overall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices, and we believe it will lead to potential advancements in the field."
        ],
        [
            "# Introduction\n\nBias triangles are a powerful tool for studying the stability of quantum dot devices. They can help researchers gain insights into the physical phenomena involved in their operation. However, analyzing bias triangles can be challenging due to several factors, including the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\n# Methods\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\n# Results\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\n# Discussion\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field.\n\n# Conclusion\n\nIn conclusion, our study has shown that the segmentation-based computer vision approach we have implemented is a powerful tool for directly identifying and quantifying physical properties of bias triangles. This approach eliminates the need for human input or large training datasets, making the process more efficient and accurate. Furthermore, the automation of pixelwise shape and feature labeling allows for the detection of Pauli spin blockade (PSB) without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. Overall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices, and we believe it will lead to potential advancements in the field."
        ],
        [
            "# Introduction\n\nBias triangles are a powerful tool for studying the stability of quantum dot devices. They can help researchers gain insights into the physical phenomena involved in their operation. However, analyzing bias triangles can be challenging due to several factors, including the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\n# Methods\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\n# Results\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\n# Discussion\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field.\n\n# Conclusion\n\nIn conclusion, our study has shown that the segmentation-based computer vision approach we have implemented is a powerful tool for directly identifying and quantifying physical properties of bias triangles. This approach eliminates the need for human input or large training datasets, making the process more efficient and accurate. Furthermore, the automation of pixelwise shape and feature labeling allows for the detection of Pauli spin blockade (PSB) without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. Overall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices, and we believe it will lead to potential advancements in the field."
        ],
        [
            "# Introduction\n\nBias triangles are a powerful tool for studying the stability of quantum dot devices. They can help researchers gain insights into the physical phenomena involved in their operation. However, analyzing bias triangles can be challenging due to several factors, including the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\n# Methods\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\n# Results\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\n# Discussion\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field.\n\n# Conclusion\n\nIn conclusion, our study has shown that the segmentation-based computer vision approach we have implemented is a powerful tool for directly identifying and quantifying physical properties of bias triangles. This approach eliminates the need for human input or large training datasets, making the process more efficient and accurate. Furthermore, the automation of pixelwise shape and feature labeling allows for the detection of Pauli spin blockade (PSB) without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. Overall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices, and we believe it will lead to potential advancements in the field."
        ],
        [
            "# Introduction\n\nBias triangles are a powerful tool for studying the stability of quantum dot devices. They can help researchers gain insights into the physical phenomena involved in their operation. However, analyzing bias triangles can be challenging due to several factors, including the lack of quality and availability of data, as well as the subtle nature of the physical phenomena involved.\n\n# Methods\n\nTo address these challenges, we implemented a segmentation-based computer vision approach to directly identify and quantify physical properties of bias triangles. This method eliminates the need for human input or large training datasets to inform supervised learning approaches. The framework also enables the automation of pixelwise shape and feature labeling, making the process more efficient and accurate.\n\n# Results\n\nOne specific application of this framework is the detection of Pauli spin blockade (PSB). By utilizing our framework, PSB detection can be conducted effectively and efficiently without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification.\n\n# Discussion\n\nOverall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices. With this framework, researchers can gain deeper insights into the stability and properties of these devices, leading to potential advancements in the field.\n\n# Conclusion\n\nIn conclusion, our study has shown that the segmentation-based computer vision approach we have implemented is a powerful tool for directly identifying and quantifying physical properties of bias triangles. This approach eliminates the need for human input or large training datasets, making the process more efficient and accurate. Furthermore, the automation of pixelwise shape and feature labeling allows for the detection of Pauli spin blockade (PSB) without the need for any training data. This is a significant improvement over traditional methods, which often require manual labeling and verification. Overall, our feature extraction framework for bias triangles represents a significant advancement in the field of quantum dot devices, and we believe it will lead to potential advancements in the field."
        ]
    ]
}