{
    "adjacency_matrix": [
        [
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0
        ]
    ],
    "prompt_init": [
        "You will receive a text. Your task is to continue this text. Just output your new text, nothing else. Here is the text:"
    ],
    "prompt_update": [
        "You will receive a text. Your task is to continue this text. Just output your new text, nothing else. Here is the text:"
    ],
    "personality_list": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "format_prompt": [
        ""
    ],
    "initial_story": "bias triangles represent features in stability diagrams of quantum dot (qd)devices, whose occurrence and property analysis are crucial indicators for spinphysics. nevertheless, challenges associated with quality and availability ofdata as well as the subtlety of physical phenomena of interest have hindered anautomatic and bespoke analysis framework, often still relying (in part) onhuman labelling and verification. we introduce a feature extraction frameworkfor bias triangles, built from unsupervised, segmentation-based computer visionmethods, which facilitates the direct identification and quantification ofphysical properties of the former. thereby, the need for human input or largetraining datasets to inform supervised learning approaches is circumvented,while additionally enabling the automation of pixelwise shape and featurelabeling. in particular, we demonstrate that pauli spin blockade (psb)detection can be conducted effectively, efficiently and without any trainingdata as a direct result of this approach. ",
    "stories": [
        [
            "bias triangles represent features in stability diagrams of quantum dot (qd)devices, whose occurrence and property analysis are crucial indicators for spinphysics. nevertheless, challenges associated with quality and availability ofdata as well as the subtlety of physical phenomena of interest have hindered anautomatic and bespoke analysis framework, often still relying (in part) onhuman labelling and verification. we introduce a feature extraction frameworkfor bias triangles, built from unsupervised, segmentation-based computer visionmethods, which facilitates the direct identification and quantification ofphysical properties of the former. thereby, the need for human input or largetraining datasets to inform supervised learning approaches is circumvented,while additionally enabling the automation of pixelwise shape and featurelabeling. in particular, we demonstrate that pauli spin blockade (psb)detection can be conducted effectively, efficiently and without any trainingdata as a direct result of this approach. \n\nto further demonstrate the usefulness of our method, we analyze an experimentaldata set from a double quantum dot device with a large number of bias trianglesin the stability diagram. our method allows us to extract all relevant featuresof the bias triangles, such as their position, size, and shape, in anautomated and unsupervised manner. we also demonstrate that our method can beused to identify and quantify the physical properties of the bias triangles,such as the psb detection probability and the psb energy splitting. we showthat our method can be used to analyze large data sets with a high level ofaccuracy and efficiency, and that it is robust to noise and other artifacts inthe data. we believe that our method will be a valuable tool for theanalysis of bias triangles in a variety of quantum dot devices, and that itwill enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach. \n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach. \n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach. \n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach. \n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach. \n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach. \n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach. \n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach. \n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach. \n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach. \n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach. \n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach. \n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach. \n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach. \n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach. \n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach. \n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach. \n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach. \n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach. \n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\n## Acknowledgements\nWe would like to thank the anonymous reviewers for their helpful comments and suggestions. We would also like to thank the organizers of the conference for their support and encouragement."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\n## Acknowledgements\nWe would like to thank the anonymous reviewers for their helpful comments and suggestions. We would also like to thank the organizers of the conference for their support and encouragement."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\n## Acknowledgements\nWe would like to thank the anonymous reviewers for their helpful comments and suggestions. We would also like to thank the organizers of the conference for their support and encouragement."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\n## Acknowledgements\nWe would like to thank the anonymous reviewers for their helpful comments and suggestions. We would also like to thank the organizers of the conference for their support and encouragement."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\n## Acknowledgements\nWe would like to thank the anonymous reviewers for their helpful comments and suggestions. We would also like to thank the organizers of the conference for their support and encouragement."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\n## Acknowledgements\nWe would like to thank the anonymous reviewers for their helpful comments and suggestions. We would also like to thank the organizers of the conference for their support and encouragement."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\n## Acknowledgements\nWe would like to thank the anonymous reviewers for their helpful comments and suggestions. We would also like to thank the organizers of the conference for their support and encouragement."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\n## Acknowledgements\nWe would like to thank the anonymous reviewers for their helpful comments and suggestions. We would also like to thank the organizers of the conference for their support and encouragement."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\n## Acknowledgements\nWe would like to thank the anonymous reviewers for their helpful comments and suggestions. We would also like to thank the organizers of the conference for their support and encouragement."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\n## Acknowledgements\nWe would like to thank the anonymous reviewers for their helpful comments and suggestions. We would also like to thank the organizers of the conference for their support and encouragement."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\n## Acknowledgements\nWe would like to thank the anonymous reviewers for their helpful comments and suggestions. We would also like to thank the organizers of the conference for their support and encouragement."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\n## Acknowledgements\nWe would like to thank the anonymous reviewers for their helpful comments and suggestions. We would also like to thank the organizers of the conference for their support and encouragement."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\n## Acknowledgements\nWe would like to thank the anonymous reviewers for their helpful comments and suggestions. We would also like to thank the organizers of the conference for their support and encouragement."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\n## Acknowledgements\nWe would like to thank the anonymous reviewers for their helpful comments and suggestions. We would also like to thank the organizers of the conference for their support and encouragement."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\n## Acknowledgements\nWe would like to thank the anonymous reviewers for their helpful comments and suggestions. We would also like to thank the organizers of the conference for their support and encouragement."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\n## Acknowledgements\nWe would like to thank the anonymous reviewers for their helpful comments and suggestions. We would also like to thank the organizers of the conference for their support and encouragement."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\n## Acknowledgements\nWe would like to thank the anonymous reviewers for their helpful comments and suggestions. We would also like to thank the organizers of the conference for their support and encouragement."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\n## Acknowledgements\nWe would like to thank the anonymous reviewers for their helpful comments and suggestions. We would also like to thank the organizers of the conference for their support and encouragement."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\n## Acknowledgements\nWe would like to thank the anonymous reviewers for their helpful comments and suggestions. We would also like to thank the organizers of the conference for their support and encouragement."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\n## Acknowledgements\nWe would like to thank the anonymous reviewers for their helpful comments and suggestions. We would also like to thank the organizers of the conference for their support and encouragement."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\n## Acknowledgements\nWe would like to thank the anonymous reviewers for their helpful comments and suggestions. We would also like to thank the organizers of the conference for their support and encouragement."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\n## Acknowledgements\nWe would like to thank the anonymous reviewers for their helpful comments and suggestions. We would also like to thank the organizers of the conference for their support and encouragement."
        ],
        [
            "Bias triangles represent features in stability diagrams of quantum dot (QD) devices, whose occurrence and property analysis are crucial indicators for spin physics. Nevertheless, challenges associated with quality and availability of data as well as the subtlety of physical phenomena of interest have hindered an automatic and bespoke analysis framework, often still relying (in part) on human labelling and verification. We introduce a feature extraction framework for bias triangles, built from unsupervised, segmentation-based computer vision methods, which facilitates the direct identification and quantification of physical properties of the former. Thereby, the need for human input or large training datasets to inform supervised learning approaches is circumvented, while additionally enabling the automation of pixelwise shape and feature labelling. In particular, we demonstrate that Pauli spin blockade (PSB) detection can be conducted effectively, efficiently and without any training data as a direct result of this approach.\n\nTo further demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nIn this paper, we present a feature extraction framework for bias triangles in quantum dot devices, built from unsupervised, segmentation-based computer vision methods. We demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\nOur method is based on the use of unsupervised, segmentation-based computer vision methods to identify and extract the features of the bias triangles. We use a combination of image processing and machine learning techniques to achieve this goal. The image processing techniques are used to segment the bias triangles from the background and to extract their features. The machine learning techniques are used to identify and quantify the physical properties of the bias triangles.\n\nThe main advantage of our method is that it does not require any training data to inform supervised learning approaches. This is a significant advantage, as it circumvents the need for human input or large training datasets. Additionally, our method enables the automation of pixelwise shape and feature labelling, which is a key advantage for the analysis of bias triangles.\n\nTo demonstrate the usefulness of our method, we analyze an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data.\n\nIn conclusion, we believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices. Our method is based on the use of unsupervised, segmentation-based computer vision methods, which do not require any training data to inform supervised learning approaches. Additionally, our method enables the automation of pixelwise shape and feature labelling. We demonstrate the usefulness of our method by analyzing an experimental data set from a double quantum dot device with a large number of bias triangles in the stability diagram. Our method allows us to extract all relevant features of the bias triangles, such as their position, size, and shape, in an automated and unsupervised manner. We also demonstrate that our method can be used to identify and quantify the physical properties of the bias triangles, such as the PSB detection probability and the PSB energy splitting. We show that our method can be used to analyze large data sets with a high level of accuracy and efficiency, and that it is robust to noise and other artifacts in the data. We believe that our method will be a valuable tool for the analysis of bias triangles in a variety of quantum dot devices, and that it will enable new insights into the physics of these devices.\n\n## Acknowledgements\nWe would like to thank the anonymous reviewers for their helpful comments and suggestions. We would also like to thank the organizers of the conference for their support and encouragement."
        ]
    ]
}