{
    "adjacency_matrix": [
        [
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0
        ]
    ],
    "prompt_init": [
        "You will receive a text. Your task is to rephrase this text without modifying its meaning. Just output your new text, nothing else. Here is the text:"
    ],
    "prompt_update": [
        "You will receive a text. Your task is to rephrase this text without modifying its meaning. Just output your new text, nothing else. Here is the text:"
    ],
    "personality_list": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "format_prompt": [
        ""
    ],
    "initial_story": "bias triangles represent features in stability diagrams of quantum dot (qd)devices, whose occurrence and property analysis are crucial indicators for spinphysics. nevertheless, challenges associated with quality and availability ofdata as well as the subtlety of physical phenomena of interest have hindered anautomatic and bespoke analysis framework, often still relying (in part) onhuman labelling and verification. we introduce a feature extraction frameworkfor bias triangles, built from unsupervised, segmentation-based computer visionmethods, which facilitates the direct identification and quantification ofphysical properties of the former. thereby, the need for human input or largetraining datasets to inform supervised learning approaches is circumvented,while additionally enabling the automation of pixelwise shape and featurelabeling. in particular, we demonstrate that pauli spin blockade (psb)detection can be conducted effectively, efficiently and without any trainingdata as a direct result of this approach. ",
    "stories": [
        [
            "Bias triangles, also known as stability diagrams, are a key tool for understanding the behavior of quantum dot devices in spin physics. However, the quality and availability of data can make it challenging to analyze these diagrams effectively. In addition, the physical phenomena of interest can be subtle and difficult to detect, which can often require human labeling and verification. To address these challenges, we propose a feature extraction framework for bias triangles that is based on unsupervised, segmentation-based computer vision methods. This approach enables the direct identification and quantification of physical properties without the need for human input or large training datasets. By automating the pixelwise shape and feature labeling, our framework can also facilitate the automation of Pauli spin blockade (PSB) detection. This approach is effective, efficient, and does not require any training data, making it an ideal tool for analyzing bias triangles and understanding the behavior of quantum dot devices in spin physics."
        ],
        [
            "Bias triangles, also known as stability diagrams, are a key tool for understanding the behavior of quantum dot devices in spin physics. However, the quality and availability of data can make it challenging to analyze these diagrams effectively. In addition, the physical phenomena of interest can be subtle and difficult to detect, which can often require human labeling and verification. To address these challenges, we propose a feature extraction framework for bias triangles that is based on unsupervised, segmentation-based computer vision methods. This approach enables the direct identification and quantification of physical properties without the need for human input or large training datasets. By automating the pixelwise shape and feature labeling, our framework can also facilitate the automation of Pauli spin blockade (PSB) detection. This approach is effective, efficient, and does not require any training data, making it an ideal tool for analyzing bias triangles and understanding the behavior of quantum dot devices in spin physics."
        ],
        [
            "Bias triangles are a useful tool for studying the properties of quantum dots in spin physics. However, the quality and availability of data can make it challenging to analyze these diagrams effectively. In addition, the physical phenomena of interest can be subtle and difficult to detect, which often requires human labeling and verification. To address these challenges, we propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This approach enables the direct identification and quantification of physical properties without the need for human input or large training datasets. By automating the pixelwise shape and feature labeling, our framework can also facilitate the automation of Pauli spin blockade (PSB) detection. This approach is effective, efficient, and does not require any training data, making it an ideal tool for analyzing bias triangles and understanding the behavior of quantum dot devices in spin physics."
        ],
        [
            "Bias triangles are a useful tool for studying the properties of quantum dots in spin physics. However, the quality and availability of data can make it challenging to analyze these diagrams effectively. In addition, the physical phenomena of interest can be subtle and difficult to detect, which often requires human labeling and verification. To address these challenges, we propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This approach enables the direct identification and quantification of physical properties without the need for human input or large training datasets. By automating the pixelwise shape and feature labeling, our framework can also facilitate the automation of Pauli spin blockade (PSB) detection. This approach is effective, efficient, and does not require any training data, making it an ideal tool for analyzing bias triangles and understanding the behavior of quantum dot devices in spin physics."
        ],
        [
            "Bias triangles are a valuable tool for studying the properties of quantum dots in spin physics. However, the quality and availability of data can make it difficult to analyze these diagrams effectively. In addition, the physical phenomena of interest can be subtle and hard to detect, which often requires human labeling and verification. To address these challenges, we propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This approach allows the direct identification and quantification of physical properties without the need for human input or large training datasets. By automating the pixelwise shape and feature labeling, our framework can also facilitate the automation of Pauli spin blockade (PSB) detection. This approach is effective, efficient, and does not require any training data, making it an ideal tool for analyzing bias triangles and understanding the behavior of quantum dot devices in spin physics."
        ],
        [
            "Bias triangles are an invaluable tool for investigating the behavior of quantum dots in the field of spin physics. However, the quality and availability of data can make it challenging to effectively analyze these diagrams. In addition, the physical phenomena of interest can be subtle and difficult to detect, often requiring human labeling and verification. To overcome these obstacles, we present a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This approach allows the direct identification and quantification of physical properties without the need for human input or large training datasets. By automating the pixelwise shape and feature labeling, our framework can also facilitate the automation of Pauli spin blockade (PSB) detection. This approach is effective, efficient, and does not require any training data, making it a valuable tool for analyzing bias triangles and understanding the behavior of quantum dot devices in spin physics."
        ],
        [
            "Bias triangles are an important tool for studying the behavior of quantum dots in the field of spin physics. However, the quality and availability of data can make it difficult to analyze these diagrams. In addition, the physical phenomena of interest can be subtle and challenging to detect, often requiring human labeling and verification. To address these challenges, we present a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This approach allows for the direct identification and quantification of physical properties without the need for human input or large training datasets. By automating the pixelwise shape and feature labeling, our framework can also facilitate the automation of Pauli spin blockade (PSB) detection. This approach is effective, efficient, and does not require any training data, making it a valuable tool for analyzing bias triangles and understanding the behavior of quantum dot devices in spin physics."
        ],
        [
            "Bias triangles are an important tool for studying the behavior of quantum dots in the field of spin physics. However, the quality and availability of data can make it difficult to analyze these diagrams. In addition, the physical phenomena of interest can be subtle and challenging to detect, often requiring human labeling and verification. To address these challenges, we present a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This approach allows for the direct identification and quantification of physical properties without the need for human input or large training datasets. By automating the pixelwise shape and feature labeling, our framework can also facilitate the automation of Pauli spin blockade (PSB) detection. This approach is effective, efficient, and does not require any training data, making it a valuable tool for analyzing bias triangles and understanding the behavior of quantum dot devices in spin physics."
        ],
        [
            "Bias triangles are an important tool for studying the behavior of quantum dots in the field of spin physics. However, the quality and availability of data can make it difficult to analyze these diagrams. In addition, the physical phenomena of interest can be subtle and challenging to detect, often requiring human labeling and verification. To address these challenges, we present a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This approach allows for the direct identification and quantification of physical properties without the need for human input or large training datasets. By automating the pixelwise shape and feature labeling, our framework can also facilitate the automation of Pauli spin blockade (PSB) detection. This approach is effective, efficient, and does not require any training data, making it a valuable tool for analyzing bias triangles and understanding the behavior of quantum dot devices in spin physics."
        ],
        [
            "The use of bias triangles is a valuable tool for studying quantum dots in the field of spin physics. However, the quality and availability of data can make it difficult to analyze these diagrams. Additionally, the physical phenomena of interest can be subtle and challenging to detect, often requiring human labeling and verification. To address these challenges, we propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This approach allows for the direct identification and quantification of physical properties without the need for human input or large training datasets. By automating the pixelwise shape and feature labeling, our framework can also facilitate the automation of Pauli spin blockade (PSB) detection. This approach is effective, efficient, and does not require any training data, making it a valuable tool for analyzing bias triangles and understanding the behavior of quantum dot devices in spin physics."
        ],
        [
            "Bias triangles are an essential tool for studying quantum dots in spin physics, but the quality and availability of data can make it difficult to analyze these diagrams. The physical phenomena of interest can also be subtle and challenging to detect, often requiring human labeling and verification. To address these challenges, we propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This approach allows for the direct identification and quantification of physical properties without the need for human input or large training datasets. By automating the pixelwise shape and feature labeling, our framework can also facilitate the automation of Pauli spin blockade (PSB) detection. This approach is effective, efficient, and does not require any training data, making it a valuable tool for analyzing bias triangles and understanding the behavior of quantum dot devices in spin physics."
        ],
        [
            "Bias triangles are an essential tool for studying quantum dots in spin physics, but the quality and availability of data can make it difficult to analyze these diagrams. The physical phenomena of interest can also be subtle and challenging to detect, often requiring human labeling and verification. To address these challenges, we propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This approach allows for the direct identification and quantification of physical properties without the need for human input or large training datasets. By automating the pixelwise shape and feature labeling, our framework can also facilitate the automation of Pauli spin blockade (PSB) detection. This approach is effective, efficient, and does not require any training data, making it a valuable tool for analyzing bias triangles and understanding the behavior of quantum dot devices in spin physics."
        ],
        [
            "In the field of quantum dot spin physics, bias triangles are a crucial tool for studying the behavior of these devices. However, the quality and availability of data can make it difficult to analyze these diagrams, and the physical phenomena of interest can be subtle and challenging to detect. This often requires human labeling and verification, which can be time-consuming and resource-intensive.\nTo address these challenges, we propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This approach allows for the direct identification and quantification of physical properties without the need for human input or large training datasets. By automating the pixelwise shape and feature labeling, our framework can also facilitate the automation of Pauli spin blockade (PSB) detection.\nThis approach is effective, efficient, and does not require any training data, making it a valuable tool for analyzing bias triangles and understanding the behavior of quantum dot devices in spin physics. By automating the analysis process, researchers can save time and resources, and focus on the interpretation and application of their results."
        ],
        [
            "In the field of quantum dot spin physics, bias triangles are a vital tool for investigating the behavior of these devices. However, the quality and availability of data can make it difficult to interpret these diagrams, and the physical phenomena of interest can be subtle and challenging to detect. This often requires human labeling and verification, which can be time-consuming and resource-intensive.\nTo address these challenges, we propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This approach allows for the direct identification and quantification of physical properties without the need for human input or large training datasets. By automating the pixelwise shape and feature labeling, our framework can also facilitate the automation of Pauli spin blockade (PSB) detection.\nThis approach is effective, efficient, and does not require any training data, making it a valuable tool for analyzing bias triangles and understanding the behavior of quantum dot devices in spin physics. By automating the analysis process, researchers can save time and resources, and focus on the interpretation and application of their results."
        ],
        [
            "Quantum dot spin physics is a field that utilizes bias triangles to examine the behavior of these devices. However, the quality and availability of data can make it difficult to interpret these diagrams. Additionally, the physical phenomena of interest are often subtle and require human labeling and verification, which can be time-consuming and resource-intensive.\nTo overcome these challenges, we propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This approach allows for the direct identification and quantification of physical properties without the need for human input or large training datasets. By automating the pixelwise shape and feature labeling, our framework can also facilitate the automation of Pauli spin blockade (PSB) detection.\nThis approach is effective, efficient, and does not require any training data, making it a valuable tool for analyzing bias triangles and understanding the behavior of quantum dot devices in spin physics. By automating the analysis process, researchers can save time and resources, and focus on the interpretation and application of their results."
        ],
        [
            "Quantum dot spin physics involves using bias triangles to study the behavior of these devices, but the quality and availability of data can make it difficult to interpret these diagrams. Additionally, the physical phenomena of interest are often subtle and require human labeling and verification, which can be time-consuming and resource-intensive.\nTo address these challenges, we propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This approach allows for the direct identification and quantification of physical properties without the need for human input or large training datasets. By automating the pixelwise shape and feature labeling, our framework can also facilitate the automation of Pauli spin blockade (PSB) detection.\nThis approach is effective, efficient, and does not require any training data, making it a valuable tool for analyzing bias triangles and understanding the behavior of quantum dot devices in spin physics. By automating the analysis process, researchers can save time and resources, and focus on the interpretation and application of their results."
        ],
        [
            "Quantum dot spin physics involves using bias triangles to study the behavior of these devices, but the quality and availability of data can make it difficult to interpret these diagrams. Additionally, the physical phenomena of interest are often subtle and require human labeling and verification, which can be time-consuming and resource-intensive.\nTo address these challenges, we propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This approach allows for the direct identification and quantification of physical properties without the need for human input or large training datasets. By automating the pixelwise shape and feature labeling, our framework can also facilitate the automation of Pauli spin blockade (PSB) detection.\nThis approach is effective, efficient, and does not require any training data, making it a valuable tool for analyzing bias triangles and understanding the behavior of quantum dot devices in spin physics. By automating the analysis process, researchers can save time and resources, and focus on the interpretation and application of their results."
        ],
        [
            "Quantum dot spin physics involves using bias triangles to study the behavior of these devices, but the quality and availability of data can make it difficult to interpret these diagrams. Additionally, the physical phenomena of interest are often subtle and require human labeling and verification, which can be time-consuming and resource-intensive.\nTo address these challenges, we propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This approach allows for the direct identification and quantification of physical properties without the need for human input or large training datasets. By automating the pixelwise shape and feature labeling, our framework can also facilitate the automation of Pauli spin blockade (PSB) detection.\nThis approach is effective, efficient, and does not require any training data, making it a valuable tool for analyzing bias triangles and understanding the behavior of quantum dot devices in spin physics. By automating the analysis process, researchers can save time and resources, and focus on the interpretation and application of their results."
        ],
        [
            "The use of bias triangles to study the behavior of quantum dot spin physics is an essential technique, but the availability and quality of data can make interpretation difficult. In addition, the physical phenomena of interest are often subtle and require human labeling and verification, which can be time-consuming and resource-intensive.\nTo address these challenges, we propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This approach allows for the direct identification and quantification of physical properties without the need for human input or large training datasets. By automating the pixelwise shape and feature labeling, our framework can also facilitate the automation of Pauli spin blockade (PSB) detection.\nThis approach is effective, efficient, and does not require any training data, making it a valuable tool for analyzing bias triangles and understanding the behavior of quantum dot devices in spin physics. By automating the analysis process, researchers can save time and resources, and focus on the interpretation and application of their results."
        ],
        [
            "Bias triangles are commonly used to study the behavior of quantum dot spin physics, but the limited availability and quality of data can make it challenging to interpret the results. In addition, the physical phenomena being studied are often subtle and require manual labeling and verification, which can be time-consuming and resource-intensive.\n\nWe propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision techniques. This approach allows for the direct identification and quantification of physical properties without the need for human input or large training datasets. By automating the pixelwise shape and feature labeling, our framework can also facilitate the automation of Pauli spin blockade (PSB) detection.\n\nOur approach is effective, efficient, and does not require any training data, making it a valuable tool for analyzing bias triangles and understanding the behavior of quantum dot devices in spin physics. By automating the analysis process, researchers can save time and resources, and focus on interpreting and applying their results."
        ],
        [
            "Bias triangles are commonly used in quantum dot spin physics research, but interpreting the results can be challenging due to the limited availability and quality of data. Manual labeling and verification of the subtle physical phenomena being studied can also be time-consuming and resource-intensive.\n\nTo address these challenges, we propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision techniques. This approach allows for the direct identification and quantification of physical properties without the need for human input or large training datasets. By automating the pixelwise shape and feature labeling, our framework can also facilitate the automation of Pauli spin blockade (PSB) detection.\n\nOur approach is effective, efficient, and does not require any training data, making it a valuable tool for analyzing bias triangles and understanding the behavior of quantum dot devices in spin physics. By automating the analysis process, researchers can save time and resources, and focus on interpreting and applying their results."
        ],
        [
            "The use of bias triangles in quantum dot spin physics research is common, however interpreting the results can be challenging due to limited data availability and quality. Manual labeling and verification of subtle physical phenomena can also be time-consuming and resource-intensive.\n\nWe propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision techniques. This approach allows for direct identification and quantification of physical properties without the need for human input or large training datasets. Automating pixelwise shape and feature labeling facilitates the automation of Pauli spin blockade (PSB) detection.\n\nOur approach is effective, efficient, and does not require training data, making it a valuable tool for analyzing bias triangles and understanding quantum dot device behavior in spin physics. Automation of analysis saves time and resources, allowing researchers to focus on interpreting and applying their results."
        ],
        [
            "Bias triangles are commonly used in quantum dot spin physics research to interpret the results of experiments, but limited data availability and quality can make it challenging to do so. Manual labeling and verification of subtle physical phenomena can also be time-consuming and resource-intensive.\n\nWe propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision techniques. This approach allows for direct identification and quantification of physical properties without the need for human input or large training datasets. Automating pixelwise shape and feature labeling facilitates the automation of Pauli spin blockade (PSB) detection.\n\nOur approach is effective, efficient, and does not require training data, making it a valuable tool for analyzing bias triangles and understanding quantum dot device behavior in spin physics. Automation of analysis saves time and resources, allowing researchers to focus on interpreting and applying their results."
        ],
        [
            "Bias triangles are a valuable tool in quantum dot spin physics research, but the limited availability and quality of data can make it challenging to interpret the results of experiments. Manual labeling and verification of subtle physical phenomena can also be time-consuming and resource-intensive.\n\nTo address these challenges, we propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision techniques. This approach allows for direct identification and quantification of physical properties without the need for human input or large training datasets. By automating pixelwise shape and feature labeling, PSB detection can be automated, saving time and resources.\n\nOur approach is effective, efficient, and does not require training data, making it a valuable tool for analyzing bias triangles and understanding quantum dot device behavior in spin physics. Automation of analysis allows researchers to focus on interpreting and applying their results."
        ],
        [
            "Bias triangles are useful in quantum dot spin physics research, but limited data availability and quality can make interpretation challenging. Manual labeling and verification of subtle physical phenomena can be time-consuming and resource-intensive.\n\nTo address these challenges, we propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision techniques. This approach allows for direct identification and quantification of physical properties without human input or large training datasets. By automating pixelwise shape and feature labeling, PSB detection can be automated, saving time and resources.\n\nThis approach is effective, efficient, and does not require training data, making it a valuable tool for analyzing bias triangles and understanding quantum dot device behavior in spin physics. Automation of analysis allows researchers to focus on interpreting and applying their results."
        ],
        [
            "Bias triangles are a valuable tool in quantum dot spin physics research, but limited data availability and quality can make interpretation challenging. Manual labeling and verification of subtle physical phenomena can be time-consuming and resource-intensive.\n\nTo address these challenges, we propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision techniques. This approach allows for direct identification and quantification of physical properties without human input or large training datasets. By automating pixelwise shape and feature labeling, PSB detection can be automated, saving time and resources.\n\nThis approach is effective, efficient, and does not require training data, making it a valuable tool for analyzing bias triangles and understanding quantum dot device behavior in spin physics. Automation of analysis allows researchers to focus on interpreting and applying their results."
        ],
        [
            "Bias triangles are a useful tool in quantum dot spin physics research, but the limited availability and quality of data can make interpretation challenging. Manual labeling and verification of subtle physical phenomena can be time-consuming and resource-intensive.\n\nTo address these challenges, we propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision techniques. This approach allows for direct identification and quantification of physical properties without human input or large training datasets. By automating pixelwise shape and feature labeling, PSB detection can be automated, saving time and resources.\n\nThis approach is effective, efficient, and does not require training data, making it a valuable tool for analyzing bias triangles and understanding quantum dot device behavior in spin physics. Automation of analysis allows researchers to focus on interpreting and applying their results."
        ],
        [
            "Bias triangles are a useful tool in quantum dot spin physics research, but the limited availability and quality of data can make interpretation challenging. Manual labeling and verification of subtle physical phenomena can be time-consuming and resource-intensive.\n\nTo address these challenges, we propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision techniques. This approach allows for direct identification and quantification of physical properties without human input or large training datasets. By automating pixelwise shape and feature labeling, PSB detection can be automated, saving time and resources.\n\nThis approach is effective, efficient, and does not require training data, making it a valuable tool for analyzing bias triangles and understanding quantum dot device behavior in spin physics. Automation of analysis allows researchers to focus on interpreting and applying their results."
        ],
        [
            "In the field of quantum dot spin physics research, bias triangles are a useful tool. However, limited availability and quality of data can make interpretation challenging. Manual labeling and verification of subtle physical phenomena can be time-consuming and resource-intensive.\n\nTo address these challenges, we propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision techniques. This approach allows for direct identification and quantification of physical properties without human input or large training datasets. By automating pixelwise shape and feature labeling, PSB detection can be automated, saving time and resources.\n\nThis approach is effective, efficient, and does not require training data, making it a valuable tool for analyzing bias triangles and understanding quantum dot device behavior in spin physics. Automation of analysis allows researchers to focus on interpreting and applying their results."
        ],
        [
            "In the field of quantum dot spin physics research, bias triangles are a useful tool. However, limited availability and quality of data can make interpretation challenging. Manual labeling and verification of subtle physical phenomena can be time-consuming and resource-intensive.\n\nTo address these challenges, we propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision techniques. This approach allows for direct identification and quantification of physical properties without human input or large training datasets. By automating pixelwise shape and feature labeling, PSB detection can be automated, saving time and resources.\n\nThis approach is effective, efficient, and does not require training data, making it a valuable tool for analyzing bias triangles and understanding quantum dot device behavior in spin physics. Automation of analysis allows researchers to focus on interpreting and applying their results."
        ],
        [
            "Bias triangles are a useful tool in the field of quantum dot spin physics research. However, limited availability and quality of data can make interpretation challenging. Manual labeling and verification of subtle physical phenomena can be time-consuming and resource-intensive.\n\nTo address these challenges, we propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision techniques. This approach allows for direct identification and quantification of physical properties without human input or large training datasets. By automating pixelwise shape and feature labeling, PSB detection can be automated, saving time and resources.\n\nThis approach is effective, efficient, and does not require training data, making it a valuable tool for analyzing bias triangles and understanding quantum dot device behavior in spin physics. Automation of analysis allows researchers to focus on interpreting and applying their results."
        ],
        [
            "Bias triangles are an important tool in the study of quantum dot spin physics, but their limited availability and quality can make interpretation difficult. Manual labeling and verification of subtle physical phenomena can be time-consuming and resource-intensive.\n\nWe propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision techniques. This approach allows for direct identification and quantification of physical properties without human input or large training datasets. By automating pixelwise shape and feature labeling, PSB detection can be automated, saving time and resources.\n\nOur approach is effective, efficient, and does not require training data, making it a valuable tool for analyzing bias triangles and understanding quantum dot device behavior in spin physics. Automation of analysis allows researchers to focus on interpreting and applying their results."
        ],
        [
            "Bias triangles are an important tool in the study of quantum dot spin physics, but their limited availability and quality can make interpretation difficult. Manual labeling and verification of subtle physical phenomena can be time-consuming and resource-intensive.\n\nWe propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision techniques. This approach allows for direct identification and quantification of physical properties without human input or large training datasets. By automating pixelwise shape and feature labeling, PSB detection can be automated, saving time and resources.\n\nOur approach is effective, efficient, and does not require training data, making it a valuable tool for analyzing bias triangles and understanding quantum dot device behavior in spin physics. Automation of analysis allows researchers to focus on interpreting and applying their results."
        ],
        [
            "Bias triangles are an important tool in the study of quantum dot spin physics, but their limited availability and quality can make interpretation difficult. Manual labeling and verification of subtle physical phenomena can be time-consuming and resource-intensive.\n\nWe propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision techniques. This approach allows for direct identification and quantification of physical properties without human input or large training datasets. By automating pixelwise shape and feature labeling, PSB detection can be automated, saving time and resources.\n\nOur approach is effective, efficient, and does not require training data, making it a valuable tool for analyzing bias triangles and understanding quantum dot device behavior in spin physics. Automation of analysis allows researchers to focus on interpreting and applying their results."
        ],
        [
            "Bias triangles are an important tool in the study of quantum dot spin physics, but their limited availability and quality can make interpretation difficult. Manual labeling and verification of subtle physical phenomena can be time-consuming and resource-intensive.\n\nWe propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision techniques. This approach allows for direct identification and quantification of physical properties without human input or large training datasets. By automating pixelwise shape and feature labeling, PSB detection can be automated, saving time and resources.\n\nOur approach is effective, efficient, and does not require training data, making it a valuable tool for analyzing bias triangles and understanding quantum dot device behavior in spin physics. Automation of analysis allows researchers to focus on interpreting and applying their results."
        ],
        [
            "Bias triangles are an important tool in the study of quantum dot spin physics, but their limited availability and quality can make interpretation difficult. Manual labeling and verification of subtle physical phenomena can be time-consuming and resource-intensive.\n\nWe propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision techniques. This approach allows for direct identification and quantification of physical properties without human input or large training datasets. By automating pixelwise shape and feature labeling, PSB detection can be automated, saving time and resources.\n\nOur approach is effective, efficient, and does not require training data, making it a valuable tool for analyzing bias triangles and understanding quantum dot device behavior in spin physics. Automation of analysis allows researchers to focus on interpreting and applying their results."
        ],
        [
            "Bias triangles are an important tool in the study of quantum dot spin physics, but their limited availability and quality can make interpretation difficult. Manual labeling and verification of subtle physical phenomena can be time-consuming and resource-intensive.\n\nWe propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision techniques. This approach allows for direct identification and quantification of physical properties without human input or large training datasets. By automating pixelwise shape and feature labeling, PSB detection can be automated, saving time and resources.\n\nOur approach is effective, efficient, and does not require training data, making it a valuable tool for analyzing bias triangles and understanding quantum dot device behavior in spin physics. Automation of analysis allows researchers to focus on interpreting and applying their results."
        ],
        [
            "Bias triangles are an important tool in the study of quantum dot spin physics, but their limited availability and quality can make interpretation difficult. Manual labeling and verification of subtle physical phenomena can be time-consuming and resource-intensive.\n\nWe propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision techniques. This approach allows for direct identification and quantification of physical properties without human input or large training datasets. By automating pixelwise shape and feature labeling, PSB detection can be automated, saving time and resources.\n\nOur approach is effective, efficient, and does not require training data, making it a valuable tool for analyzing bias triangles and understanding quantum dot device behavior in spin physics. Automation of analysis allows researchers to focus on interpreting and applying their results."
        ],
        [
            "Bias triangles are a useful tool for studying quantum dot spin physics, but their limited availability and quality can make it difficult to interpret the results. Manually labeling and verifying subtle physical phenomena can be a time-consuming and resource-intensive process.\n\nWe propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision techniques. This approach allows for direct identification and quantification of physical properties without human input or large training datasets. By automating pixelwise shape and feature labeling, PSB detection can be automated, saving time and resources.\n\nOur approach is effective, efficient, and does not require training data, making it a valuable tool for analyzing bias triangles and understanding quantum dot device behavior in spin physics. Automation of analysis allows researchers to focus on interpreting and applying their results."
        ],
        [
            "Bias triangles are a useful tool for studying quantum dot spin physics, but their limited availability and quality can make it difficult to interpret the results. Manually labeling and verifying subtle physical phenomena can be a time-consuming and resource-intensive process.\n\nWe propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision techniques. This approach allows for direct identification and quantification of physical properties without human input or large training datasets. By automating pixelwise shape and feature labeling, PSB detection can be automated, saving time and resources.\n\nOur approach is effective, efficient, and does not require training data, making it a valuable tool for analyzing bias triangles and understanding quantum dot device behavior in spin physics. Automation of analysis allows researchers to focus on interpreting and applying their results."
        ],
        [
            "Bias triangles are a useful tool for studying quantum dot spin physics, but their limited availability and quality can make it difficult to interpret the results. Manually labeling and verifying subtle physical phenomena can be a time-consuming and resource-intensive process.\n\nWe propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision techniques. This approach allows for direct identification and quantification of physical properties without human input or large training datasets. By automating pixelwise shape and feature labeling, PSB detection can be automated, saving time and resources.\n\nOur approach is effective, efficient, and does not require training data, making it a valuable tool for analyzing bias triangles and understanding quantum dot device behavior in spin physics. Automation of analysis allows researchers to focus on interpreting and applying their results."
        ],
        [
            "Bias triangles are a valuable tool for researching quantum dot spin physics, but their scarcity and quality can impede the interpretation of results. The manual labeling and verification of subtle physical phenomena can be a lengthy and resource-intensive endeavor.\n\nWe present a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This approach facilitates the direct identification and quantification of physical properties without human input or large training datasets. Through the automation of pixelwise shape and feature labeling, PSB detection can be automated, resulting in time and resource savings.\n\nOur approach is effective, efficient, and does not necessitate training data, rendering it a useful tool for the analysis of bias triangles and the comprehension of quantum dot device behavior in spin physics. The automation of analysis enables researchers to concentrate on interpreting and applying their findings."
        ],
        [
            "Bias triangles are a valuable tool for researching quantum dot spin physics, but their scarcity and quality can impede the interpretation of results. The manual labeling and verification of subtle physical phenomena can be a lengthy and resource-intensive endeavor.\n\nWe present a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This approach facilitates the direct identification and quantification of physical properties without human input or large training datasets. Through the automation of pixelwise shape and feature labeling, PSB detection can be automated, resulting in time and resource savings.\n\nOur approach is effective, efficient, and does not necessitate training data, rendering it a useful tool for the analysis of bias triangles and the comprehension of quantum dot device behavior in spin physics. The automation of analysis enables researchers to concentrate on interpreting and applying their findings."
        ],
        [
            "Bias triangles are a valuable tool for researching quantum dot spin physics, but their scarcity and quality can impede the interpretation of results. The manual labeling and verification of subtle physical phenomena can be a lengthy and resource-intensive endeavor.\n\nWe present a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This approach facilitates the direct identification and quantification of physical properties without human input or large training datasets. Through the automation of pixelwise shape and feature labeling, PSB detection can be automated, resulting in time and resource savings.\n\nOur approach is effective, efficient, and does not necessitate training data, rendering it a useful tool for the analysis of bias triangles and the comprehension of quantum dot device behavior in spin physics. The automation of analysis enables researchers to concentrate on interpreting and applying their findings."
        ],
        [
            "Bias triangles are useful for exploring quantum dot spin physics, but they are not always available or of high quality. The manual labeling and verification of subtle physical phenomena can be time-consuming and resource-intensive.\n\nWe propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This approach allows for the direct identification and quantification of physical properties without human input or large training datasets. Through the automation of pixelwise shape and feature labeling, PSB detection can be automated, resulting in time and resource savings.\n\nOur approach is effective, efficient, and does not require training data, making it a valuable tool for the analysis of bias triangles and the understanding of quantum dot device behavior in spin physics. The automation of analysis enables researchers to focus on interpreting and applying their findings."
        ],
        [
            "Bias triangles are useful for exploring quantum dot spin physics, but they are not always available or of high quality. The manual labeling and verification of subtle physical phenomena can be time-consuming and resource-intensive.\n\nWe propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This approach allows for the direct identification and quantification of physical properties without human input or large training datasets. Through the automation of pixelwise shape and feature labeling, PSB detection can be automated, resulting in time and resource savings.\n\nOur approach is effective, efficient, and does not require training data, making it a valuable tool for the analysis of bias triangles and the understanding of quantum dot device behavior in spin physics. The automation of analysis enables researchers to focus on interpreting and applying their findings."
        ],
        [
            "Bias triangles are an essential tool for studying the spin physics of quantum dots, but they are not always readily available or of high quality. Manually labeling and verifying subtle physical phenomena can be time-consuming and resource-intensive. To address this, we propose a feature extraction framework for bias triangles based on unsupervised, segmentation-based computer vision methods. This approach allows for the direct identification and quantification of physical properties without human input or large training datasets. Through the automation of pixelwise shape and feature labeling, PSB detection can be automated, resulting in significant time and resource savings. Our approach is effective, efficient, and does not require training data, making it a valuable tool for analyzing bias triangles and understanding quantum dot device behavior in spin physics. The automation of analysis enables researchers to focus on interpreting and applying their findings."
        ],
        [
            "Bias triangles are important tools for investigating the spin physics of quantum dots, but they can be difficult to obtain or of poor quality. Manually identifying and verifying subtle physical phenomena can be time-consuming and require a lot of resources. To address this, we propose a feature extraction framework for bias triangles that uses unsupervised, segmentation-based computer vision methods. This approach allows for the direct identification and quantification of physical properties without human input or large training datasets. By automating pixelwise shape and feature labeling, PSB detection can be automated, saving time and resources. Our approach is effective, efficient, and does not require training data, making it a valuable tool for analyzing bias triangles and understanding quantum dot device behavior in spin physics. The automation of analysis enables researchers to focus on interpreting and applying their findings."
        ],
        [
            "Bias triangles are important tools for investigating the spin physics of quantum dots, but they can be difficult to obtain or of poor quality. Manually identifying and verifying subtle physical phenomena can be time-consuming and require a lot of resources. To address this, we propose a feature extraction framework for bias triangles that uses unsupervised, segmentation-based computer vision methods. This approach allows for the direct identification and quantification of physical properties without human input or large training datasets. By automating pixelwise shape and feature labeling, PSB detection can be automated, saving time and resources. Our approach is effective, efficient, and does not require training data, making it a valuable tool for analyzing bias triangles and understanding quantum dot device behavior in spin physics. The automation of analysis enables researchers to focus on interpreting and applying their findings."
        ],
        [
            "Bias triangles are essential for exploring spin physics in quantum dots, but obtaining quality triangles can be difficult. Manual identification and verification of subtle physical phenomena can be time-consuming and resource-intensive. To address this, we propose a feature extraction framework for bias triangles using unsupervised, segmentation-based computer vision methods. This approach enables the direct identification and quantification of physical properties without human input or large training datasets. Automating pixelwise shape and feature labeling allows for efficient PSB detection, saving time and resources. Our approach is effective and efficient, and does not require training data. By automating analysis, researchers can focus on interpreting and applying their findings to understand quantum dot device behavior in spin physics."
        ]
    ]
}