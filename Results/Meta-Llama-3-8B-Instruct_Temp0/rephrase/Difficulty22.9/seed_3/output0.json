{
    "adjacency_matrix": [
        [
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0
        ]
    ],
    "prompt_init": [
        "You will receive a text. Your task is to rephrase this text without modifying its meaning. Just output your new text, nothing else. Here is the text:"
    ],
    "prompt_update": [
        "You will receive a text. Your task is to rephrase this text without modifying its meaning. Just output your new text, nothing else. Here is the text:"
    ],
    "personality_list": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "format_prompt": [
        ""
    ],
    "initial_story": "musculoskeletal diseases and cognitive impairments in patients lead todifficulties in movement as well as negative effects on their psychologicalhealth. clinical gait analysis, a vital tool for early diagnosis and treatment,traditionally relies on expensive optical motion capture systems. recentadvances in computer vision and deep learning have opened the door to moreaccessible and cost-effective alternatives. this paper introduces a novelspatio-temporal transformer network to estimate critical gait parameters fromrgb videos captured by a single-view camera. empirical evaluations on a publicdataset of cerebral palsy patients indicate that the proposed frameworksurpasses current state-of-the-art approaches and show significant improvementsin predicting general gait parameters (including walking speed, gait deviationindex - gdi, and knee flexion angle at maximum extension), while utilizingfewer parameters and alleviating the need for manual feature extraction. ",
    "stories": [
        [
            "Here is the rephrased text:\n\nMusculoskeletal diseases and cognitive impairments in patients can cause difficulties in movement and negatively impact their mental well-being. Traditional clinical gait analysis, which is crucial for early diagnosis and treatment, often relies on expensive optical motion capture systems. However, recent advancements in computer vision and deep learning have made it possible to develop more accessible and cost-effective alternatives. This paper presents a novel spatio-temporal transformer network that can estimate essential gait parameters from RGB videos captured by a single camera. Experimental results on a public dataset of cerebral palsy patients demonstrate that the proposed framework outperforms current state-of-the-art methods and shows significant improvements in predicting key gait parameters, such as walking speed, gait deviation index, and knee flexion angle, while requiring fewer parameters and eliminating the need for manual feature extraction."
        ],
        [
            "Here is the rephrased text:\n\nPatients with musculoskeletal diseases and cognitive impairments often struggle with movement and mental well-being. Traditional gait analysis, essential for early diagnosis and treatment, typically relies on expensive technology. However, recent advancements in computer vision and deep learning have made it possible to develop more affordable alternatives. This paper introduces a new network that uses a single camera to estimate key gait parameters from video footage. Experimental results on a public dataset of cerebral palsy patients show that this approach outperforms current methods, accurately predicting walking speed, gait deviation, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have enabled the development of more budget-friendly alternatives. This study presents a novel network that utilizes a single camera to estimate vital gait metrics from video recordings. Experimental findings on a publicly available dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking pace, gait irregularities, and knee angle while necessitating fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible alternatives. This study presents a novel network that utilizes a single camera to calculate vital gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking speed, gait abnormalities, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible alternatives. This study presents a novel network that utilizes a single camera to calculate vital gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking speed, gait abnormalities, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible alternatives. This study presents a novel network that utilizes a single camera to calculate vital gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking speed, gait abnormalities, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible alternatives. This study presents a novel network that utilizes a single camera to calculate vital gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking speed, gait abnormalities, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible alternatives. This study presents a novel network that utilizes a single camera to calculate vital gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking speed, gait abnormalities, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible alternatives. This study presents a novel network that utilizes a single camera to calculate vital gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking speed, gait abnormalities, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible alternatives. This study presents a novel network that utilizes a single camera to calculate vital gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking speed, gait abnormalities, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible alternatives. This study presents a novel network that utilizes a single camera to calculate vital gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking speed, gait abnormalities, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible alternatives. This study presents a novel network that utilizes a single camera to calculate vital gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking speed, gait abnormalities, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible alternatives. This study presents a novel network that utilizes a single camera to calculate vital gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking speed, gait abnormalities, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible alternatives. This study presents a novel network that utilizes a single camera to calculate vital gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking speed, gait abnormalities, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible alternatives. This study presents a novel network that utilizes a single camera to calculate vital gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking speed, gait abnormalities, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible alternatives. This study presents a novel network that utilizes a single camera to calculate vital gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking speed, gait abnormalities, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible alternatives. This study presents a novel network that utilizes a single camera to calculate vital gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking speed, gait abnormalities, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible alternatives. This study presents a novel network that utilizes a single camera to calculate vital gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking speed, gait abnormalities, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible alternatives. This study presents a novel network that utilizes a single camera to calculate vital gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking speed, gait abnormalities, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible alternatives. This study presents a novel network that utilizes a single camera to calculate vital gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking speed, gait abnormalities, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible alternatives. This study presents a novel network that utilizes a single camera to calculate vital gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking speed, gait abnormalities, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible alternatives. This study presents a novel network that utilizes a single camera to calculate vital gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking speed, gait abnormalities, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible alternatives. This study presents a novel network that utilizes a single camera to calculate vital gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking speed, gait abnormalities, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible alternatives. This study presents a novel network that utilizes a single camera to calculate vital gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking speed, gait abnormalities, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible alternatives. This study presents a novel network that utilizes a single camera to calculate vital gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking speed, gait abnormalities, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ],
        [
            "Individuals with musculoskeletal disorders and cognitive impairments frequently face challenges with mobility and mental health. Conventional gait analysis, crucial for timely diagnosis and treatment, typically relies on costly equipment. Nevertheless, breakthroughs in computer vision and deep learning have led to the development of more accessible alternatives. This study presents a novel network that utilizes a single camera to calculate vital gait metrics from video recordings. Experimental findings on a publicly accessible dataset of cerebral palsy patients demonstrate that this approach surpasses existing methods, accurately forecasting walking speed, gait abnormalities, and knee angle while requiring fewer parameters and eliminating manual feature extraction."
        ],
        [
            "People with musculoskeletal disorders and cognitive impairments often struggle with mobility and mental well-being. Traditional gait analysis, essential for prompt diagnosis and treatment, usually requires expensive equipment. However, advancements in computer vision and deep learning have led to the creation of more affordable alternatives. This research introduces a new network that uses a single camera to calculate essential gait metrics from video recordings. Experimental results on a publicly available dataset of cerebral palsy patients show that this approach outperforms existing methods, accurately predicting walking speed, gait irregularities, and knee angle while needing fewer parameters and eliminating manual feature extraction."
        ]
    ]
}